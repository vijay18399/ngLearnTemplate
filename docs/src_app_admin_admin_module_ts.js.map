{"version":3,"file":"src_app_admin_admin_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;AACuD;AACJ;AACmC;AACN;AACT;;;AAGvE,MAAMK,MAAM,GAAW,CACrB;EACEC,IAAI,EAAC,EAAE;EAAEC,SAAS,EAACN,4DAAc;EACjCO,QAAQ,EAAC,CACP;IACEF,IAAI,EAAE,EAAE;IACRC,SAAS,EAACJ,yFAAqBA;GAChC,EACD;IACEG,IAAI,EAAE,OAAO;IACbC,SAAS,EAACH,gFAAkBA;GAC7B,EACD;IACEE,IAAI,EAAC,QAAQ;IACbC,SAAS,EAACL,+FAAuBA;GAClC;CAEJ,CAEF;AAMK,MAAOO,kBAAkB;AAAlBA,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA;AAAkB;AAAlBA,kBAAkB;YAHnBT,kEAAqB,CAACK,MAAM,CAAC,EAC7BL,yDAAY;AAAA;;sHAEXS,kBAAkB;IAAAE,UAAAA,yDAAAA;IAAAC,UAFnBZ,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACxBlB,MAAOC,cAAc;AAAdA,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCLvBC,4DAAAA,qBAA6C;MAE6BA,uDAAAA,WAA0B;MAACA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAI;MAS9GA,4DAAAA,aAA0B;MAGTA,oDAAAA,oBAAa;MAAAA,0DAAAA,EAAW;MACnCA,4DAAAA,gBAAc;MAAAA,oDAAAA,iBAAS;MAAAA,0DAAAA,EAAQ;MAEjCA,4DAAAA,iBAA2D;MAC9CA,oDAAAA,cAAM;MAAAA,0DAAAA,EAAW;MAC5BA,4DAAAA,gBAAc;MAAAA,oDAAAA,aAAK;MAAAA,0DAAAA,EAAQ;MAE7BA,4DAAAA,iBAA4D;MAC/CA,oDAAAA,iBAAS;MAAAA,0DAAAA,EAAW;MAC/BA,4DAAAA,gBAAc;MAAAA,oDAAAA,cAAM;MAAAA,0DAAAA,EAAQ;MAIhCA,4DAAAA,eAA0B;MAExBA,uDAAAA,qBAA+B;MACjCA,0DAAAA,EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BiC;AACI;AACoB;AACS;AACM;AAClC;AACc;AAC1B;AACgB;AACI;;AAoBtD,MAAOO,WAAW;AAAXA,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;QAAXA;AAAW;AAAXA,WAAW;YATpBN,yDAAY,EACZE,uDAAW,EACXD,4DAAc,EACdI,kEAAc,EACdD,mDAAW,EACXD,+DAAmB,EACnBb,qEAAkB;AAAA;;sHAGTgB,WAAW;IAAAC,eAfpBzB,4DAAc,EACdG,gFAAkB,EAClBD,yFAAqB,EACrBD,+FAAuB;IAAAS,UAGvBQ,yDAAY,EACZE,uDAAW,EACXD,4DAAc,EACdI,kEAAc,EACdD,mDAAW,EACXD,+DAAmB,EACnBb,qEAAkB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AC1B0D;AACV;;;;;;;;;;;;;;;ICDlES,4DAAAA,kBAA0C;IAEvBA,oDAAAA,iBAAU;IAAAA,0DAAAA,EAAY;IACjCA,uDAAAA,eAAkE;IACtEA,0DAAAA,EAAiB;IACjBA,4DAAAA,wBAA2C;IAC5BA,oDAAAA,qBAAc;IAAAA,0DAAAA,EAAY;IACrCA,uDAAAA,eAAsE;IAC1EA,0DAAAA,EAAiB;IACjBA,4DAAAA,wBAA2C;IAC5BA,oDAAAA,0BAAkB;IAAAA,0DAAAA,EAAY;IACzCA,4DAAAA,mBACsC;IAAAA,oDAAAA,8BAAsB;IAAAA,0DAAAA,EAAW;IAG3EA,4DAAAA,iBAAgD;IAAxCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,mBAAW;IAAA,EAAC;IAAmBA,oDAAAA,mBAAW;IAAAA,0DAAAA,EAAS;;;;;;IAK5DA,4DAAAA,mBAC8E;IAA5BA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,2BAAgB;IAAA,EAAC;IACxEA,4DAAAA,mBAAwB;IAAAA,oDAAAA,qBAAc;IAAAA,0DAAAA,EAAW;IAChDA,4DAAAA,QAAG;IAACA,oDAAAA,GAAiC;IAAAA,0DAAAA,EAAI;IAC1CA,4DAAAA,mBAAmD;IAA5BA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,4BAAgB;IAAA,EAAC;IAAEA,oDAAAA,aAAM;IAAAA,0DAAAA,EAAW;;;;;;;IAHpEA,yDAAAA,kDAA6C;IAExCA,uDAAAA,GAAiC;IAAjCA,gEAAAA,6EAAiC;;;;;IASlDA,4DAAAA,cAAmD;IAC7CA,oDAAAA,2BAAoB;IAAAA,0DAAAA,EAAI;;;;;IAE9BA,4DAAAA,eAA0F;IAEvEA,oDAAAA,YAAK;IAAAA,0DAAAA,EAAY;IAC5BA,uDAAAA,gBAA2E;IAC/EA,0DAAAA,EAAiB;IACjBA,4DAAAA,cAAyB;IACrBA,uDAAAA,uBAA6E;IACjFA,0DAAAA,EAAM;;;;IAP6BA,wDAAAA,qCAA6B;IAM9CA,uDAAAA,GAAmB;IAAnBA,wDAAAA,2BAAmB;;;;;;IAxB7CA,4DAAAA,aAAiD;IAExBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAsBA,yDAAAA,uBAAc;IAAA,EAAC;IAClDA,wDAAAA,4EAKW;IACfA,0DAAAA,EAAM;IACNA,4DAAAA,cAAqB;IACTA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,sBAAa;IAAA,EAAC;IAAcA,oDAAAA,gBAAQ;IAAAA,0DAAAA,EAAS;IAC9DA,4DAAAA,iBAA2C;IAAvBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,qBAAY;IAAA,EAAC;IAAEA,4DAAAA,eAAU;IAAAA,oDAAAA,UAAG;IAAAA,0DAAAA,EAAW;IAAAA,oDAAAA,oBAAY;IAAAA,0DAAAA,EAAS;IAGjGA,wDAAAA,oEAEM;IACNA,wDAAAA,sEAQO;IACXA,0DAAAA,EAAM;;;;IAxB6DA,uDAAAA,GAAsB;IAAtBA,wDAAAA,qCAAsB;IAY/EA,uDAAAA,GAA+B;IAA/BA,wDAAAA,0CAA+B;IAG9BA,uDAAAA,GAA8B;IAA9BA,wDAAAA,yCAA8B;;;AD1BvC,MAAOhB,uBAAuB;EAwBjC6B,YAAmBC,MAAiB;IAAjB,WAAM,GAANA,MAAM;IArB1B,cAAS,GAAY,IAAI;IACzB,YAAO,GAAG;MACRC,kBAAkB,EAAE,aAAa;MACjCC,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE,CACT,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,CAAC,EACzC,CAAC,YAAY,EAAE,YAAY,CAAC,EAC5B,CAAC;QAAE,QAAQ,EAAE;MAAC,CAAE,EAAE;QAAE,QAAQ,EAAE;MAAC,CAAE,CAAC,EAClC,CAAC;QAAE,MAAM,EAAE;MAAS,CAAE,EAAE;QAAE,MAAM,EAAE;MAAQ,CAAE,CAAC,EAC7C,CAAC;QAAE,QAAQ,EAAE;MAAK,CAAE,EAAE;QAAE,QAAQ,EAAE;MAAO,CAAE,CAAC,EAC5C,CAAC;QAAE,QAAQ,EAAE;MAAI,CAAE,EAAE;QAAE,QAAQ,EAAE;MAAI,CAAE,CAAC,EACxC,CAAC;QAAE,WAAW,EAAE;MAAK,CAAE,CAAC,EACxB,CAAC;QAAE,MAAM,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM;MAAC,CAAE,CAAC,EAC/C,CAAC;QAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK;MAAC,CAAE,CAAC,EACzC,CAAC;QAAE,OAAO,EAAE;MAAE,CAAE,EAAE;QAAE,YAAY,EAAE;MAAE,CAAE,CAAC,EACvC,CAAC;QAAE,MAAM,EAAE;MAAE,CAAE,CAAC,EAChB,CAAC;QAAE,OAAO,EAAE;MAAE,CAAE,CAAC,EACjB,CAAC,OAAO,CAAC,EACT,CAAC,MAAM,EAAE,OAAO,CAAC,CAAE;MAAA;KAElB;;IAED,IAAI,CAACC,QAAQ,GAAG,IAAIP,qDAAS,CAAC;MAC5BQ,KAAK,EAAE,IAAIT,uDAAW,CAAC,aAAa,CAAC;MACrCU,KAAK,EAAE,IAAIV,uDAAW,CAAC,EAAE,CAAC;MAC1BW,KAAK,EAAE,IAAIX,uDAAW,CAAC,EAAE,CAAC;MAC1BY,QAAQ,EAAE,IAAIb,qDAAS,CACrB,IAAI,CAACc,kBAAkB,EAAE;KAE5B,CAAC;IACF,IAAI,CAACC,oBAAoB,GAAG,CAAC;EAC/B;EACAC,IAAI,CAACC,KAAU;IACbd,uEAAe,CAAC,IAAI,CAACU,QAAQ,CAACK,QAAQ,EAAED,KAAK,CAACE,aAAa,EAAEF,KAAK,CAACG,YAAY,CAAC;EAClF;EACAC,QAAQ,IACR;EACAP,kBAAkB;IAChB,IAAID,QAAQ,GAAC,EAAE;IACf,IAAIS,OAAO,GAAG,IAAIpB,qDAAS,CAAC;MAC1BQ,KAAK,EAAE,IAAIT,uDAAW,CAAC,cAAc,CAAC;MACtCqB,OAAO,EAAE,IAAIrB,uDAAW,CAAC,EAAE;KAC5B,CAAC;IACF,IAAIsB,QAAQ,GAAG,IAAIrB,qDAAS,CAAC;MAC3BQ,KAAK,EAAE,IAAIT,uDAAW,CAAC,YAAY,CAAC;MACpCqB,OAAO,EAAE,IAAIrB,uDAAW,CAAC,EAAE;KAC5B,CAAC;IACFY,QAAQ,CAACW,IAAI,CAACF,OAAO,CAAC;IACtBT,QAAQ,CAACW,IAAI,CAACD,QAAQ,CAAC;IACvB,OAAOV,QAAQ;EACjB;EACAY,sBAAsB,CAACC,EAAS;IAC9B,OAAO,IAAIxB,qDAAS,CAAC;MACnBQ,KAAK,EAAE,IAAIT,uDAAW,CAAC,iBAAiB,IAAEyB,EAAE,GAAC,CAAC,CAAC,CAAC;MAChDJ,OAAO,EAAE,IAAIrB,uDAAW,CAAC,EAAE;KAC5B,CAAC;EACJ;EAEA0B,UAAU;IACR,MAAMd,QAAQ,GAAG,IAAI,CAACJ,QAAQ,CAACmB,GAAG,CAAC,UAAU,CAAc;IAC3Df,QAAQ,CAACW,IAAI,CAAC,IAAI,CAACC,sBAAsB,CAACZ,QAAQ,CAACgB,MAAM,CAAC,CAAC;IAC3D,IAAI,CAACd,oBAAoB,GAAGF,QAAQ,CAACgB,MAAM,GAAG,CAAC;EACjD;EAEAC,aAAa,CAACC,KAAa;IACzB,IAAI,CAAChB,oBAAoB,GAAGgB,KAAK;EACnC;EAEA,IAAIC,eAAe;IACjB,MAAMnB,QAAQ,GAAG,IAAI,CAACJ,QAAQ,CAACmB,GAAG,CAAC,UAAU,CAAc;IAC3D,OAAOf,QAAQ,CAACoB,EAAE,CAAC,IAAI,CAAClB,oBAAoB,CAAc;EAC5D;EAEA,IAAIL,KAAK;IACP,OAAO,IAAI,CAACD,QAAQ,CAACmB,GAAG,CAAC,OAAO,CAAgB;EAClD;EAEA,IAAIM,QAAQ;IACV,OAAO,IAAI,CAACzB,QAAQ,CAACmB,GAAG,CAAC,UAAU,CAAgB;EACrD;EAEA,IAAIhB,KAAK;IACP,OAAO,IAAI,CAACH,QAAQ,CAACmB,GAAG,CAAC,OAAO,CAAgB;EAClD;EAEA,IAAIf,QAAQ;IACV,OAAO,IAAI,CAACJ,QAAQ,CAACmB,GAAG,CAAC,UAAU,CAAc;EACnD;EAEAO,QAAQ;IACN;EAAA;EAEFC,SAAS;IACP,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACV,UAAU,EAAE;EACnB;EACAW,aAAa,CAACP,KAAa;IACzB,IAAI,CAAClB,QAAQ,CAAC0B,QAAQ,CAACR,KAAK,CAAC;EAC/B;EACAS,MAAM,CAACvB,KAAU;IACfd,uEAAe,CAAC,IAAI,CAACU,QAAQ,CAACK,QAAQ,EAAED,KAAK,CAACE,aAAa,EAAEF,KAAK,CAACG,YAAY,CAAC;EAClF;EACAqB,WAAW,IAEX;;AA3GWlE,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVpCC,4DAAAA,cAA+C;MAC3CA,wDAAAA,sEAgBW;MACXA,wDAAAA,4DA2BM;MAEVA,0DAAAA,EAAO;;;MA/CDA,wDAAAA,2BAAsB;MACbA,uDAAAA,GAAgB;MAAhBA,wDAAAA,wBAAgB;MAiBrBA,uDAAAA,GAAe;MAAfA,wDAAAA,uBAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICVnBA,4DAAAA,aAAsC;IAACA,oDAAAA,YAAI;IAAAA,0DAAAA,EAAK;;;;;IAChDA,4DAAAA,aAAuC;IAACA,oDAAAA,GAAqB;IAAAA,0DAAAA,EAAK;;;;IAA1BA,uDAAAA,GAAqB;IAArBA,gEAAAA,gCAAqB;;;;;IAK7DA,4DAAAA,aAAsC;IAACA,oDAAAA,aAAK;IAAAA,0DAAAA,EAAK;;;;;IACjDA,4DAAAA,aAAuC;IAACA,oDAAAA,GAAiB;IAAAA,0DAAAA,EAAK;;;;IAAtBA,uDAAAA,GAAiB;IAAjBA,gEAAAA,4BAAiB;;;;;IAKzDA,4DAAAA,aAAsC;IAACA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAK;;;;;IACnDA,4DAAAA,aAAuC;IAACA,oDAAAA,GAAmB;IAAAA,0DAAAA,EAAK;;;;IAAxBA,uDAAAA,GAAmB;IAAnBA,gEAAAA,8BAAmB;;;;;IAK3DA,4DAAAA,aAAsC;IAACA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAK;;;;;IACnDA,4DAAAA,aAAuC;IACrCA,uDAAAA,uBAAqC;IACvCA,0DAAAA,EAAK;;;;;IAGPA,uDAAAA,aAA4D;;;;;IAC5DA,uDAAAA,aAAkE;;;ACpBhE,MAAOf,qBAAqB;EALlC4B;IAME,UAAK,GAAiB,QAAQ;IAC9B,YAAO,GAAG,KAAK;IACf,aAAQ,GAAG,KAAK;IAChB,eAAU,GAAsB,CAC9B;MAACsC,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,UAAU;MAAEC,MAAM,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAG,CAAC,EAC5D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC,EAC3D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAI,CAAC,EAC3D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEC,MAAM,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC,EAC9D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,MAAM,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAG,CAAC,EACzD;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAG,CAAC,EAC3D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,UAAU;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAG,CAAC,EAC7D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAG,CAAC,EAC3D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,UAAU;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAG,CAAC,EAC7D;MAACH,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAI,CAAC,CAC5D;IACD,qBAAgB,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC;;;AAhB1DrE,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZlCC,4DAAAA,eAAoE;MAMhEA,qEAAAA,MAAsC;MACpCA,wDAAAA,uDAAgD;MAChDA,wDAAAA,uDAAkE;MACpEA,mEAAAA,EAAe;MAGfA,qEAAAA,MAAkC;MAChCA,wDAAAA,uDAAiD;MACjDA,wDAAAA,uDAA8D;MAChEA,mEAAAA,EAAe;MAGfA,qEAAAA,MAAoC;MAClCA,wDAAAA,uDAAmD;MACnDA,wDAAAA,uDAAgE;MAClEA,mEAAAA,EAAe;MAGfA,qEAAAA,OAAoC;MAClCA,wDAAAA,yDAAmD;MACnDA,wDAAAA,yDAEK;MACPA,mEAAAA,EAAe;MAEfA,wDAAAA,yDAA4D;MAC5DA,wDAAAA,yDAAkE;MACpEA,0DAAAA,EAAQ;MAERA,4DAAAA,cAAwB;MACoBA,oDAAAA,gBAAQ;MAAAA,0DAAAA,EAAS;MAC3DA,4DAAAA,kBAAyC;MAAAA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAS;;;MArCzCA,wDAAAA,8BAAyB;MA+BlBA,uDAAAA,IAAiC;MAAjCA,wDAAAA,yCAAiC;MACpBA,uDAAAA,GAA0B;MAA1BA,wDAAAA,0CAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;IE1BzDA,4DAAAA,aAAsC;IAACA,oDAAAA,YAAI;IAAAA,0DAAAA,EAAK;;;;;IAChDA,4DAAAA,aAAuC;IAACA,oDAAAA,GAAqB;IAAAA,0DAAAA,EAAK;;;;IAA1BA,uDAAAA,GAAqB;IAArBA,gEAAAA,gCAAqB;;;;;IAK7DA,4DAAAA,aAAsC;IAACA,oDAAAA,aAAK;IAAAA,0DAAAA,EAAK;;;;;IACjDA,4DAAAA,aAAuC;IAACA,oDAAAA,GAAiB;IAAAA,0DAAAA,EAAK;;;;IAAtBA,uDAAAA,GAAiB;IAAjBA,gEAAAA,4BAAiB;;;;;IAKzDA,4DAAAA,aAAsC;IAACA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAK;;;;;IACnDA,4DAAAA,aAAuC;IAACA,oDAAAA,GAAmB;IAAAA,0DAAAA,EAAK;;;;IAAxBA,uDAAAA,GAAmB;IAAnBA,gEAAAA,8BAAmB;;;;;IAK3DA,4DAAAA,aAAsC;IAACA,oDAAAA,eAAO;IAAAA,0DAAAA,EAAK;;;;;IACnDA,4DAAAA,aAAuC;IAACA,oDAAAA,GAAmB;IAAAA,0DAAAA,EAAK;;;;IAAxBA,uDAAAA,GAAmB;IAAnBA,gEAAAA,8BAAmB;;;;;IAG7DA,uDAAAA,aAA4D;;;;;IAC5DA,uDAAAA,aAAkE;;;AClBhE,MAAOd,kBAAkB;EAL/B2B;IAME,eAAU,GAAsB,CAC9B;MAACsC,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,UAAU;MAAEC,MAAM,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAG,CAAC,EAC5D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC,EAC3D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAI,CAAC,EAC3D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEC,MAAM,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAC,EAC9D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,MAAM,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAG,CAAC,EACzD;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAG,CAAC,EAC3D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,UAAU;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAG,CAAC,EAC7D;MAACH,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAG,CAAC,CAC7D;IACA,qBAAgB,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC;;;AAX1DpE,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDZ/BC,4DAAAA,eAAoE;MAMhEA,qEAAAA,MAAsC;MACpCA,wDAAAA,oDAAgD;MAChDA,wDAAAA,oDAAkE;MACpEA,mEAAAA,EAAe;MAGfA,qEAAAA,MAAkC;MAChCA,wDAAAA,oDAAiD;MACjDA,wDAAAA,oDAA8D;MAChEA,mEAAAA,EAAe;MAGfA,qEAAAA,MAAoC;MAClCA,wDAAAA,oDAAmD;MACnDA,wDAAAA,oDAAgE;MAClEA,mEAAAA,EAAe;MAGfA,qEAAAA,OAAoC;MAClCA,wDAAAA,sDAAmD;MACnDA,wDAAAA,sDAAgE;MAClEA,mEAAAA,EAAe;MAEfA,wDAAAA,sDAA4D;MAC5DA,wDAAAA,sDAAkE;MACpEA,0DAAAA,EAAQ;MAGRA,4DAAAA,cAAwB;MACoBA,oDAAAA,gBAAQ;MAAAA,0DAAAA,EAAS;MAC3DA,4DAAAA,kBAAyC;MAAAA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAS;;;MApCzCA,wDAAAA,8BAAyB;MA6BlBA,uDAAAA,IAAiC;MAAjCA,wDAAAA,yCAAiC;MACpBA,uDAAAA,GAA0B;MAA1BA,wDAAAA,0CAA0B;;;;;;;;;;;;;;;;;;;;;AE9BX;AACpB;AACzB,SAASyD,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAEC,SAAS,GAAGJ,4DAAc,EAAE;EAC7D,IAAIG,MAAM,GAAG,CAAC,EAAE;IACZA,MAAM,GAAG,CAAC;EACd;EACA,OAAOF,6CAAK,CAACE,MAAM,EAAEA,MAAM,EAAEC,SAAS,CAAC;AAC3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPoC;AAC0I;AACnI;AACE;AACgB;AAC4C;AACO;AACV;AACH;AAClB;AACzC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASsC,YAAY,CAACC,IAAI,EAAEC,MAAM,EAAEC,mBAAmB,EAAE;EACrD,KAAK,IAAIC,GAAG,IAAIF,MAAM,EAAE;IACpB,IAAIA,MAAM,CAACG,cAAc,CAACD,GAAG,CAAC,EAAE;MAC5B,MAAME,KAAK,GAAGJ,MAAM,CAACE,GAAG,CAAC;MACzB,IAAIE,KAAK,EAAE;QACPL,IAAI,CAACM,WAAW,CAACH,GAAG,EAAEE,KAAK,EAAEH,mBAAmB,EAAEK,GAAG,CAACJ,GAAG,CAAC,GAAG,WAAW,GAAG,EAAE,CAAC;MAClF,CAAC,MACI;QACDH,IAAI,CAACQ,cAAc,CAACL,GAAG,CAAC;MAC5B;IACJ;EACJ;EACA,OAAOH,IAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,4BAA4B,CAACC,OAAO,EAAEC,MAAM,EAAE;EACnD,MAAMC,UAAU,GAAGD,MAAM,GAAG,EAAE,GAAG,MAAM;EACvCZ,YAAY,CAACW,OAAO,CAACG,KAAK,EAAE;IACxB,cAAc,EAAEF,MAAM,GAAG,EAAE,GAAG,MAAM;IACpC,mBAAmB,EAAEA,MAAM,GAAG,EAAE,GAAG,MAAM;IACzC,6BAA6B,EAAEA,MAAM,GAAG,EAAE,GAAG,aAAa;IAC1D,aAAa,EAAEC,UAAU;IACzB,iBAAiB,EAAEA,UAAU;IAC7B,qBAAqB,EAAEA,UAAU;IACjC,kBAAkB,EAAEA;EACxB,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,gBAAgB,CAACJ,OAAO,EAAEC,MAAM,EAAET,mBAAmB,EAAE;EAC5DH,YAAY,CAACW,OAAO,CAACG,KAAK,EAAE;IACxB5D,QAAQ,EAAE0D,MAAM,GAAG,EAAE,GAAG,OAAO;IAC/BI,GAAG,EAAEJ,MAAM,GAAG,EAAE,GAAG,GAAG;IACtBK,OAAO,EAAEL,MAAM,GAAG,EAAE,GAAG,GAAG;IAC1BM,IAAI,EAAEN,MAAM,GAAG,EAAE,GAAG;EACxB,CAAC,EAAET,mBAAmB,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA,SAASgB,iBAAiB,CAACC,SAAS,EAAEC,gBAAgB,EAAE;EACpD,OAAOA,gBAAgB,IAAIA,gBAAgB,IAAI,MAAM,GAC/CD,SAAS,GAAG,GAAG,GAAGC,gBAAgB,GAClCD,SAAS;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,qBAAqB,CAAChB,KAAK,EAAE;EAClC;EACA,MAAMiB,UAAU,GAAGjB,KAAK,CAACkB,WAAW,EAAE,CAACC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI;EACpE,OAAOC,UAAU,CAACpB,KAAK,CAAC,GAAGiB,UAAU;AACzC;AACA;AACA,SAASI,kCAAkC,CAAChB,OAAO,EAAE;EACjD,MAAMiB,aAAa,GAAGC,gBAAgB,CAAClB,OAAO,CAAC;EAC/C,MAAMmB,sBAAsB,GAAGC,qBAAqB,CAACH,aAAa,EAAE,qBAAqB,CAAC;EAC1F,MAAMI,QAAQ,GAAGF,sBAAsB,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,KAAK,CAAC;EAC5F;EACA,IAAI,CAACF,QAAQ,EAAE;IACX,OAAO,CAAC;EACZ;EACA;EACA;EACA,MAAMG,aAAa,GAAGL,sBAAsB,CAACL,OAAO,CAACO,QAAQ,CAAC;EAC9D,MAAMI,YAAY,GAAGL,qBAAqB,CAACH,aAAa,EAAE,qBAAqB,CAAC;EAChF,MAAMS,SAAS,GAAGN,qBAAqB,CAACH,aAAa,EAAE,kBAAkB,CAAC;EAC1E,OAAQN,qBAAqB,CAACc,YAAY,CAACD,aAAa,CAAC,CAAC,GACtDb,qBAAqB,CAACe,SAAS,CAACF,aAAa,CAAC,CAAC;AACvD;AACA;AACA,SAASJ,qBAAqB,CAACH,aAAa,EAAEzE,IAAI,EAAE;EAChD,MAAMmD,KAAK,GAAGsB,aAAa,CAACU,gBAAgB,CAACnF,IAAI,CAAC;EAClD,OAAOmD,KAAK,CAACiC,KAAK,CAAC,GAAG,CAAC,CAAC5C,GAAG,CAAC6C,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoB,CAAC/B,OAAO,EAAE;EACnC,MAAMgC,UAAU,GAAGhC,OAAO,CAACiC,qBAAqB,EAAE;EAClD;EACA;EACA;EACA;EACA,OAAO;IACH5B,GAAG,EAAE2B,UAAU,CAAC3B,GAAG;IACnB6B,KAAK,EAAEF,UAAU,CAACE,KAAK;IACvBC,MAAM,EAAEH,UAAU,CAACG,MAAM;IACzB5B,IAAI,EAAEyB,UAAU,CAACzB,IAAI;IACrB6B,KAAK,EAAEJ,UAAU,CAACI,KAAK;IACvBC,MAAM,EAAEL,UAAU,CAACK,MAAM;IACzBC,CAAC,EAAEN,UAAU,CAACM,CAAC;IACfC,CAAC,EAAEP,UAAU,CAACO;EAClB,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkB,CAACR,UAAU,EAAEM,CAAC,EAAEC,CAAC,EAAE;EAC1C,MAAM;IAAElC,GAAG;IAAE8B,MAAM;IAAE5B,IAAI;IAAE2B;EAAM,CAAC,GAAGF,UAAU;EAC/C,OAAOO,CAAC,IAAIlC,GAAG,IAAIkC,CAAC,IAAIJ,MAAM,IAAIG,CAAC,IAAI/B,IAAI,IAAI+B,CAAC,IAAIJ,KAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,gBAAgB,CAACT,UAAU,EAAE3B,GAAG,EAAEE,IAAI,EAAE;EAC7CyB,UAAU,CAAC3B,GAAG,IAAIA,GAAG;EACrB2B,UAAU,CAACG,MAAM,GAAGH,UAAU,CAAC3B,GAAG,GAAG2B,UAAU,CAACK,MAAM;EACtDL,UAAU,CAACzB,IAAI,IAAIA,IAAI;EACvByB,UAAU,CAACE,KAAK,GAAGF,UAAU,CAACzB,IAAI,GAAGyB,UAAU,CAACI,KAAK;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,uBAAuB,CAACC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EAClE,MAAM;IAAEzC,GAAG;IAAE6B,KAAK;IAAEC,MAAM;IAAE5B,IAAI;IAAE6B,KAAK;IAAEC;EAAO,CAAC,GAAGM,IAAI;EACxD,MAAMI,UAAU,GAAGX,KAAK,GAAGQ,SAAS;EACpC,MAAMI,UAAU,GAAGX,MAAM,GAAGO,SAAS;EACrC,OAAQE,QAAQ,GAAGzC,GAAG,GAAG2C,UAAU,IAC/BF,QAAQ,GAAGX,MAAM,GAAGa,UAAU,IAC9BH,QAAQ,GAAGtC,IAAI,GAAGwC,UAAU,IAC5BF,QAAQ,GAAGX,KAAK,GAAGa,UAAU;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,qBAAqB,CAAC;EACxBhJ,WAAW,CAACiJ,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B;IACA,IAAI,CAACC,SAAS,GAAG,IAAIC,GAAG,EAAE;EAC9B;EACA;EACAC,KAAK,GAAG;IACJ,IAAI,CAACF,SAAS,CAACE,KAAK,EAAE;EAC1B;EACA;EACAC,KAAK,CAACC,QAAQ,EAAE;IACZ,IAAI,CAACF,KAAK,EAAE;IACZ,IAAI,CAACF,SAAS,CAACK,GAAG,CAAC,IAAI,CAACN,SAAS,EAAE;MAC/BO,cAAc,EAAE,IAAI,CAACC,yBAAyB;IAClD,CAAC,CAAC;IACFH,QAAQ,CAACI,OAAO,CAAC3D,OAAO,IAAI;MACxB,IAAI,CAACmD,SAAS,CAACK,GAAG,CAACxD,OAAO,EAAE;QACxByD,cAAc,EAAE;UAAEpD,GAAG,EAAEL,OAAO,CAAC4D,SAAS;UAAErD,IAAI,EAAEP,OAAO,CAAC6D;QAAW,CAAC;QACpE7B,UAAU,EAAED,oBAAoB,CAAC/B,OAAO;MAC5C,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA;EACA8D,YAAY,CAAChJ,KAAK,EAAE;IAChB,MAAMiJ,MAAM,GAAG/F,sEAAe,CAAClD,KAAK,CAAC;IACrC,MAAMkJ,cAAc,GAAG,IAAI,CAACb,SAAS,CAAC1H,GAAG,CAACsI,MAAM,CAAC;IACjD,IAAI,CAACC,cAAc,EAAE;MACjB,OAAO,IAAI;IACf;IACA,MAAMP,cAAc,GAAGO,cAAc,CAACP,cAAc;IACpD,IAAIQ,MAAM;IACV,IAAIC,OAAO;IACX,IAAIH,MAAM,KAAK,IAAI,CAACb,SAAS,EAAE;MAC3B,MAAMiB,sBAAsB,GAAG,IAAI,CAACT,yBAAyB,EAAE;MAC/DO,MAAM,GAAGE,sBAAsB,CAAC9D,GAAG;MACnC6D,OAAO,GAAGC,sBAAsB,CAAC5D,IAAI;IACzC,CAAC,MACI;MACD0D,MAAM,GAAGF,MAAM,CAACH,SAAS;MACzBM,OAAO,GAAGH,MAAM,CAACF,UAAU;IAC/B;IACA,MAAMO,aAAa,GAAGX,cAAc,CAACpD,GAAG,GAAG4D,MAAM;IACjD,MAAMI,cAAc,GAAGZ,cAAc,CAAClD,IAAI,GAAG2D,OAAO;IACpD;IACA;IACA,IAAI,CAACf,SAAS,CAACQ,OAAO,CAAC,CAACpH,QAAQ,EAAE+H,IAAI,KAAK;MACvC,IAAI/H,QAAQ,CAACyF,UAAU,IAAI+B,MAAM,KAAKO,IAAI,IAAIP,MAAM,CAACQ,QAAQ,CAACD,IAAI,CAAC,EAAE;QACjE7B,gBAAgB,CAAClG,QAAQ,CAACyF,UAAU,EAAEoC,aAAa,EAAEC,cAAc,CAAC;MACxE;IACJ,CAAC,CAAC;IACFZ,cAAc,CAACpD,GAAG,GAAG4D,MAAM;IAC3BR,cAAc,CAAClD,IAAI,GAAG2D,OAAO;IAC7B,OAAO;MAAE7D,GAAG,EAAE+D,aAAa;MAAE7D,IAAI,EAAE8D;IAAe,CAAC;EACvD;EACA;AACJ;AACA;AACA;AACA;AACA;EACIX,yBAAyB,GAAG;IACxB,OAAO;MAAErD,GAAG,EAAEmE,MAAM,CAACC,OAAO;MAAElE,IAAI,EAAEiE,MAAM,CAACE;IAAQ,CAAC;EACxD;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAa,CAACL,IAAI,EAAE;EACzB,MAAMM,KAAK,GAAGN,IAAI,CAACO,SAAS,CAAC,IAAI,CAAC;EAClC,MAAMC,iBAAiB,GAAGF,KAAK,CAACG,gBAAgB,CAAC,MAAM,CAAC;EACxD,MAAMC,QAAQ,GAAGV,IAAI,CAACU,QAAQ,CAACnE,WAAW,EAAE;EAC5C;EACA+D,KAAK,CAACK,eAAe,CAAC,IAAI,CAAC;EAC3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,iBAAiB,CAACpJ,MAAM,EAAEwJ,CAAC,EAAE,EAAE;IAC/CJ,iBAAiB,CAACI,CAAC,CAAC,CAACD,eAAe,CAAC,IAAI,CAAC;EAC9C;EACA,IAAID,QAAQ,KAAK,QAAQ,EAAE;IACvBG,kBAAkB,CAACb,IAAI,EAAEM,KAAK,CAAC;EACnC,CAAC,MACI,IAAII,QAAQ,KAAK,OAAO,IAAIA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,UAAU,EAAE;IAC/EI,iBAAiB,CAACd,IAAI,EAAEM,KAAK,CAAC;EAClC;EACAS,YAAY,CAAC,QAAQ,EAAEf,IAAI,EAAEM,KAAK,EAAEO,kBAAkB,CAAC;EACvDE,YAAY,CAAC,yBAAyB,EAAEf,IAAI,EAAEM,KAAK,EAAEQ,iBAAiB,CAAC;EACvE,OAAOR,KAAK;AAChB;AACA;AACA,SAASS,YAAY,CAACC,QAAQ,EAAEhB,IAAI,EAAEM,KAAK,EAAEW,QAAQ,EAAE;EACnD,MAAMC,kBAAkB,GAAGlB,IAAI,CAACS,gBAAgB,CAACO,QAAQ,CAAC;EAC1D,IAAIE,kBAAkB,CAAC9J,MAAM,EAAE;IAC3B,MAAM+J,aAAa,GAAGb,KAAK,CAACG,gBAAgB,CAACO,QAAQ,CAAC;IACtD,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGM,kBAAkB,CAAC9J,MAAM,EAAEwJ,CAAC,EAAE,EAAE;MAChDK,QAAQ,CAACC,kBAAkB,CAACN,CAAC,CAAC,EAAEO,aAAa,CAACP,CAAC,CAAC,CAAC;IACrD;EACJ;AACJ;AACA;AACA,IAAIQ,aAAa,GAAG,CAAC;AACrB;AACA,SAASN,iBAAiB,CAAC7F,MAAM,EAAEqF,KAAK,EAAE;EACtC;EACA,IAAIA,KAAK,CAACe,IAAI,KAAK,MAAM,EAAE;IACvBf,KAAK,CAACjF,KAAK,GAAGJ,MAAM,CAACI,KAAK;EAC9B;EACA;EACA;EACA;EACA,IAAIiF,KAAK,CAACe,IAAI,KAAK,OAAO,IAAIf,KAAK,CAACpI,IAAI,EAAE;IACtCoI,KAAK,CAACpI,IAAI,GAAI,aAAYoI,KAAK,CAACpI,IAAK,IAAGkJ,aAAa,EAAG,EAAC;EAC7D;AACJ;AACA;AACA,SAASP,kBAAkB,CAAC5F,MAAM,EAAEqF,KAAK,EAAE;EACvC,MAAMgB,OAAO,GAAGhB,KAAK,CAACiB,UAAU,CAAC,IAAI,CAAC;EACtC,IAAID,OAAO,EAAE;IACT;IACA;IACA,IAAI;MACAA,OAAO,CAACE,SAAS,CAACvG,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC,CACD,MAAM,CAAE;EACZ;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMwG,2BAA2B,GAAG9H,sFAA+B,CAAC;EAAE+H,OAAO,EAAE;AAAK,CAAC,CAAC;AACtF;AACA,MAAMC,0BAA0B,GAAGhI,sFAA+B,CAAC;EAAE+H,OAAO,EAAE;AAAM,CAAC,CAAC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,uBAAuB,GAAG,GAAG;AACnC;AACA,MAAMC,uBAAuB,GAAG,IAAIC,GAAG,CAAC;AACpC;AACA,UAAU,CACb,CAAC;AACF;AACA;AACA;AACA,MAAMC,OAAO,CAAC;EACV;EACA,IAAIC,QAAQ,GAAG;IACX,OAAO,IAAI,CAACC,SAAS,IAAI,CAAC,EAAE,IAAI,CAACC,cAAc,IAAI,IAAI,CAACA,cAAc,CAACF,QAAQ,CAAC;EACpF;EACA,IAAIA,QAAQ,CAAC3G,KAAK,EAAE;IAChB,MAAM8G,QAAQ,GAAGtI,4EAAqB,CAACwB,KAAK,CAAC;IAC7C,IAAI8G,QAAQ,KAAK,IAAI,CAACF,SAAS,EAAE;MAC7B,IAAI,CAACA,SAAS,GAAGE,QAAQ;MACzB,IAAI,CAACC,6BAA6B,EAAE;MACpC,IAAI,CAACC,QAAQ,CAAChD,OAAO,CAACiD,MAAM,IAAI7G,4BAA4B,CAAC6G,MAAM,EAAEH,QAAQ,CAAC,CAAC;IACnF;EACJ;EACAxM,WAAW,CAAC+F,OAAO,EAAE6G,OAAO,EAAE3D,SAAS,EAAE4D,OAAO,EAAEC,cAAc,EAAEC,iBAAiB,EAAE;IACjF,IAAI,CAACH,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC3D,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAAC4D,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,iBAAiB,GAAG;MAAE3E,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IACvC;IACA,IAAI,CAAC2E,gBAAgB,GAAG;MAAE5E,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IACtC;AACR;AACA;AACA;IACQ,IAAI,CAAC4E,mBAAmB,GAAG,KAAK;IAChC;IACA,IAAI,CAACC,WAAW,GAAG,IAAI3I,yCAAO,EAAE;IAChC;IACA,IAAI,CAAC4I,wBAAwB,GAAG3I,oDAAkB;IAClD;IACA,IAAI,CAAC6I,sBAAsB,GAAG7I,oDAAkB;IAChD;IACA,IAAI,CAAC8I,mBAAmB,GAAG9I,oDAAkB;IAC7C;IACA,IAAI,CAAC+I,mBAAmB,GAAG/I,oDAAkB;IAC7C;IACA,IAAI,CAACgJ,gBAAgB,GAAG,IAAI;IAC5B;IACA,IAAI,CAACC,0BAA0B,GAAG,IAAI;IACtC;IACA,IAAI,CAAChB,QAAQ,GAAG,EAAE;IAClB;IACA,IAAI,CAACiB,gBAAgB,GAAG,IAAIxB,GAAG,EAAE;IACjC;IACA,IAAI,CAACyB,UAAU,GAAG,KAAK;IACvB;AACR;AACA;AACA;IACQ,IAAI,CAACC,cAAc,GAAG,CAAC;IACvB,IAAI,CAACvB,SAAS,GAAG,KAAK;IACtB;IACA,IAAI,CAACwB,aAAa,GAAG,IAAItJ,yCAAO,EAAE;IAClC;IACA,IAAI,CAACuJ,OAAO,GAAG,IAAIvJ,yCAAO,EAAE;IAC5B;IACA,IAAI,CAACwJ,QAAQ,GAAG,IAAIxJ,yCAAO,EAAE;IAC7B;IACA,IAAI,CAACyJ,KAAK,GAAG,IAAIzJ,yCAAO,EAAE;IAC1B;IACA,IAAI,CAAC0J,OAAO,GAAG,IAAI1J,yCAAO,EAAE;IAC5B;IACA,IAAI,CAAC2J,MAAM,GAAG,IAAI3J,yCAAO,EAAE;IAC3B;IACA,IAAI,CAAC4J,OAAO,GAAG,IAAI5J,yCAAO,EAAE;IAC5B;AACR;AACA;AACA;IACQ,IAAI,CAAC6J,KAAK,GAAG,IAAI,CAAClB,WAAW;IAC7B;IACA,IAAI,CAACmB,YAAY,GAAIzN,KAAK,IAAK;MAC3B,IAAI,CAACiN,aAAa,CAACS,IAAI,EAAE;MACzB;MACA,IAAI,IAAI,CAAC7B,QAAQ,CAACjL,MAAM,EAAE;QACtB,MAAM+M,YAAY,GAAG,IAAI,CAACC,gBAAgB,CAAC5N,KAAK,CAAC;QACjD,IAAI2N,YAAY,IAAI,CAAC,IAAI,CAACb,gBAAgB,CAAC/H,GAAG,CAAC4I,YAAY,CAAC,IAAI,CAAC,IAAI,CAACnC,QAAQ,EAAE;UAC5E,IAAI,CAACqC,uBAAuB,CAACF,YAAY,EAAE3N,KAAK,CAAC;QACrD;MACJ,CAAC,MACI,IAAI,CAAC,IAAI,CAACwL,QAAQ,EAAE;QACrB,IAAI,CAACqC,uBAAuB,CAAC,IAAI,CAACC,YAAY,EAAE9N,KAAK,CAAC;MAC1D;IACJ,CAAC;IACD;IACA,IAAI,CAAC+N,YAAY,GAAI/N,KAAK,IAAK;MAC3B,MAAMgO,eAAe,GAAG,IAAI,CAACC,yBAAyB,CAACjO,KAAK,CAAC;MAC7D,IAAI,CAAC,IAAI,CAACqM,mBAAmB,EAAE;QAC3B,MAAM6B,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACJ,eAAe,CAACxG,CAAC,GAAG,IAAI,CAAC6G,qBAAqB,CAAC7G,CAAC,CAAC;QAC5E,MAAM8G,SAAS,GAAGH,IAAI,CAACC,GAAG,CAACJ,eAAe,CAACvG,CAAC,GAAG,IAAI,CAAC4G,qBAAqB,CAAC5G,CAAC,CAAC;QAC5E,MAAM8G,eAAe,GAAGL,SAAS,GAAGI,SAAS,IAAI,IAAI,CAACvC,OAAO,CAACyC,kBAAkB;QAChF;QACA;QACA;QACA;QACA,IAAID,eAAe,EAAE;UACjB,MAAME,cAAc,GAAGC,IAAI,CAACC,GAAG,EAAE,IAAI,IAAI,CAACC,cAAc,GAAG,IAAI,CAACC,kBAAkB,CAAC7O,KAAK,CAAC;UACzF,MAAM8O,SAAS,GAAG,IAAI,CAACpD,cAAc;UACrC,IAAI,CAAC+C,cAAc,EAAE;YACjB,IAAI,CAACM,gBAAgB,CAAC/O,KAAK,CAAC;YAC5B;UACJ;UACA;UACA;UACA;UACA,IAAI,CAAC8O,SAAS,IAAK,CAACA,SAAS,CAACE,UAAU,EAAE,IAAI,CAACF,SAAS,CAACG,WAAW,EAAG,EAAE;YACrE;YACA;YACAjP,KAAK,CAACkP,cAAc,EAAE;YACtB,IAAI,CAAC7C,mBAAmB,GAAG,IAAI;YAC/B,IAAI,CAACL,OAAO,CAACmD,GAAG,CAAC,MAAM,IAAI,CAACC,kBAAkB,CAACpP,KAAK,CAAC,CAAC;UAC1D;QACJ;QACA;MACJ;MACA;MACA;MACA;MACAA,KAAK,CAACkP,cAAc,EAAE;MACtB,MAAMG,0BAA0B,GAAG,IAAI,CAACC,8BAA8B,CAACtB,eAAe,CAAC;MACvF,IAAI,CAACuB,SAAS,GAAG,IAAI;MACrB,IAAI,CAACC,yBAAyB,GAAGxB,eAAe;MAChD,IAAI,CAACyB,4BAA4B,CAACJ,0BAA0B,CAAC;MAC7D,IAAI,IAAI,CAAC3D,cAAc,EAAE;QACrB,IAAI,CAACgE,0BAA0B,CAACL,0BAA0B,EAAErB,eAAe,CAAC;MAChF,CAAC,MACI;QACD;QACA;QACA,MAAM2B,MAAM,GAAG,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACxB,qBAAqB;QAC5F,MAAMyB,eAAe,GAAG,IAAI,CAAC1D,gBAAgB;QAC7C0D,eAAe,CAACtI,CAAC,GAAG6H,0BAA0B,CAAC7H,CAAC,GAAGmI,MAAM,CAACnI,CAAC,GAAG,IAAI,CAAC2E,iBAAiB,CAAC3E,CAAC;QACtFsI,eAAe,CAACrI,CAAC,GAAG4H,0BAA0B,CAAC5H,CAAC,GAAGkI,MAAM,CAAClI,CAAC,GAAG,IAAI,CAAC0E,iBAAiB,CAAC1E,CAAC;QACtF,IAAI,CAACsI,0BAA0B,CAACD,eAAe,CAACtI,CAAC,EAAEsI,eAAe,CAACrI,CAAC,CAAC;MACzE;MACA;MACA;MACA;MACA,IAAI,IAAI,CAAC6E,WAAW,CAAC0D,SAAS,CAACpP,MAAM,EAAE;QACnC,IAAI,CAACoL,OAAO,CAACmD,GAAG,CAAC,MAAM;UACnB,IAAI,CAAC7C,WAAW,CAACoB,IAAI,CAAC;YAClBjJ,MAAM,EAAE,IAAI;YACZuJ,eAAe,EAAEqB,0BAA0B;YAC3CrP,KAAK;YACLiQ,QAAQ,EAAE,IAAI,CAACC,gBAAgB,CAACb,0BAA0B,CAAC;YAC3Dc,KAAK,EAAE,IAAI,CAACC;UAChB,CAAC,CAAC;QACN,CAAC,CAAC;MACN;IACJ,CAAC;IACD;IACA,IAAI,CAACC,UAAU,GAAIrQ,KAAK,IAAK;MACzB,IAAI,CAAC+O,gBAAgB,CAAC/O,KAAK,CAAC;IAChC,CAAC;IACD;IACA,IAAI,CAACsQ,gBAAgB,GAAItQ,KAAK,IAAK;MAC/B,IAAI,IAAI,CAAC6L,QAAQ,CAACjL,MAAM,EAAE;QACtB,MAAM+M,YAAY,GAAG,IAAI,CAACC,gBAAgB,CAAC5N,KAAK,CAAC;QACjD,IAAI2N,YAAY,IAAI,CAAC,IAAI,CAACb,gBAAgB,CAAC/H,GAAG,CAAC4I,YAAY,CAAC,IAAI,CAAC,IAAI,CAACnC,QAAQ,EAAE;UAC5ExL,KAAK,CAACkP,cAAc,EAAE;QAC1B;MACJ,CAAC,MACI,IAAI,CAAC,IAAI,CAAC1D,QAAQ,EAAE;QACrB;QACA;QACAxL,KAAK,CAACkP,cAAc,EAAE;MAC1B;IACJ,CAAC;IACD,IAAI,CAACqB,eAAe,CAACrL,OAAO,CAAC,CAACsL,UAAU,CAACzE,OAAO,CAAC0E,aAAa,IAAI,IAAI,CAAC;IACvE,IAAI,CAACC,gBAAgB,GAAG,IAAIvI,qBAAqB,CAACC,SAAS,CAAC;IAC5D8D,iBAAiB,CAACyE,gBAAgB,CAAC,IAAI,CAAC;EAC5C;EACA;AACJ;AACA;AACA;EACIC,qBAAqB,GAAG;IACpB,OAAO,IAAI,CAACC,YAAY;EAC5B;EACA;EACAC,cAAc,GAAG;IACb,OAAO,IAAI,CAAChD,YAAY;EAC5B;EACA;AACJ;AACA;AACA;EACIiD,iBAAiB,GAAG;IAChB,OAAO,IAAI,CAAC/B,UAAU,EAAE,GAAG,IAAI,CAAC4B,qBAAqB,EAAE,GAAG,IAAI,CAACE,cAAc,EAAE;EACnF;EACA;EACAE,WAAW,CAACC,OAAO,EAAE;IACjB,IAAI,CAACpF,QAAQ,GAAGoF,OAAO,CAAC/M,GAAG,CAAC4H,MAAM,IAAIxI,oEAAa,CAACwI,MAAM,CAAC,CAAC;IAC5D,IAAI,CAACD,QAAQ,CAAChD,OAAO,CAACiD,MAAM,IAAI7G,4BAA4B,CAAC6G,MAAM,EAAE,IAAI,CAACN,QAAQ,CAAC,CAAC;IACpF,IAAI,CAACI,6BAA6B,EAAE;IACpC;IACA;IACA;IACA;IACA,MAAMsF,eAAe,GAAG,IAAI5F,GAAG,EAAE;IACjC,IAAI,CAACwB,gBAAgB,CAACjE,OAAO,CAACiD,MAAM,IAAI;MACpC,IAAI,IAAI,CAACD,QAAQ,CAAC7F,OAAO,CAAC8F,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;QACpCoF,eAAe,CAACC,GAAG,CAACrF,MAAM,CAAC;MAC/B;IACJ,CAAC,CAAC;IACF,IAAI,CAACgB,gBAAgB,GAAGoE,eAAe;IACvC,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIE,mBAAmB,CAAC/S,QAAQ,EAAE;IAC1B,IAAI,CAACgT,gBAAgB,GAAGhT,QAAQ;IAChC,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIiT,uBAAuB,CAACjT,QAAQ,EAAE;IAC9B,IAAI,CAACkT,oBAAoB,GAAGlT,QAAQ;IACpC,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACIkS,eAAe,CAACiB,WAAW,EAAE;IACzB,MAAMtM,OAAO,GAAG5B,oEAAa,CAACkO,WAAW,CAAC;IAC1C,IAAItM,OAAO,KAAK,IAAI,CAAC4I,YAAY,EAAE;MAC/B,IAAI,IAAI,CAACA,YAAY,EAAE;QACnB,IAAI,CAAC2D,2BAA2B,CAAC,IAAI,CAAC3D,YAAY,CAAC;MACvD;MACA,IAAI,CAAC9B,OAAO,CAAC0F,iBAAiB,CAAC,MAAM;QACjCxM,OAAO,CAACyM,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAClE,YAAY,EAAEtC,0BAA0B,CAAC;QACpFjG,OAAO,CAACyM,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAClE,YAAY,EAAExC,2BAA2B,CAAC;QACtF/F,OAAO,CAACyM,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACrB,gBAAgB,EAAEnF,0BAA0B,CAAC;MAC5F,CAAC,CAAC;MACF,IAAI,CAACyG,iBAAiB,GAAGC,SAAS;MAClC,IAAI,CAAC/D,YAAY,GAAG5I,OAAO;IAC/B;IACA,IAAI,OAAO4M,UAAU,KAAK,WAAW,IAAI,IAAI,CAAChE,YAAY,YAAYgE,UAAU,EAAE;MAC9E,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACjE,YAAY,CAACkE,eAAe;IAC7D;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACIC,mBAAmB,CAACC,eAAe,EAAE;IACjC,IAAI,CAACtF,gBAAgB,GAAGsF,eAAe,GAAG5O,oEAAa,CAAC4O,eAAe,CAAC,GAAG,IAAI;IAC/E,IAAI,CAACvF,mBAAmB,CAACwF,WAAW,EAAE;IACtC,IAAID,eAAe,EAAE;MACjB,IAAI,CAACvF,mBAAmB,GAAG,IAAI,CAACV,cAAc,CACzCmG,MAAM,CAAC,EAAE,CAAC,CACVC,SAAS,CAAC,MAAM,IAAI,CAACC,8BAA8B,EAAE,CAAC;IAC/D;IACA,OAAO,IAAI;EACf;EACA;EACA9B,UAAU,CAAC+B,MAAM,EAAE;IACf,IAAI,CAACC,cAAc,GAAGD,MAAM;IAC5B,OAAO,IAAI;EACf;EACA;EACAE,OAAO,GAAG;IACN,IAAI,CAAChB,2BAA2B,CAAC,IAAI,CAAC3D,YAAY,CAAC;IACnD;IACA;IACA,IAAI,IAAI,CAACkB,UAAU,EAAE,EAAE;MACnB;MACA;MACA,IAAI,CAAClB,YAAY,EAAE4E,MAAM,EAAE;IAC/B;IACA,IAAI,CAACC,OAAO,EAAED,MAAM,EAAE;IACtB,IAAI,CAACE,eAAe,EAAE;IACtB,IAAI,CAACC,mBAAmB,EAAE;IAC1B,IAAI,CAAC3G,iBAAiB,CAAC4G,cAAc,CAAC,IAAI,CAAC;IAC3C,IAAI,CAACC,oBAAoB,EAAE;IAC3B,IAAI,CAAC9F,aAAa,CAAC+F,QAAQ,EAAE;IAC7B,IAAI,CAAC9F,OAAO,CAAC8F,QAAQ,EAAE;IACvB,IAAI,CAAC7F,QAAQ,CAAC6F,QAAQ,EAAE;IACxB,IAAI,CAAC5F,KAAK,CAAC4F,QAAQ,EAAE;IACrB,IAAI,CAAC3F,OAAO,CAAC2F,QAAQ,EAAE;IACvB,IAAI,CAAC1F,MAAM,CAAC0F,QAAQ,EAAE;IACtB,IAAI,CAACzF,OAAO,CAACyF,QAAQ,EAAE;IACvB,IAAI,CAAC1G,WAAW,CAAC0G,QAAQ,EAAE;IAC3B,IAAI,CAACnH,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACiB,gBAAgB,CAACvE,KAAK,EAAE;IAC7B,IAAI,CAACmD,cAAc,GAAGmG,SAAS;IAC/B,IAAI,CAAClF,mBAAmB,CAACwF,WAAW,EAAE;IACtC,IAAI,CAACzB,gBAAgB,CAACnI,KAAK,EAAE;IAC7B,IAAI,CAACqE,gBAAgB,GACjB,IAAI,CAACkB,YAAY,GACb,IAAI,CAACiE,gBAAgB,GACjB,IAAI,CAACR,oBAAoB,GACrB,IAAI,CAACF,gBAAgB,GACjB,IAAI,CAACsB,OAAO,GACR,IAAI,CAACH,cAAc,GACf,IAAI;EACpC;EACA;EACAxD,UAAU,GAAG;IACT,OAAO,IAAI,CAAC3C,mBAAmB,IAAI,IAAI,CAACH,iBAAiB,CAAC8C,UAAU,CAAC,IAAI,CAAC;EAC9E;EACA;EACAiE,KAAK,GAAG;IACJ,IAAI,CAACnF,YAAY,CAACzI,KAAK,CAACM,SAAS,GAAG,IAAI,CAACiM,iBAAiB,IAAI,EAAE;IAChE,IAAI,CAACxF,gBAAgB,GAAG;MAAE5E,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IACtC,IAAI,CAAC0E,iBAAiB,GAAG;MAAE3E,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;EAC3C;EACA;AACJ;AACA;AACA;EACIyL,aAAa,CAACpH,MAAM,EAAE;IAClB,IAAI,CAAC,IAAI,CAACgB,gBAAgB,CAAC/H,GAAG,CAAC+G,MAAM,CAAC,IAAI,IAAI,CAACD,QAAQ,CAAC7F,OAAO,CAAC8F,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;MAC1E,IAAI,CAACgB,gBAAgB,CAACqE,GAAG,CAACrF,MAAM,CAAC;MACjC7G,4BAA4B,CAAC6G,MAAM,EAAE,IAAI,CAAC;IAC9C;EACJ;EACA;AACJ;AACA;AACA;EACIqH,YAAY,CAACrH,MAAM,EAAE;IACjB,IAAI,IAAI,CAACgB,gBAAgB,CAAC/H,GAAG,CAAC+G,MAAM,CAAC,EAAE;MACnC,IAAI,CAACgB,gBAAgB,CAACsG,MAAM,CAACtH,MAAM,CAAC;MACpC7G,4BAA4B,CAAC6G,MAAM,EAAE,IAAI,CAACN,QAAQ,CAAC;IACvD;EACJ;EACA;EACA6H,aAAa,CAACC,SAAS,EAAE;IACrB,IAAI,CAACvG,UAAU,GAAGuG,SAAS;IAC3B,OAAO,IAAI;EACf;EACA;EACAC,kBAAkB,CAACzE,SAAS,EAAE;IAC1B,IAAI,CAACpD,cAAc,GAAGoD,SAAS;EACnC;EACA;AACJ;AACA;EACI0E,mBAAmB,GAAG;IAClB,MAAM/R,QAAQ,GAAG,IAAI,CAACuN,UAAU,EAAE,GAAG,IAAI,CAAC5C,gBAAgB,GAAG,IAAI,CAACD,iBAAiB;IACnF,OAAO;MAAE3E,CAAC,EAAE/F,QAAQ,CAAC+F,CAAC;MAAEC,CAAC,EAAEhG,QAAQ,CAACgG;IAAE,CAAC;EAC3C;EACA;AACJ;AACA;AACA;EACIgM,mBAAmB,CAAC5O,KAAK,EAAE;IACvB,IAAI,CAACuH,gBAAgB,GAAG;MAAE5E,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IACtC,IAAI,CAAC0E,iBAAiB,CAAC3E,CAAC,GAAG3C,KAAK,CAAC2C,CAAC;IAClC,IAAI,CAAC2E,iBAAiB,CAAC1E,CAAC,GAAG5C,KAAK,CAAC4C,CAAC;IAClC,IAAI,CAAC,IAAI,CAACiE,cAAc,EAAE;MACtB,IAAI,CAACqE,0BAA0B,CAAClL,KAAK,CAAC2C,CAAC,EAAE3C,KAAK,CAAC4C,CAAC,CAAC;IACrD;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIiM,oBAAoB,CAAC7O,KAAK,EAAE;IACxB,IAAI,CAAC8O,iBAAiB,GAAG9O,KAAK;IAC9B,OAAO,IAAI;EACf;EACA;EACA+O,4BAA4B,GAAG;IAC3B,MAAMnS,QAAQ,GAAG,IAAI,CAAC+N,yBAAyB;IAC/C,IAAI/N,QAAQ,IAAI,IAAI,CAACiK,cAAc,EAAE;MACjC,IAAI,CAACgE,0BAA0B,CAAC,IAAI,CAACJ,8BAA8B,CAAC7N,QAAQ,CAAC,EAAEA,QAAQ,CAAC;IAC5F;EACJ;EACA;EACAsR,oBAAoB,GAAG;IACnB,IAAI,CAACxG,wBAAwB,CAAC4F,WAAW,EAAE;IAC3C,IAAI,CAAC1F,sBAAsB,CAAC0F,WAAW,EAAE;IACzC,IAAI,CAACzF,mBAAmB,CAACyF,WAAW,EAAE;EAC1C;EACA;EACAS,eAAe,GAAG;IACd,IAAI,CAACiB,QAAQ,EAAEnB,MAAM,EAAE;IACvB,IAAI,CAACoB,WAAW,EAAEC,OAAO,EAAE;IAC3B,IAAI,CAACF,QAAQ,GAAG,IAAI,CAACC,WAAW,GAAG,IAAI;EAC3C;EACA;EACAjB,mBAAmB,GAAG;IAClB,IAAI,CAAChC,YAAY,EAAE6B,MAAM,EAAE;IAC3B,IAAI,CAACsB,eAAe,EAAED,OAAO,EAAE;IAC/B,IAAI,CAAClD,YAAY,GAAG,IAAI,CAACmD,eAAe,GAAG,IAAI;EACnD;EACA;AACJ;AACA;AACA;EACIjF,gBAAgB,CAAC/O,KAAK,EAAE;IACpB;IACA;IACA;IACA;IACA,IAAI,CAAC,IAAI,CAACkM,iBAAiB,CAAC8C,UAAU,CAAC,IAAI,CAAC,EAAE;MAC1C;IACJ;IACA,IAAI,CAAC+D,oBAAoB,EAAE;IAC3B,IAAI,CAAC7G,iBAAiB,CAAC+H,YAAY,CAAC,IAAI,CAAC;IACzC,IAAI,CAACrI,6BAA6B,EAAE;IACpC,IAAI,IAAI,CAACC,QAAQ,EAAE;MACf,IAAI,CAACiC,YAAY,CAACzI,KAAK,CAAC6O,uBAAuB,GAC3C,IAAI,CAACC,wBAAwB;IACrC;IACA,IAAI,CAAC,IAAI,CAAC9H,mBAAmB,EAAE;MAC3B;IACJ;IACA,IAAI,CAACc,QAAQ,CAACO,IAAI,CAAC;MAAEjJ,MAAM,EAAE,IAAI;MAAEzE;IAAM,CAAC,CAAC;IAC3C,IAAI,IAAI,CAAC0L,cAAc,EAAE;MACrB;MACA,IAAI,CAACA,cAAc,CAAC0I,cAAc,EAAE;MACpC,IAAI,CAACC,4BAA4B,EAAE,CAACC,IAAI,CAAC,MAAM;QAC3C,IAAI,CAACC,qBAAqB,CAACvU,KAAK,CAAC;QACjC,IAAI,CAACwU,wBAAwB,EAAE;QAC/B,IAAI,CAACtI,iBAAiB,CAAC+H,YAAY,CAAC,IAAI,CAAC;MAC7C,CAAC,CAAC;IACN,CAAC,MACI;MACD;MACA;MACA;MACA,IAAI,CAAC9H,iBAAiB,CAAC3E,CAAC,GAAG,IAAI,CAAC4E,gBAAgB,CAAC5E,CAAC;MAClD,MAAMwG,eAAe,GAAG,IAAI,CAACC,yBAAyB,CAACjO,KAAK,CAAC;MAC7D,IAAI,CAACmM,iBAAiB,CAAC1E,CAAC,GAAG,IAAI,CAAC2E,gBAAgB,CAAC3E,CAAC;MAClD,IAAI,CAACuE,OAAO,CAACmD,GAAG,CAAC,MAAM;QACnB,IAAI,CAAC/B,KAAK,CAACM,IAAI,CAAC;UACZjJ,MAAM,EAAE,IAAI;UACZwL,QAAQ,EAAE,IAAI,CAACC,gBAAgB,CAAClC,eAAe,CAAC;UAChDyG,SAAS,EAAEzG,eAAe;UAC1BhO;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;MACF,IAAI,CAACwU,wBAAwB,EAAE;MAC/B,IAAI,CAACtI,iBAAiB,CAAC+H,YAAY,CAAC,IAAI,CAAC;IAC7C;EACJ;EACA;EACA7E,kBAAkB,CAACpP,KAAK,EAAE;IACtB,IAAI0U,YAAY,CAAC1U,KAAK,CAAC,EAAE;MACrB,IAAI,CAAC2U,mBAAmB,GAAGjG,IAAI,CAACC,GAAG,EAAE;IACzC;IACA,IAAI,CAAC/C,6BAA6B,EAAE;IACpC,MAAMgJ,aAAa,GAAG,IAAI,CAAClJ,cAAc;IACzC,IAAIkJ,aAAa,EAAE;MACf,MAAM1P,OAAO,GAAG,IAAI,CAAC4I,YAAY;MACjC,MAAMyE,MAAM,GAAGrN,OAAO,CAAC2P,UAAU;MACjC,MAAMC,WAAW,GAAI,IAAI,CAACjE,YAAY,GAAG,IAAI,CAACkE,yBAAyB,EAAG;MAC1E,MAAMC,MAAM,GAAI,IAAI,CAACrC,OAAO,GAAG,IAAI,CAACA,OAAO,IAAI,IAAI,CAACvK,SAAS,CAAC6M,aAAa,CAAC,EAAE,CAAE;MAChF;MACA,MAAMC,UAAU,GAAG,IAAI,CAAC9R,cAAc,EAAE;MACxC;MACAmP,MAAM,CAAC4C,YAAY,CAACH,MAAM,EAAE9P,OAAO,CAAC;MACpC;MACA;MACA,IAAI,CAAC0M,iBAAiB,GAAG1M,OAAO,CAACG,KAAK,CAACM,SAAS,IAAI,EAAE;MACtD;MACA;MACA,IAAI,CAACkO,QAAQ,GAAG,IAAI,CAACuB,qBAAqB,EAAE;MAC5C;MACA;MACA;MACA9P,gBAAgB,CAACJ,OAAO,EAAE,KAAK,EAAEmG,uBAAuB,CAAC;MACzD,IAAI,CAACjD,SAAS,CAACiN,IAAI,CAACC,WAAW,CAAC/C,MAAM,CAACgD,YAAY,CAACT,WAAW,EAAE5P,OAAO,CAAC,CAAC;MAC1E,IAAI,CAACsQ,yBAAyB,CAACjD,MAAM,EAAE2C,UAAU,CAAC,CAACI,WAAW,CAAC,IAAI,CAACzB,QAAQ,CAAC;MAC7E,IAAI,CAAC3G,OAAO,CAACQ,IAAI,CAAC;QAAEjJ,MAAM,EAAE,IAAI;QAAEzE;MAAM,CAAC,CAAC,CAAC,CAAC;MAC5C4U,aAAa,CAACa,KAAK,EAAE;MACrB,IAAI,CAACC,iBAAiB,GAAGd,aAAa;MACtC,IAAI,CAACe,aAAa,GAAGf,aAAa,CAACgB,YAAY,CAAC,IAAI,CAAC;IACzD,CAAC,MACI;MACD,IAAI,CAAC1I,OAAO,CAACQ,IAAI,CAAC;QAAEjJ,MAAM,EAAE,IAAI;QAAEzE;MAAM,CAAC,CAAC;MAC1C,IAAI,CAAC0V,iBAAiB,GAAG,IAAI,CAACC,aAAa,GAAG9D,SAAS;IAC3D;IACA;IACA;IACA,IAAI,CAACnB,gBAAgB,CAAClI,KAAK,CAACoM,aAAa,GAAGA,aAAa,CAACiB,oBAAoB,EAAE,GAAG,EAAE,CAAC;EAC1F;EACA;AACJ;AACA;AACA;AACA;AACA;EACIhI,uBAAuB,CAACiI,gBAAgB,EAAE9V,KAAK,EAAE;IAC7C;IACA;IACA,IAAI,IAAI,CAACwS,cAAc,EAAE;MACrBxS,KAAK,CAAC+V,eAAe,EAAE;IAC3B;IACA,MAAM/G,UAAU,GAAG,IAAI,CAACA,UAAU,EAAE;IACpC,MAAMgH,eAAe,GAAGtB,YAAY,CAAC1U,KAAK,CAAC;IAC3C,MAAMiW,sBAAsB,GAAG,CAACD,eAAe,IAAIhW,KAAK,CAACkW,MAAM,KAAK,CAAC;IACrE,MAAM1E,WAAW,GAAG,IAAI,CAAC1D,YAAY;IACrC,MAAM7E,MAAM,GAAG/F,sEAAe,CAAClD,KAAK,CAAC;IACrC,MAAMmW,gBAAgB,GAAG,CAACH,eAAe,IACrC,IAAI,CAACrB,mBAAmB,IACxB,IAAI,CAACA,mBAAmB,GAAGvJ,uBAAuB,GAAGsD,IAAI,CAACC,GAAG,EAAE;IACnE,MAAMyH,WAAW,GAAGJ,eAAe,GAC7BvS,mFAAgC,CAACzD,KAAK,CAAC,GACvC0D,kFAA+B,CAAC1D,KAAK,CAAC;IAC5C;IACA;IACA;IACA;IACA;IACA;IACA,IAAIiJ,MAAM,IAAIA,MAAM,CAACoN,SAAS,IAAIrW,KAAK,CAAC6K,IAAI,KAAK,WAAW,EAAE;MAC1D7K,KAAK,CAACkP,cAAc,EAAE;IAC1B;IACA;IACA,IAAIF,UAAU,IAAIiH,sBAAsB,IAAIE,gBAAgB,IAAIC,WAAW,EAAE;MACzE;IACJ;IACA;IACA;IACA;IACA,IAAI,IAAI,CAACvK,QAAQ,CAACjL,MAAM,EAAE;MACtB,MAAM0V,UAAU,GAAG9E,WAAW,CAACnM,KAAK;MACpC,IAAI,CAAC8O,wBAAwB,GAAGmC,UAAU,CAACpC,uBAAuB,IAAI,EAAE;MACxEoC,UAAU,CAACpC,uBAAuB,GAAG,aAAa;IACtD;IACA,IAAI,CAAC7H,mBAAmB,GAAG,IAAI,CAACkD,SAAS,GAAG,KAAK;IACjD;IACA;IACA,IAAI,CAACwD,oBAAoB,EAAE;IAC3B,IAAI,CAAClD,kBAAkB,GAAG,IAAI,CAAC/B,YAAY,CAAC3G,qBAAqB,EAAE;IACnE,IAAI,CAACoF,wBAAwB,GAAG,IAAI,CAACL,iBAAiB,CAACqK,WAAW,CAAClE,SAAS,CAAC,IAAI,CAACtE,YAAY,CAAC;IAC/F,IAAI,CAACtB,sBAAsB,GAAG,IAAI,CAACP,iBAAiB,CAACsK,SAAS,CAACnE,SAAS,CAAC,IAAI,CAAChC,UAAU,CAAC;IACzF,IAAI,CAAC3D,mBAAmB,GAAG,IAAI,CAACR,iBAAiB,CAC5CuK,QAAQ,CAAC,IAAI,CAACrT,cAAc,EAAE,CAAC,CAC/BiP,SAAS,CAACqE,WAAW,IAAI,IAAI,CAACC,eAAe,CAACD,WAAW,CAAC,CAAC;IAChE,IAAI,IAAI,CAAC9J,gBAAgB,EAAE;MACvB,IAAI,CAACgK,aAAa,GAAG3P,oBAAoB,CAAC,IAAI,CAAC2F,gBAAgB,CAAC;IACpE;IACA;IACA;IACA;IACA,MAAMiK,eAAe,GAAG,IAAI,CAACxF,gBAAgB;IAC7C,IAAI,CAACyF,wBAAwB,GACzBD,eAAe,IAAIA,eAAe,CAACxY,QAAQ,IAAI,CAACwY,eAAe,CAACE,SAAS,GACnE;MAAEvP,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,GACd,IAAI,CAACuP,4BAA4B,CAAC,IAAI,CAACnH,kBAAkB,EAAEiG,gBAAgB,EAAE9V,KAAK,CAAC;IAC7F,MAAMgO,eAAe,GAAI,IAAI,CAACK,qBAAqB,GAC/C,IAAI,CAACmB,yBAAyB,GAC1B,IAAI,CAACvB,yBAAyB,CAACjO,KAAK,CAAE;IAC9C,IAAI,CAACoQ,sBAAsB,GAAG;MAAE5I,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAC5C,IAAI,CAACwP,qCAAqC,GAAG;MAAEzP,CAAC,EAAEwG,eAAe,CAACxG,CAAC;MAAEC,CAAC,EAAEuG,eAAe,CAACvG;IAAE,CAAC;IAC3F,IAAI,CAACmH,cAAc,GAAGF,IAAI,CAACC,GAAG,EAAE;IAChC,IAAI,CAACzC,iBAAiB,CAACgL,aAAa,CAAC,IAAI,EAAElX,KAAK,CAAC;EACrD;EACA;EACAuU,qBAAqB,CAACvU,KAAK,EAAE;IACzB;IACA;IACA;IACA;IACAsF,gBAAgB,CAAC,IAAI,CAACwI,YAAY,EAAE,IAAI,EAAEzC,uBAAuB,CAAC;IAClE,IAAI,CAACsH,OAAO,CAACkC,UAAU,CAACU,YAAY,CAAC,IAAI,CAACzH,YAAY,EAAE,IAAI,CAAC6E,OAAO,CAAC;IACrE,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,mBAAmB,EAAE;IAC1B,IAAI,CAAChD,kBAAkB,GACnB,IAAI,CAAC+G,aAAa,GACd,IAAI,CAACO,YAAY,GACb,IAAI,CAACvF,iBAAiB,GAClBC,SAAS;IACzB;IACA,IAAI,CAAC7F,OAAO,CAACmD,GAAG,CAAC,MAAM;MACnB,MAAML,SAAS,GAAG,IAAI,CAACpD,cAAc;MACrC,MAAMvL,YAAY,GAAG2O,SAAS,CAAC8G,YAAY,CAAC,IAAI,CAAC;MACjD,MAAM5H,eAAe,GAAG,IAAI,CAACC,yBAAyB,CAACjO,KAAK,CAAC;MAC7D,MAAMiQ,QAAQ,GAAG,IAAI,CAACC,gBAAgB,CAAClC,eAAe,CAAC;MACvD,MAAMoJ,sBAAsB,GAAGtI,SAAS,CAACuI,gBAAgB,CAACrJ,eAAe,CAACxG,CAAC,EAAEwG,eAAe,CAACvG,CAAC,CAAC;MAC/F,IAAI,CAAC2F,KAAK,CAACM,IAAI,CAAC;QAAEjJ,MAAM,EAAE,IAAI;QAAEwL,QAAQ;QAAEwE,SAAS,EAAEzG,eAAe;QAAEhO;MAAM,CAAC,CAAC;MAC9E,IAAI,CAACuN,OAAO,CAACG,IAAI,CAAC;QACd4J,IAAI,EAAE,IAAI;QACVnX,YAAY;QACZD,aAAa,EAAE,IAAI,CAACyV,aAAa;QACjC7G,SAAS,EAAEA,SAAS;QACpByI,iBAAiB,EAAE,IAAI,CAAC7B,iBAAiB;QACzC0B,sBAAsB;QACtBnH,QAAQ;QACRwE,SAAS,EAAEzG,eAAe;QAC1BhO;MACJ,CAAC,CAAC;MACF8O,SAAS,CAAC/O,IAAI,CAAC,IAAI,EAAEI,YAAY,EAAE,IAAI,CAACwV,aAAa,EAAE,IAAI,CAACD,iBAAiB,EAAE0B,sBAAsB,EAAEnH,QAAQ,EAAEjC,eAAe,EAAEhO,KAAK,CAAC;MACxI,IAAI,CAAC0L,cAAc,GAAG,IAAI,CAACgK,iBAAiB;IAChD,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;EACIhG,0BAA0B,CAAC;IAAElI,CAAC;IAAEC;EAAE,CAAC,EAAE;IAAED,CAAC,EAAEgQ,IAAI;IAAE/P,CAAC,EAAEgQ;EAAK,CAAC,EAAE;IACvD;IACA,IAAIC,YAAY,GAAG,IAAI,CAAChC,iBAAiB,CAACiC,gCAAgC,CAAC,IAAI,EAAEnQ,CAAC,EAAEC,CAAC,CAAC;IACtF;IACA;IACA;IACA;IACA,IAAI,CAACiQ,YAAY,IACb,IAAI,CAAChM,cAAc,KAAK,IAAI,CAACgK,iBAAiB,IAC9C,IAAI,CAACA,iBAAiB,CAAC2B,gBAAgB,CAAC7P,CAAC,EAAEC,CAAC,CAAC,EAAE;MAC/CiQ,YAAY,GAAG,IAAI,CAAChC,iBAAiB;IACzC;IACA,IAAIgC,YAAY,IAAIA,YAAY,KAAK,IAAI,CAAChM,cAAc,EAAE;MACtD,IAAI,CAACM,OAAO,CAACmD,GAAG,CAAC,MAAM;QACnB;QACA,IAAI,CAAC7B,MAAM,CAACI,IAAI,CAAC;UAAE4J,IAAI,EAAE,IAAI;UAAExI,SAAS,EAAE,IAAI,CAACpD;QAAe,CAAC,CAAC;QAChE,IAAI,CAACA,cAAc,CAACkM,IAAI,CAAC,IAAI,CAAC;QAC9B;QACA,IAAI,CAAClM,cAAc,GAAGgM,YAAY;QAClC,IAAI,CAAChM,cAAc,CAACmM,KAAK,CAAC,IAAI,EAAErQ,CAAC,EAAEC,CAAC,EAAEiQ,YAAY,KAAK,IAAI,CAAChC,iBAAiB;QACzE;QACA;QACAgC,YAAY,CAACI,eAAe,GAC1B,IAAI,CAACnC,aAAa,GAClB9D,SAAS,CAAC;QAChB,IAAI,CAACxE,OAAO,CAACK,IAAI,CAAC;UACd4J,IAAI,EAAE,IAAI;UACVxI,SAAS,EAAE4I,YAAY;UACvBvX,YAAY,EAAEuX,YAAY,CAAC9B,YAAY,CAAC,IAAI;QAChD,CAAC,CAAC;MACN,CAAC,CAAC;IACN;IACA;IACA,IAAI,IAAI,CAAC5G,UAAU,EAAE,EAAE;MACnB,IAAI,CAACtD,cAAc,CAACqM,0BAA0B,CAACP,IAAI,EAAEC,IAAI,CAAC;MAC1D,IAAI,CAAC/L,cAAc,CAACsM,SAAS,CAAC,IAAI,EAAExQ,CAAC,EAAEC,CAAC,EAAE,IAAI,CAAC2I,sBAAsB,CAAC;MACtE,IAAI,IAAI,CAACR,iBAAiB,EAAE;QACxB,IAAI,CAACqI,sBAAsB,CAACzQ,CAAC,EAAEC,CAAC,CAAC;MACrC,CAAC,MACI;QACD,IAAI,CAACwQ,sBAAsB,CAACzQ,CAAC,GAAG,IAAI,CAACsP,wBAAwB,CAACtP,CAAC,EAAEC,CAAC,GAAG,IAAI,CAACqP,wBAAwB,CAACrP,CAAC,CAAC;MACzG;IACJ;EACJ;EACA;AACJ;AACA;AACA;EACI2N,qBAAqB,GAAG;IACpB,MAAM8C,aAAa,GAAG,IAAI,CAAC7G,gBAAgB;IAC3C,MAAM8G,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAMtB,eAAe,GAAGqB,aAAa,GAAGA,aAAa,CAAC7Z,QAAQ,GAAG,IAAI;IACrE,IAAI+Z,OAAO;IACX,IAAIvB,eAAe,IAAIqB,aAAa,EAAE;MAClC;MACA;MACA,MAAMG,QAAQ,GAAGH,aAAa,CAACnB,SAAS,GAAG,IAAI,CAAClH,kBAAkB,GAAG,IAAI;MACzE,MAAMyI,OAAO,GAAGJ,aAAa,CAACK,aAAa,CAACC,kBAAkB,CAAC3B,eAAe,EAAEqB,aAAa,CAACpN,OAAO,CAAC;MACtGwN,OAAO,CAACG,aAAa,EAAE;MACvBL,OAAO,GAAGM,WAAW,CAACJ,OAAO,EAAE,IAAI,CAAClQ,SAAS,CAAC;MAC9C,IAAI,CAAC0L,WAAW,GAAGwE,OAAO;MAC1B,IAAIJ,aAAa,CAACnB,SAAS,EAAE;QACzB4B,gBAAgB,CAACP,OAAO,EAAEC,QAAQ,CAAC;MACvC,CAAC,MACI;QACDD,OAAO,CAAC/S,KAAK,CAACM,SAAS,GAAGiT,YAAY,CAAC,IAAI,CAACvK,qBAAqB,CAAC7G,CAAC,EAAE,IAAI,CAAC6G,qBAAqB,CAAC5G,CAAC,CAAC;MACtG;IACJ,CAAC,MACI;MACD2Q,OAAO,GAAGvO,aAAa,CAAC,IAAI,CAACiE,YAAY,CAAC;MAC1C6K,gBAAgB,CAACP,OAAO,EAAE,IAAI,CAACvI,kBAAkB,CAAC;MAClD,IAAI,IAAI,CAAC+B,iBAAiB,EAAE;QACxBwG,OAAO,CAAC/S,KAAK,CAACM,SAAS,GAAG,IAAI,CAACiM,iBAAiB;MACpD;IACJ;IACArN,YAAY,CAAC6T,OAAO,CAAC/S,KAAK,EAAE;MACxB;MACA;MACA,gBAAgB,EAAE,MAAM;MACxB;MACA,QAAQ,EAAE,GAAG;MACb,UAAU,EAAE,OAAO;MACnB,KAAK,EAAE,GAAG;MACV,MAAM,EAAE,GAAG;MACX,SAAS,EAAG,GAAE,IAAI,CAAC0G,OAAO,CAAC8M,MAAM,IAAI,IAAK;IAC9C,CAAC,EAAExN,uBAAuB,CAAC;IAC3BpG,4BAA4B,CAACmT,OAAO,EAAE,KAAK,CAAC;IAC5CA,OAAO,CAACU,SAAS,CAAC3H,GAAG,CAAC,kBAAkB,CAAC;IACzCiH,OAAO,CAACW,YAAY,CAAC,KAAK,EAAE,IAAI,CAAChM,UAAU,CAAC;IAC5C,IAAIoL,YAAY,EAAE;MACd,IAAIa,KAAK,CAACC,OAAO,CAACd,YAAY,CAAC,EAAE;QAC7BA,YAAY,CAACtP,OAAO,CAACqQ,SAAS,IAAId,OAAO,CAACU,SAAS,CAAC3H,GAAG,CAAC+H,SAAS,CAAC,CAAC;MACvE,CAAC,MACI;QACDd,OAAO,CAACU,SAAS,CAAC3H,GAAG,CAACgH,YAAY,CAAC;MACvC;IACJ;IACA,OAAOC,OAAO;EAClB;EACA;AACJ;AACA;AACA;EACI/D,4BAA4B,GAAG;IAC3B;IACA,IAAI,CAAC,IAAI,CAAC9E,SAAS,EAAE;MACjB,OAAO4J,OAAO,CAACC,OAAO,EAAE;IAC5B;IACA,MAAMC,eAAe,GAAG,IAAI,CAACxI,YAAY,CAAC1J,qBAAqB,EAAE;IACjE;IACA,IAAI,CAAC0M,QAAQ,CAACiF,SAAS,CAAC3H,GAAG,CAAC,oBAAoB,CAAC;IACjD;IACA,IAAI,CAAC8G,sBAAsB,CAACoB,eAAe,CAAC5T,IAAI,EAAE4T,eAAe,CAAC9T,GAAG,CAAC;IACtE;IACA;IACA;IACA;IACA,MAAM+T,QAAQ,GAAGpT,kCAAkC,CAAC,IAAI,CAAC2N,QAAQ,CAAC;IAClE,IAAIyF,QAAQ,KAAK,CAAC,EAAE;MAChB,OAAOH,OAAO,CAACC,OAAO,EAAE;IAC5B;IACA,OAAO,IAAI,CAACpN,OAAO,CAAC0F,iBAAiB,CAAC,MAAM;MACxC,OAAO,IAAIyH,OAAO,CAACC,OAAO,IAAI;QAC1B,MAAMG,OAAO,GAAKvZ,KAAK,IAAK;UACxB,IAAI,CAACA,KAAK,IACLkD,sEAAe,CAAClD,KAAK,CAAC,KAAK,IAAI,CAAC6T,QAAQ,IAAI7T,KAAK,CAACwZ,YAAY,KAAK,WAAY,EAAE;YAClF,IAAI,CAAC3F,QAAQ,EAAE4F,mBAAmB,CAAC,eAAe,EAAEF,OAAO,CAAC;YAC5DH,OAAO,EAAE;YACTM,YAAY,CAACC,OAAO,CAAC;UACzB;QACJ,CAAE;QACF;QACA;QACA;QACA,MAAMA,OAAO,GAAGC,UAAU,CAACL,OAAO,EAAED,QAAQ,GAAG,GAAG,CAAC;QACnD,IAAI,CAACzF,QAAQ,CAAClC,gBAAgB,CAAC,eAAe,EAAE4H,OAAO,CAAC;MAC5D,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA;EACAxE,yBAAyB,GAAG;IACxB,MAAM8E,iBAAiB,GAAG,IAAI,CAACtI,oBAAoB;IACnD,MAAMuI,mBAAmB,GAAGD,iBAAiB,GAAGA,iBAAiB,CAACxb,QAAQ,GAAG,IAAI;IACjF,IAAIyW,WAAW;IACf,IAAIgF,mBAAmB,EAAE;MACrB,IAAI,CAAC9F,eAAe,GAAG6F,iBAAiB,CAACtB,aAAa,CAACC,kBAAkB,CAACsB,mBAAmB,EAAED,iBAAiB,CAAC/O,OAAO,CAAC;MACzH,IAAI,CAACkJ,eAAe,CAACyE,aAAa,EAAE;MACpC3D,WAAW,GAAG4D,WAAW,CAAC,IAAI,CAAC1E,eAAe,EAAE,IAAI,CAAC5L,SAAS,CAAC;IACnE,CAAC,MACI;MACD0M,WAAW,GAAGjL,aAAa,CAAC,IAAI,CAACiE,YAAY,CAAC;IAClD;IACA;IACA;IACAgH,WAAW,CAACzP,KAAK,CAAC0U,aAAa,GAAG,MAAM;IACxCjF,WAAW,CAACgE,SAAS,CAAC3H,GAAG,CAAC,sBAAsB,CAAC;IACjD,OAAO2D,WAAW;EACtB;EACA;AACJ;AACA;AACA;AACA;EACIkC,4BAA4B,CAACgD,WAAW,EAAElE,gBAAgB,EAAE9V,KAAK,EAAE;IAC/D,MAAMia,aAAa,GAAGnE,gBAAgB,KAAK,IAAI,CAAChI,YAAY,GAAG,IAAI,GAAGgI,gBAAgB;IACtF,MAAMoE,aAAa,GAAGD,aAAa,GAAGA,aAAa,CAAC9S,qBAAqB,EAAE,GAAG6S,WAAW;IACzF,MAAMG,KAAK,GAAGzF,YAAY,CAAC1U,KAAK,CAAC,GAAGA,KAAK,CAACoa,aAAa,CAAC,CAAC,CAAC,GAAGpa,KAAK;IAClE,MAAM2I,cAAc,GAAG,IAAI,CAAC0R,0BAA0B,EAAE;IACxD,MAAM7S,CAAC,GAAG2S,KAAK,CAACG,KAAK,GAAGJ,aAAa,CAACzU,IAAI,GAAGkD,cAAc,CAAClD,IAAI;IAChE,MAAMgC,CAAC,GAAG0S,KAAK,CAACI,KAAK,GAAGL,aAAa,CAAC3U,GAAG,GAAGoD,cAAc,CAACpD,GAAG;IAC9D,OAAO;MACHiC,CAAC,EAAE0S,aAAa,CAACzU,IAAI,GAAGuU,WAAW,CAACvU,IAAI,GAAG+B,CAAC;MAC5CC,CAAC,EAAEyS,aAAa,CAAC3U,GAAG,GAAGyU,WAAW,CAACzU,GAAG,GAAGkC;IAC7C,CAAC;EACL;EACA;EACAwG,yBAAyB,CAACjO,KAAK,EAAE;IAC7B,MAAM2I,cAAc,GAAG,IAAI,CAAC0R,0BAA0B,EAAE;IACxD,MAAMF,KAAK,GAAGzF,YAAY,CAAC1U,KAAK,CAAC;IAC3B;IACE;IACA;IACA;IACA;IACA;IACA;IACAA,KAAK,CAACwa,OAAO,CAAC,CAAC,CAAC,IAAIxa,KAAK,CAACya,cAAc,CAAC,CAAC,CAAC,IAAI;MAAEH,KAAK,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAC,GACvEva,KAAK;IACX,MAAMwH,CAAC,GAAG2S,KAAK,CAACG,KAAK,GAAG3R,cAAc,CAAClD,IAAI;IAC3C,MAAMgC,CAAC,GAAG0S,KAAK,CAACI,KAAK,GAAG5R,cAAc,CAACpD,GAAG;IAC1C;IACA;IACA,IAAI,IAAI,CAACwM,gBAAgB,EAAE;MACvB,MAAM2I,SAAS,GAAG,IAAI,CAAC3I,gBAAgB,CAAC4I,YAAY,EAAE;MACtD,IAAID,SAAS,EAAE;QACX,MAAME,QAAQ,GAAG,IAAI,CAAC7I,gBAAgB,CAAC8I,cAAc,EAAE;QACvDD,QAAQ,CAACpT,CAAC,GAAGA,CAAC;QACdoT,QAAQ,CAACnT,CAAC,GAAGA,CAAC;QACd,OAAOmT,QAAQ,CAACE,eAAe,CAACJ,SAAS,CAACK,OAAO,EAAE,CAAC;MACxD;IACJ;IACA,OAAO;MAAEvT,CAAC;MAAEC;IAAE,CAAC;EACnB;EACA;EACA6H,8BAA8B,CAAC6K,KAAK,EAAE;IAClC,MAAMa,iBAAiB,GAAG,IAAI,CAACtP,cAAc,GAAG,IAAI,CAACA,cAAc,CAACuP,QAAQ,GAAG,IAAI;IACnF,IAAI;MAAEzT,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACmI,iBAAiB,GAC/B,IAAI,CAACA,iBAAiB,CAACuK,KAAK,EAAE,IAAI,EAAE,IAAI,CAACtK,kBAAkB,EAAE,IAAI,CAACiH,wBAAwB,CAAC,GAC3FqD,KAAK;IACX,IAAI,IAAI,CAACc,QAAQ,KAAK,GAAG,IAAID,iBAAiB,KAAK,GAAG,EAAE;MACpDvT,CAAC,GAAG,IAAI,CAAC4G,qBAAqB,CAAC5G,CAAC;IACpC,CAAC,MACI,IAAI,IAAI,CAACwT,QAAQ,KAAK,GAAG,IAAID,iBAAiB,KAAK,GAAG,EAAE;MACzDxT,CAAC,GAAG,IAAI,CAAC6G,qBAAqB,CAAC7G,CAAC;IACpC;IACA,IAAI,IAAI,CAACoP,aAAa,EAAE;MACpB,MAAM;QAAEpP,CAAC,EAAE0T,OAAO;QAAEzT,CAAC,EAAE0T;MAAQ,CAAC,GAAG,IAAI,CAACrE,wBAAwB;MAChE,MAAMsE,YAAY,GAAG,IAAI,CAACxE,aAAa;MACvC,MAAM;QAAEtP,KAAK,EAAE+T,YAAY;QAAE9T,MAAM,EAAE+T;MAAc,CAAC,GAAG,IAAI,CAACC,eAAe,EAAE;MAC7E,MAAMC,IAAI,GAAGJ,YAAY,CAAC7V,GAAG,GAAG4V,OAAO;MACvC,MAAMM,IAAI,GAAGL,YAAY,CAAC/T,MAAM,IAAIiU,aAAa,GAAGH,OAAO,CAAC;MAC5D,MAAMO,IAAI,GAAGN,YAAY,CAAC3V,IAAI,GAAGyV,OAAO;MACxC,MAAMS,IAAI,GAAGP,YAAY,CAAChU,KAAK,IAAIiU,YAAY,GAAGH,OAAO,CAAC;MAC1D1T,CAAC,GAAGoU,OAAO,CAACpU,CAAC,EAAEkU,IAAI,EAAEC,IAAI,CAAC;MAC1BlU,CAAC,GAAGmU,OAAO,CAACnU,CAAC,EAAE+T,IAAI,EAAEC,IAAI,CAAC;IAC9B;IACA,OAAO;MAAEjU,CAAC;MAAEC;IAAE,CAAC;EACnB;EACA;EACAgI,4BAA4B,CAACoM,qBAAqB,EAAE;IAChD,MAAM;MAAErU,CAAC;MAAEC;IAAE,CAAC,GAAGoU,qBAAqB;IACtC,MAAM1L,KAAK,GAAG,IAAI,CAACC,sBAAsB;IACzC,MAAM0L,uBAAuB,GAAG,IAAI,CAAC7E,qCAAqC;IAC1E;IACA,MAAM8E,OAAO,GAAG5N,IAAI,CAACC,GAAG,CAAC5G,CAAC,GAAGsU,uBAAuB,CAACtU,CAAC,CAAC;IACvD,MAAMwU,OAAO,GAAG7N,IAAI,CAACC,GAAG,CAAC3G,CAAC,GAAGqU,uBAAuB,CAACrU,CAAC,CAAC;IACvD;IACA;IACA;IACA;IACA,IAAIsU,OAAO,GAAG,IAAI,CAAChQ,OAAO,CAACkQ,+BAA+B,EAAE;MACxD9L,KAAK,CAAC3I,CAAC,GAAGA,CAAC,GAAGsU,uBAAuB,CAACtU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAChDsU,uBAAuB,CAACtU,CAAC,GAAGA,CAAC;IACjC;IACA,IAAIwU,OAAO,GAAG,IAAI,CAACjQ,OAAO,CAACkQ,+BAA+B,EAAE;MACxD9L,KAAK,CAAC1I,CAAC,GAAGA,CAAC,GAAGqU,uBAAuB,CAACrU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAChDqU,uBAAuB,CAACrU,CAAC,GAAGA,CAAC;IACjC;IACA,OAAO0I,KAAK;EAChB;EACA;EACAvE,6BAA6B,GAAG;IAC5B,IAAI,CAAC,IAAI,CAACkC,YAAY,IAAI,CAAC,IAAI,CAACjC,QAAQ,EAAE;MACtC;IACJ;IACA,MAAMqQ,YAAY,GAAG,IAAI,CAACrQ,QAAQ,CAACjL,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAACoO,UAAU,EAAE;IACnE,IAAIkN,YAAY,KAAK,IAAI,CAACrP,0BAA0B,EAAE;MAClD,IAAI,CAACA,0BAA0B,GAAGqP,YAAY;MAC9CjX,4BAA4B,CAAC,IAAI,CAAC6I,YAAY,EAAEoO,YAAY,CAAC;IACjE;EACJ;EACA;EACAzK,2BAA2B,CAACvM,OAAO,EAAE;IACjCA,OAAO,CAACuU,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAChM,YAAY,EAAEtC,0BAA0B,CAAC;IACvFjG,OAAO,CAACuU,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAChM,YAAY,EAAExC,2BAA2B,CAAC;IACzF/F,OAAO,CAACuU,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACnJ,gBAAgB,EAAEnF,0BAA0B,CAAC;EAC/F;EACA;AACJ;AACA;AACA;AACA;EACI4E,0BAA0B,CAACvI,CAAC,EAAEC,CAAC,EAAE;IAC7B,MAAM9B,SAAS,GAAGiT,YAAY,CAACpR,CAAC,EAAEC,CAAC,CAAC;IACpC,MAAM0U,MAAM,GAAG,IAAI,CAACrO,YAAY,CAACzI,KAAK;IACtC;IACA;IACA;IACA,IAAI,IAAI,CAACuM,iBAAiB,IAAI,IAAI,EAAE;MAChC,IAAI,CAACA,iBAAiB,GAClBuK,MAAM,CAACxW,SAAS,IAAIwW,MAAM,CAACxW,SAAS,IAAI,MAAM,GAAGwW,MAAM,CAACxW,SAAS,GAAG,EAAE;IAC9E;IACA;IACA;IACA;IACAwW,MAAM,CAACxW,SAAS,GAAGD,iBAAiB,CAACC,SAAS,EAAE,IAAI,CAACiM,iBAAiB,CAAC;EAC3E;EACA;AACJ;AACA;AACA;AACA;EACIqG,sBAAsB,CAACzQ,CAAC,EAAEC,CAAC,EAAE;IACzB;IACA;IACA,MAAM7B,gBAAgB,GAAG,IAAI,CAACyL,gBAAgB,EAAEhT,QAAQ,GAAGwT,SAAS,GAAG,IAAI,CAACD,iBAAiB;IAC7F,MAAMjM,SAAS,GAAGiT,YAAY,CAACpR,CAAC,EAAEC,CAAC,CAAC;IACpC,IAAI,CAACoM,QAAQ,CAACxO,KAAK,CAACM,SAAS,GAAGD,iBAAiB,CAACC,SAAS,EAAEC,gBAAgB,CAAC;EAClF;EACA;AACJ;AACA;AACA;EACIsK,gBAAgB,CAACkM,eAAe,EAAE;IAC9B,MAAMC,cAAc,GAAG,IAAI,CAAChO,qBAAqB;IACjD,IAAIgO,cAAc,EAAE;MAChB,OAAO;QAAE7U,CAAC,EAAE4U,eAAe,CAAC5U,CAAC,GAAG6U,cAAc,CAAC7U,CAAC;QAAEC,CAAC,EAAE2U,eAAe,CAAC3U,CAAC,GAAG4U,cAAc,CAAC5U;MAAE,CAAC;IAC/F;IACA,OAAO;MAAED,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;EACzB;EACA;EACA+M,wBAAwB,GAAG;IACvB,IAAI,CAACoC,aAAa,GAAG,IAAI,CAACO,YAAY,GAAGtF,SAAS;IAClD,IAAI,CAACnB,gBAAgB,CAACnI,KAAK,EAAE;EACjC;EACA;AACJ;AACA;AACA;EACI+J,8BAA8B,GAAG;IAC7B,IAAI;MAAE9K,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAAC0E,iBAAiB;IACrC,IAAK3E,CAAC,KAAK,CAAC,IAAIC,CAAC,KAAK,CAAC,IAAK,IAAI,CAACuH,UAAU,EAAE,IAAI,CAAC,IAAI,CAACpC,gBAAgB,EAAE;MACrE;IACJ;IACA;IACA,MAAMoN,WAAW,GAAG,IAAI,CAAClM,YAAY,CAAC3G,qBAAqB,EAAE;IAC7D,MAAMiU,YAAY,GAAG,IAAI,CAACxO,gBAAgB,CAACzF,qBAAqB,EAAE;IAClE;IACA;IACA,IAAKiU,YAAY,CAAC9T,KAAK,KAAK,CAAC,IAAI8T,YAAY,CAAC7T,MAAM,KAAK,CAAC,IACrDyS,WAAW,CAAC1S,KAAK,KAAK,CAAC,IAAI0S,WAAW,CAACzS,MAAM,KAAK,CAAE,EAAE;MACvD;IACJ;IACA,MAAM+U,YAAY,GAAGlB,YAAY,CAAC3V,IAAI,GAAGuU,WAAW,CAACvU,IAAI;IACzD,MAAM8W,aAAa,GAAGvC,WAAW,CAAC5S,KAAK,GAAGgU,YAAY,CAAChU,KAAK;IAC5D,MAAMoV,WAAW,GAAGpB,YAAY,CAAC7V,GAAG,GAAGyU,WAAW,CAACzU,GAAG;IACtD,MAAMkX,cAAc,GAAGzC,WAAW,CAAC3S,MAAM,GAAG+T,YAAY,CAAC/T,MAAM;IAC/D;IACA;IACA,IAAI+T,YAAY,CAAC9T,KAAK,GAAG0S,WAAW,CAAC1S,KAAK,EAAE;MACxC,IAAIgV,YAAY,GAAG,CAAC,EAAE;QAClB9U,CAAC,IAAI8U,YAAY;MACrB;MACA,IAAIC,aAAa,GAAG,CAAC,EAAE;QACnB/U,CAAC,IAAI+U,aAAa;MACtB;IACJ,CAAC,MACI;MACD/U,CAAC,GAAG,CAAC;IACT;IACA;IACA;IACA,IAAI4T,YAAY,CAAC7T,MAAM,GAAGyS,WAAW,CAACzS,MAAM,EAAE;MAC1C,IAAIiV,WAAW,GAAG,CAAC,EAAE;QACjB/U,CAAC,IAAI+U,WAAW;MACpB;MACA,IAAIC,cAAc,GAAG,CAAC,EAAE;QACpBhV,CAAC,IAAIgV,cAAc;MACvB;IACJ,CAAC,MACI;MACDhV,CAAC,GAAG,CAAC;IACT;IACA,IAAID,CAAC,KAAK,IAAI,CAAC2E,iBAAiB,CAAC3E,CAAC,IAAIC,CAAC,KAAK,IAAI,CAAC0E,iBAAiB,CAAC1E,CAAC,EAAE;MAClE,IAAI,CAACgM,mBAAmB,CAAC;QAAEhM,CAAC;QAAED;MAAE,CAAC,CAAC;IACtC;EACJ;EACA;EACAqH,kBAAkB,CAAC7O,KAAK,EAAE;IACtB,MAAM6E,KAAK,GAAG,IAAI,CAACmI,cAAc;IACjC,IAAI,OAAOnI,KAAK,KAAK,QAAQ,EAAE;MAC3B,OAAOA,KAAK;IAChB,CAAC,MACI,IAAI6P,YAAY,CAAC1U,KAAK,CAAC,EAAE;MAC1B,OAAO6E,KAAK,CAAC6X,KAAK;IACtB;IACA,OAAO7X,KAAK,GAAGA,KAAK,CAAC8X,KAAK,GAAG,CAAC;EAClC;EACA;EACAhG,eAAe,CAAC3W,KAAK,EAAE;IACnB,MAAM4c,gBAAgB,GAAG,IAAI,CAAClM,gBAAgB,CAAC1H,YAAY,CAAChJ,KAAK,CAAC;IAClE,IAAI4c,gBAAgB,EAAE;MAClB,MAAM3T,MAAM,GAAG/F,sEAAe,CAAClD,KAAK,CAAC;MACrC;MACA;MACA,IAAI,IAAI,CAAC4W,aAAa,IAClB3N,MAAM,KAAK,IAAI,CAAC2D,gBAAgB,IAChC3D,MAAM,CAACQ,QAAQ,CAAC,IAAI,CAACmD,gBAAgB,CAAC,EAAE;QACxCjF,gBAAgB,CAAC,IAAI,CAACiP,aAAa,EAAEgG,gBAAgB,CAACrX,GAAG,EAAEqX,gBAAgB,CAACnX,IAAI,CAAC;MACrF;MACA,IAAI,CAAC4I,qBAAqB,CAAC7G,CAAC,IAAIoV,gBAAgB,CAACnX,IAAI;MACrD,IAAI,CAAC4I,qBAAqB,CAAC5G,CAAC,IAAImV,gBAAgB,CAACrX,GAAG;MACpD;MACA;MACA,IAAI,CAAC,IAAI,CAACmG,cAAc,EAAE;QACtB,IAAI,CAACU,gBAAgB,CAAC5E,CAAC,IAAIoV,gBAAgB,CAACnX,IAAI;QAChD,IAAI,CAAC2G,gBAAgB,CAAC3E,CAAC,IAAImV,gBAAgB,CAACrX,GAAG;QAC/C,IAAI,CAACwK,0BAA0B,CAAC,IAAI,CAAC3D,gBAAgB,CAAC5E,CAAC,EAAE,IAAI,CAAC4E,gBAAgB,CAAC3E,CAAC,CAAC;MACrF;IACJ;EACJ;EACA;EACA4S,0BAA0B,GAAG;IACzB,OAAQ,IAAI,CAAC3J,gBAAgB,CAACrI,SAAS,CAAC1H,GAAG,CAAC,IAAI,CAACyH,SAAS,CAAC,EAAEO,cAAc,IACvE,IAAI,CAAC+H,gBAAgB,CAAC9H,yBAAyB,EAAE;EACzD;EACA;AACJ;AACA;AACA;AACA;AACA;EACIxF,cAAc,GAAG;IACb,IAAI,IAAI,CAACyZ,iBAAiB,KAAKhL,SAAS,EAAE;MACtC,IAAI,CAACgL,iBAAiB,GAAGzZ,qEAAc,CAAC,IAAI,CAAC0K,YAAY,CAAC;IAC9D;IACA,OAAO,IAAI,CAAC+O,iBAAiB;EACjC;EACA;EACArH,yBAAyB,CAACsH,aAAa,EAAE5H,UAAU,EAAE;IACjD,MAAM6H,gBAAgB,GAAG,IAAI,CAACpJ,iBAAiB,IAAI,QAAQ;IAC3D,IAAIoJ,gBAAgB,KAAK,QAAQ,EAAE;MAC/B,OAAOD,aAAa;IACxB;IACA,IAAIC,gBAAgB,KAAK,QAAQ,EAAE;MAC/B,MAAMC,WAAW,GAAG,IAAI,CAAC5U,SAAS;MAClC;MACA;MACA;MACA,OAAQ8M,UAAU,IACd8H,WAAW,CAACC,iBAAiB,IAC7BD,WAAW,CAACE,uBAAuB,IACnCF,WAAW,CAACG,oBAAoB,IAChCH,WAAW,CAACI,mBAAmB,IAC/BJ,WAAW,CAAC3H,IAAI;IACxB;IACA,OAAO/R,oEAAa,CAACyZ,gBAAgB,CAAC;EAC1C;EACA;EACAxB,eAAe,GAAG;IACd;IACA;IACA,IAAI,CAAC,IAAI,CAACpE,YAAY,IAAK,CAAC,IAAI,CAACA,YAAY,CAAC7P,KAAK,IAAI,CAAC,IAAI,CAAC6P,YAAY,CAAC5P,MAAO,EAAE;MAC/E,IAAI,CAAC4P,YAAY,GAAG,IAAI,CAACtD,QAAQ,GAC3B,IAAI,CAACA,QAAQ,CAAC1M,qBAAqB,EAAE,GACrC,IAAI,CAAC0I,kBAAkB;IACjC;IACA,OAAO,IAAI,CAACsH,YAAY;EAC5B;EACA;EACAvJ,gBAAgB,CAAC5N,KAAK,EAAE;IACpB,OAAO,IAAI,CAAC6L,QAAQ,CAACrF,IAAI,CAACsF,MAAM,IAAI;MAChC,OAAO9L,KAAK,CAACiJ,MAAM,KAAKjJ,KAAK,CAACiJ,MAAM,KAAK6C,MAAM,IAAIA,MAAM,CAACrC,QAAQ,CAACzJ,KAAK,CAACiJ,MAAM,CAAC,CAAC;IACrF,CAAC,CAAC;EACN;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2P,YAAY,CAACpR,CAAC,EAAEC,CAAC,EAAE;EACxB;EACA;EACA,OAAQ,eAAc0G,IAAI,CAACkP,KAAK,CAAC7V,CAAC,CAAE,OAAM2G,IAAI,CAACkP,KAAK,CAAC5V,CAAC,CAAE,QAAO;AACnE;AACA;AACA,SAASmU,OAAO,CAAC/W,KAAK,EAAEyY,GAAG,EAAEC,GAAG,EAAE;EAC9B,OAAOpP,IAAI,CAACoP,GAAG,CAACD,GAAG,EAAEnP,IAAI,CAACmP,GAAG,CAACC,GAAG,EAAE1Y,KAAK,CAAC,CAAC;AAC9C;AACA;AACA,SAAS6P,YAAY,CAAC1U,KAAK,EAAE;EACzB;EACA;EACA;EACA,OAAOA,KAAK,CAAC6K,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,SAAS6N,WAAW,CAACJ,OAAO,EAAElQ,SAAS,EAAE;EACrC,MAAMoV,SAAS,GAAGlF,OAAO,CAACkF,SAAS;EACnC,IAAIA,SAAS,CAAC5c,MAAM,KAAK,CAAC,IAAI4c,SAAS,CAAC,CAAC,CAAC,CAACC,QAAQ,KAAKrV,SAAS,CAACsV,YAAY,EAAE;IAC5E,OAAOF,SAAS,CAAC,CAAC,CAAC;EACvB;EACA,MAAMG,OAAO,GAAGvV,SAAS,CAACwV,aAAa,CAAC,KAAK,CAAC;EAC9CJ,SAAS,CAAC3U,OAAO,CAACW,IAAI,IAAImU,OAAO,CAACrI,WAAW,CAAC9L,IAAI,CAAC,CAAC;EACpD,OAAOmU,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAShF,gBAAgB,CAAC1P,MAAM,EAAE4U,UAAU,EAAE;EAC1C5U,MAAM,CAAC5D,KAAK,CAACiC,KAAK,GAAI,GAAEuW,UAAU,CAACvW,KAAM,IAAG;EAC5C2B,MAAM,CAAC5D,KAAK,CAACkC,MAAM,GAAI,GAAEsW,UAAU,CAACtW,MAAO,IAAG;EAC9C0B,MAAM,CAAC5D,KAAK,CAACM,SAAS,GAAGiT,YAAY,CAACiF,UAAU,CAACpY,IAAI,EAAEoY,UAAU,CAACtY,GAAG,CAAC;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASrG,eAAe,CAAC4e,KAAK,EAAEC,SAAS,EAAEC,OAAO,EAAE;EAChD,MAAMC,IAAI,GAAGC,KAAK,CAACH,SAAS,EAAED,KAAK,CAACld,MAAM,GAAG,CAAC,CAAC;EAC/C,MAAMud,EAAE,GAAGD,KAAK,CAACF,OAAO,EAAEF,KAAK,CAACld,MAAM,GAAG,CAAC,CAAC;EAC3C,IAAIqd,IAAI,KAAKE,EAAE,EAAE;IACb;EACJ;EACA,MAAMlV,MAAM,GAAG6U,KAAK,CAACG,IAAI,CAAC;EAC1B,MAAM9N,KAAK,GAAGgO,EAAE,GAAGF,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;EAChC,KAAK,IAAI7T,CAAC,GAAG6T,IAAI,EAAE7T,CAAC,KAAK+T,EAAE,EAAE/T,CAAC,IAAI+F,KAAK,EAAE;IACrC2N,KAAK,CAAC1T,CAAC,CAAC,GAAG0T,KAAK,CAAC1T,CAAC,GAAG+F,KAAK,CAAC;EAC/B;EACA2N,KAAK,CAACK,EAAE,CAAC,GAAGlV,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASmV,iBAAiB,CAACC,YAAY,EAAEC,WAAW,EAAEne,YAAY,EAAEoe,WAAW,EAAE;EAC7E,MAAMN,IAAI,GAAGC,KAAK,CAAC/d,YAAY,EAAEke,YAAY,CAACzd,MAAM,GAAG,CAAC,CAAC;EACzD,MAAMud,EAAE,GAAGD,KAAK,CAACK,WAAW,EAAED,WAAW,CAAC1d,MAAM,CAAC;EACjD,IAAIyd,YAAY,CAACzd,MAAM,EAAE;IACrB0d,WAAW,CAACE,MAAM,CAACL,EAAE,EAAE,CAAC,EAAEE,YAAY,CAACG,MAAM,CAACP,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASQ,aAAa,CAACJ,YAAY,EAAEC,WAAW,EAAEne,YAAY,EAAEoe,WAAW,EAAE;EACzE,MAAMJ,EAAE,GAAGD,KAAK,CAACK,WAAW,EAAED,WAAW,CAAC1d,MAAM,CAAC;EACjD,IAAIyd,YAAY,CAACzd,MAAM,EAAE;IACrB0d,WAAW,CAACE,MAAM,CAACL,EAAE,EAAE,CAAC,EAAEE,YAAY,CAACle,YAAY,CAAC,CAAC;EACzD;AACJ;AACA;AACA,SAAS+d,KAAK,CAACrZ,KAAK,EAAE0Y,GAAG,EAAE;EACvB,OAAOpP,IAAI,CAACoP,GAAG,CAAC,CAAC,EAAEpP,IAAI,CAACmP,GAAG,CAACC,GAAG,EAAE1Y,KAAK,CAAC,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM6Z,sBAAsB,CAAC;EACzBvf,WAAW,CAACwf,QAAQ,EAAEzS,iBAAiB,EAAE;IACrC,IAAI,CAACyS,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACzS,iBAAiB,GAAGA,iBAAiB;IAC1C;IACA,IAAI,CAAC0S,cAAc,GAAG,EAAE;IACxB;IACA,IAAI,CAACC,WAAW,GAAG,UAAU;IAC7B;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,aAAa,GAAG;MACjBC,IAAI,EAAE,IAAI;MACV5O,KAAK,EAAE,CAAC;MACR6O,QAAQ,EAAE;IACd,CAAC;EACL;EACA;AACJ;AACA;AACA;EACIvJ,KAAK,CAACwJ,KAAK,EAAE;IACT,IAAI,CAACC,SAAS,CAACD,KAAK,CAAC;EACzB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIE,IAAI,CAAC7H,IAAI,EAAEvP,QAAQ,EAAEC,QAAQ,EAAEoX,YAAY,EAAE;IACzC,MAAMC,QAAQ,GAAG,IAAI,CAACT,cAAc;IACpC,MAAMU,QAAQ,GAAG,IAAI,CAACC,gCAAgC,CAACjI,IAAI,EAAEvP,QAAQ,EAAEC,QAAQ,EAAEoX,YAAY,CAAC;IAC9F,IAAIE,QAAQ,KAAK,CAAC,CAAC,IAAID,QAAQ,CAACze,MAAM,GAAG,CAAC,EAAE;MACxC,OAAO,IAAI;IACf;IACA,MAAM4e,YAAY,GAAG,IAAI,CAACX,WAAW,KAAK,YAAY;IACtD,MAAM1e,YAAY,GAAGkf,QAAQ,CAACI,SAAS,CAACC,WAAW,IAAIA,WAAW,CAACX,IAAI,KAAKzH,IAAI,CAAC;IACjF,MAAMqI,oBAAoB,GAAGN,QAAQ,CAACC,QAAQ,CAAC;IAC/C,MAAMlD,eAAe,GAAGiD,QAAQ,CAAClf,YAAY,CAAC,CAAC+G,UAAU;IACzD,MAAM0Y,WAAW,GAAGD,oBAAoB,CAACzY,UAAU;IACnD,MAAMiJ,KAAK,GAAGhQ,YAAY,GAAGmf,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9C;IACA,MAAMO,UAAU,GAAG,IAAI,CAACC,gBAAgB,CAAC1D,eAAe,EAAEwD,WAAW,EAAEzP,KAAK,CAAC;IAC7E;IACA,MAAM4P,aAAa,GAAG,IAAI,CAACC,mBAAmB,CAAC7f,YAAY,EAAEkf,QAAQ,EAAElP,KAAK,CAAC;IAC7E;IACA;IACA,MAAM8P,QAAQ,GAAGZ,QAAQ,CAACa,KAAK,EAAE;IACjC;IACAhhB,eAAe,CAACmgB,QAAQ,EAAElf,YAAY,EAAEmf,QAAQ,CAAC;IACjDD,QAAQ,CAACxW,OAAO,CAAC,CAACsX,OAAO,EAAErf,KAAK,KAAK;MACjC;MACA,IAAImf,QAAQ,CAACnf,KAAK,CAAC,KAAKqf,OAAO,EAAE;QAC7B;MACJ;MACA,MAAMC,aAAa,GAAGD,OAAO,CAACpB,IAAI,KAAKzH,IAAI;MAC3C,MAAM3H,MAAM,GAAGyQ,aAAa,GAAGP,UAAU,GAAGE,aAAa;MACzD,MAAMM,eAAe,GAAGD,aAAa,GAC/B9I,IAAI,CAAC1G,qBAAqB,EAAE,GAC5BuP,OAAO,CAACpB,IAAI,CAACjO,cAAc,EAAE;MACnC;MACAqP,OAAO,CAACxQ,MAAM,IAAIA,MAAM;MACxB;MACA;MACA;MACA;MACA,IAAI6P,YAAY,EAAE;QACd;QACA;QACAa,eAAe,CAAChb,KAAK,CAACM,SAAS,GAAGD,iBAAiB,CAAE,eAAcyI,IAAI,CAACkP,KAAK,CAAC8C,OAAO,CAACxQ,MAAM,CAAE,WAAU,EAAEwQ,OAAO,CAACva,gBAAgB,CAAC;QACnI+B,gBAAgB,CAACwY,OAAO,CAACjZ,UAAU,EAAE,CAAC,EAAEyI,MAAM,CAAC;MACnD,CAAC,MACI;QACD0Q,eAAe,CAAChb,KAAK,CAACM,SAAS,GAAGD,iBAAiB,CAAE,kBAAiByI,IAAI,CAACkP,KAAK,CAAC8C,OAAO,CAACxQ,MAAM,CAAE,QAAO,EAAEwQ,OAAO,CAACva,gBAAgB,CAAC;QACnI+B,gBAAgB,CAACwY,OAAO,CAACjZ,UAAU,EAAEyI,MAAM,EAAE,CAAC,CAAC;MACnD;IACJ,CAAC,CAAC;IACF;IACA,IAAI,CAACmP,aAAa,CAACE,QAAQ,GAAGtX,kBAAkB,CAACkY,WAAW,EAAE7X,QAAQ,EAAEC,QAAQ,CAAC;IACjF,IAAI,CAAC8W,aAAa,CAACC,IAAI,GAAGY,oBAAoB,CAACZ,IAAI;IACnD,IAAI,CAACD,aAAa,CAAC3O,KAAK,GAAGqP,YAAY,GAAGJ,YAAY,CAAC5X,CAAC,GAAG4X,YAAY,CAAC3X,CAAC;IACzE,OAAO;MAAEvH,aAAa,EAAEC,YAAY;MAAEA,YAAY,EAAEmf;IAAS,CAAC;EAClE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIzH,KAAK,CAACP,IAAI,EAAEvP,QAAQ,EAAEC,QAAQ,EAAElH,KAAK,EAAE;IACnC,MAAMwe,QAAQ,GAAGxe,KAAK,IAAI,IAAI,IAAIA,KAAK,GAAG,CAAC;IACrC;IACE;IACA,IAAI,CAACye,gCAAgC,CAACjI,IAAI,EAAEvP,QAAQ,EAAEC,QAAQ,CAAC,GACjElH,KAAK;IACX,MAAMwf,gBAAgB,GAAG,IAAI,CAACC,iBAAiB;IAC/C,MAAMpgB,YAAY,GAAGmgB,gBAAgB,CAACta,OAAO,CAACsR,IAAI,CAAC;IACnD,MAAMxC,WAAW,GAAGwC,IAAI,CAAC1G,qBAAqB,EAAE;IAChD,IAAI4P,oBAAoB,GAAGF,gBAAgB,CAAChB,QAAQ,CAAC;IACrD;IACA;IACA;IACA,IAAIkB,oBAAoB,KAAKlJ,IAAI,EAAE;MAC/BkJ,oBAAoB,GAAGF,gBAAgB,CAAChB,QAAQ,GAAG,CAAC,CAAC;IACzD;IACA;IACA;IACA,IAAI,CAACkB,oBAAoB,KACpBlB,QAAQ,IAAI,IAAI,IAAIA,QAAQ,KAAK,CAAC,CAAC,IAAIA,QAAQ,GAAGgB,gBAAgB,CAAC1f,MAAM,GAAG,CAAC,CAAC,IAC/E,IAAI,CAAC6f,wBAAwB,CAAC1Y,QAAQ,EAAEC,QAAQ,CAAC,EAAE;MACnDwY,oBAAoB,GAAGF,gBAAgB,CAAC,CAAC,CAAC;IAC9C;IACA;IACA;IACA,IAAIngB,YAAY,GAAG,CAAC,CAAC,EAAE;MACnBmgB,gBAAgB,CAAC9B,MAAM,CAACre,YAAY,EAAE,CAAC,CAAC;IAC5C;IACA;IACA;IACA,IAAIqgB,oBAAoB,IAAI,CAAC,IAAI,CAACtU,iBAAiB,CAAC8C,UAAU,CAACwR,oBAAoB,CAAC,EAAE;MAClF,MAAMtb,OAAO,GAAGsb,oBAAoB,CAAC1P,cAAc,EAAE;MACrD5L,OAAO,CAACwb,aAAa,CAACvL,YAAY,CAACL,WAAW,EAAE5P,OAAO,CAAC;MACxDob,gBAAgB,CAAC9B,MAAM,CAACc,QAAQ,EAAE,CAAC,EAAEhI,IAAI,CAAC;IAC9C,CAAC,MACI;MACDhU,oEAAa,CAAC,IAAI,CAACqb,QAAQ,CAAC,CAACrJ,WAAW,CAACR,WAAW,CAAC;MACrDwL,gBAAgB,CAAC/f,IAAI,CAAC+W,IAAI,CAAC;IAC/B;IACA;IACAxC,WAAW,CAACzP,KAAK,CAACM,SAAS,GAAG,EAAE;IAChC;IACA;IACA;IACA,IAAI,CAACgb,mBAAmB,EAAE;EAC9B;EACA;EACAzB,SAAS,CAACD,KAAK,EAAE;IACb,IAAI,CAACsB,iBAAiB,GAAGtB,KAAK,CAACiB,KAAK,EAAE;IACtC,IAAI,CAACS,mBAAmB,EAAE;EAC9B;EACA;EACAC,iBAAiB,CAACC,SAAS,EAAE;IACzB,IAAI,CAACC,cAAc,GAAGD,SAAS;EACnC;EACA;EACA5N,KAAK,GAAG;IACJ;IACA,IAAI,CAACsN,iBAAiB,CAAC1X,OAAO,CAACyO,IAAI,IAAI;MACnC,MAAM9F,WAAW,GAAG8F,IAAI,CAACxG,cAAc,EAAE;MACzC,IAAIU,WAAW,EAAE;QACb,MAAM5L,gBAAgB,GAAG,IAAI,CAACgZ,cAAc,CAACpY,IAAI,CAACua,CAAC,IAAIA,CAAC,CAAChC,IAAI,KAAKzH,IAAI,CAAC,EAAE1R,gBAAgB;QACzF4L,WAAW,CAACnM,KAAK,CAACM,SAAS,GAAGC,gBAAgB,IAAI,EAAE;MACxD;IACJ,CAAC,CAAC;IACF,IAAI,CAACgZ,cAAc,GAAG,EAAE;IACxB,IAAI,CAAC2B,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACzB,aAAa,CAACC,IAAI,GAAG,IAAI;IAC9B,IAAI,CAACD,aAAa,CAAC3O,KAAK,GAAG,CAAC;IAC5B,IAAI,CAAC2O,aAAa,CAACE,QAAQ,GAAG,KAAK;EACvC;EACA;AACJ;AACA;AACA;EACIgC,sBAAsB,GAAG;IACrB,OAAO,IAAI,CAACT,iBAAiB;EACjC;EACA;EACA3K,YAAY,CAAC0B,IAAI,EAAE;IACf;IACA;IACA;IACA,MAAM2H,KAAK,GAAG,IAAI,CAACJ,WAAW,KAAK,YAAY,IAAI,IAAI,CAACvL,SAAS,KAAK,KAAK,GACrE,IAAI,CAACsL,cAAc,CAACsB,KAAK,EAAE,CAACe,OAAO,EAAE,GACrC,IAAI,CAACrC,cAAc;IACzB,OAAOK,KAAK,CAACQ,SAAS,CAACC,WAAW,IAAIA,WAAW,CAACX,IAAI,KAAKzH,IAAI,CAAC;EACpE;EACA;EACA4J,cAAc,CAAC5X,aAAa,EAAEC,cAAc,EAAE;IAC1C;IACA;IACA;IACA;IACA,IAAI,CAACqV,cAAc,CAAC/V,OAAO,CAAC,CAAC;MAAE3B;IAAW,CAAC,KAAK;MAC5CS,gBAAgB,CAACT,UAAU,EAAEoC,aAAa,EAAEC,cAAc,CAAC;IAC/D,CAAC,CAAC;IACF;IACA;IACA,IAAI,CAACqV,cAAc,CAAC/V,OAAO,CAAC,CAAC;MAAEkW;IAAK,CAAC,KAAK;MACtC,IAAI,IAAI,CAAC7S,iBAAiB,CAAC8C,UAAU,CAAC+P,IAAI,CAAC,EAAE;QACzC;QACA;QACAA,IAAI,CAACnL,4BAA4B,EAAE;MACvC;IACJ,CAAC,CAAC;EACN;EACA;EACA+M,mBAAmB,GAAG;IAClB,MAAMnB,YAAY,GAAG,IAAI,CAACX,WAAW,KAAK,YAAY;IACtD,IAAI,CAACD,cAAc,GAAG,IAAI,CAAC2B,iBAAiB,CACvCrc,GAAG,CAAC6a,IAAI,IAAI;MACb,MAAMoC,gBAAgB,GAAGpC,IAAI,CAAChO,iBAAiB,EAAE;MACjD,OAAO;QACHgO,IAAI;QACJpP,MAAM,EAAE,CAAC;QACT/J,gBAAgB,EAAEub,gBAAgB,CAAC9b,KAAK,CAACM,SAAS,IAAI,EAAE;QACxDuB,UAAU,EAAED,oBAAoB,CAACka,gBAAgB;MACrD,CAAC;IACL,CAAC,CAAC,CACGhC,IAAI,CAAC,CAACiC,CAAC,EAAEC,CAAC,KAAK;MAChB,OAAO7B,YAAY,GACb4B,CAAC,CAACla,UAAU,CAACzB,IAAI,GAAG4b,CAAC,CAACna,UAAU,CAACzB,IAAI,GACrC2b,CAAC,CAACla,UAAU,CAAC3B,GAAG,GAAG8b,CAAC,CAACna,UAAU,CAAC3B,GAAG;IAC7C,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;EACIua,gBAAgB,CAAC1D,eAAe,EAAEwD,WAAW,EAAEzP,KAAK,EAAE;IAClD,MAAMqP,YAAY,GAAG,IAAI,CAACX,WAAW,KAAK,YAAY;IACtD,IAAIgB,UAAU,GAAGL,YAAY,GACvBI,WAAW,CAACna,IAAI,GAAG2W,eAAe,CAAC3W,IAAI,GACvCma,WAAW,CAACra,GAAG,GAAG6W,eAAe,CAAC7W,GAAG;IAC3C;IACA,IAAI4K,KAAK,KAAK,CAAC,CAAC,EAAE;MACd0P,UAAU,IAAIL,YAAY,GACpBI,WAAW,CAACtY,KAAK,GAAG8U,eAAe,CAAC9U,KAAK,GACzCsY,WAAW,CAACrY,MAAM,GAAG6U,eAAe,CAAC7U,MAAM;IACrD;IACA,OAAOsY,UAAU;EACrB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIG,mBAAmB,CAAC7f,YAAY,EAAEkf,QAAQ,EAAElP,KAAK,EAAE;IAC/C,MAAMqP,YAAY,GAAG,IAAI,CAACX,WAAW,KAAK,YAAY;IACtD,MAAMzC,eAAe,GAAGiD,QAAQ,CAAClf,YAAY,CAAC,CAAC+G,UAAU;IACzD,MAAMoa,gBAAgB,GAAGjC,QAAQ,CAAClf,YAAY,GAAGgQ,KAAK,GAAG,CAAC,CAAC,CAAC;IAC5D,IAAI4P,aAAa,GAAG3D,eAAe,CAACoD,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAC,GAAGrP,KAAK;IAC9E,IAAImR,gBAAgB,EAAE;MAClB,MAAM7L,KAAK,GAAG+J,YAAY,GAAG,MAAM,GAAG,KAAK;MAC3C,MAAM+B,GAAG,GAAG/B,YAAY,GAAG,OAAO,GAAG,QAAQ;MAC7C;MACA;MACA;MACA;MACA,IAAIrP,KAAK,KAAK,CAAC,CAAC,EAAE;QACd4P,aAAa,IAAIuB,gBAAgB,CAACpa,UAAU,CAACuO,KAAK,CAAC,GAAG2G,eAAe,CAACmF,GAAG,CAAC;MAC9E,CAAC,MACI;QACDxB,aAAa,IAAI3D,eAAe,CAAC3G,KAAK,CAAC,GAAG6L,gBAAgB,CAACpa,UAAU,CAACqa,GAAG,CAAC;MAC9E;IACJ;IACA,OAAOxB,aAAa;EACxB;EACA;AACJ;AACA;AACA;AACA;EACIU,wBAAwB,CAAC1Y,QAAQ,EAAEC,QAAQ,EAAE;IACzC,IAAI,CAAC,IAAI,CAACuY,iBAAiB,CAAC3f,MAAM,EAAE;MAChC,OAAO,KAAK;IAChB;IACA,MAAM4gB,aAAa,GAAG,IAAI,CAAC5C,cAAc;IACzC,MAAMY,YAAY,GAAG,IAAI,CAACX,WAAW,KAAK,YAAY;IACtD;IACA;IACA,MAAM4C,QAAQ,GAAGD,aAAa,CAAC,CAAC,CAAC,CAACzC,IAAI,KAAK,IAAI,CAACwB,iBAAiB,CAAC,CAAC,CAAC;IACpE,IAAIkB,QAAQ,EAAE;MACV,MAAMC,YAAY,GAAGF,aAAa,CAACA,aAAa,CAAC5gB,MAAM,GAAG,CAAC,CAAC,CAACsG,UAAU;MACvE,OAAOsY,YAAY,GAAGzX,QAAQ,IAAI2Z,YAAY,CAACta,KAAK,GAAGY,QAAQ,IAAI0Z,YAAY,CAACra,MAAM;IAC1F,CAAC,MACI;MACD,MAAMsa,aAAa,GAAGH,aAAa,CAAC,CAAC,CAAC,CAACta,UAAU;MACjD,OAAOsY,YAAY,GAAGzX,QAAQ,IAAI4Z,aAAa,CAAClc,IAAI,GAAGuC,QAAQ,IAAI2Z,aAAa,CAACpc,GAAG;IACxF;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIga,gCAAgC,CAACjI,IAAI,EAAEvP,QAAQ,EAAEC,QAAQ,EAAEmI,KAAK,EAAE;IAC9D,MAAMqP,YAAY,GAAG,IAAI,CAACX,WAAW,KAAK,YAAY;IACtD,MAAM/d,KAAK,GAAG,IAAI,CAAC8d,cAAc,CAACa,SAAS,CAAC,CAAC;MAAEV,IAAI;MAAE7X;IAAW,CAAC,KAAK;MAClE;MACA,IAAI6X,IAAI,KAAKzH,IAAI,EAAE;QACf,OAAO,KAAK;MAChB;MACA,IAAInH,KAAK,EAAE;QACP,MAAMmD,SAAS,GAAGkM,YAAY,GAAGrP,KAAK,CAAC3I,CAAC,GAAG2I,KAAK,CAAC1I,CAAC;QAClD;QACA;QACA;QACA,IAAIsX,IAAI,KAAK,IAAI,CAACD,aAAa,CAACC,IAAI,IAChC,IAAI,CAACD,aAAa,CAACE,QAAQ,IAC3B1L,SAAS,KAAK,IAAI,CAACwL,aAAa,CAAC3O,KAAK,EAAE;UACxC,OAAO,KAAK;QAChB;MACJ;MACA,OAAOqP,YAAY;MACb;MACE;MACAzX,QAAQ,IAAIoG,IAAI,CAACyT,KAAK,CAAC1a,UAAU,CAACzB,IAAI,CAAC,IAAIsC,QAAQ,GAAGoG,IAAI,CAACyT,KAAK,CAAC1a,UAAU,CAACE,KAAK,CAAC,GACpFY,QAAQ,IAAImG,IAAI,CAACyT,KAAK,CAAC1a,UAAU,CAAC3B,GAAG,CAAC,IAAIyC,QAAQ,GAAGmG,IAAI,CAACyT,KAAK,CAAC1a,UAAU,CAACG,MAAM,CAAC;IAC5F,CAAC,CAAC;IACF,OAAOvG,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAACggB,cAAc,CAAChgB,KAAK,EAAEwW,IAAI,CAAC,GAAG,CAAC,CAAC,GAAGxW,KAAK;EACzE;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM+gB,wBAAwB,GAAG,IAAI;AACrC;AACA;AACA;AACA;AACA,MAAMC,0BAA0B,GAAG,IAAI;AACvC;AACA;AACA;AACA,MAAMC,WAAW,CAAC;EACd5iB,WAAW,CAAC+F,OAAO,EAAEgH,iBAAiB,EAAE9D,SAAS,EAAE4D,OAAO,EAAEC,cAAc,EAAE;IACxE,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC;IACA,IAAI,CAACT,QAAQ,GAAG,KAAK;IACrB;IACA,IAAI,CAACsM,eAAe,GAAG,KAAK;IAC5B;AACR;AACA;AACA;IACQ,IAAI,CAACkK,kBAAkB,GAAG,KAAK;IAC/B;IACA,IAAI,CAACC,cAAc,GAAG,CAAC;IACvB;AACR;AACA;AACA;IACQ,IAAI,CAACC,cAAc,GAAG,MAAM,IAAI;IAChC;IACA,IAAI,CAACC,aAAa,GAAG,MAAM,IAAI;IAC/B;IACA,IAAI,CAAClV,aAAa,GAAG,IAAItJ,yCAAO,EAAE;IAClC;AACR;AACA;IACQ,IAAI,CAAC0J,OAAO,GAAG,IAAI1J,yCAAO,EAAE;IAC5B;AACR;AACA;AACA;IACQ,IAAI,CAAC2J,MAAM,GAAG,IAAI3J,yCAAO,EAAE;IAC3B;IACA,IAAI,CAAC4J,OAAO,GAAG,IAAI5J,yCAAO,EAAE;IAC5B;IACA,IAAI,CAACye,MAAM,GAAG,IAAIze,yCAAO,EAAE;IAC3B;IACA,IAAI,CAAC0e,gBAAgB,GAAG,IAAI1e,yCAAO,EAAE;IACrC;IACA,IAAI,CAAC2e,gBAAgB,GAAG,IAAI3e,yCAAO,EAAE;IACrC;IACA,IAAI,CAAC4e,WAAW,GAAG,KAAK;IACxB;IACA,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB;IACA,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB;IACA,IAAI,CAACC,eAAe,GAAG,IAAIpX,GAAG,EAAE;IAChC;IACA,IAAI,CAACqX,2BAA2B,GAAG/e,oDAAkB;IACrD;IACA,IAAI,CAACgf,wBAAwB,GAAG,CAAC,CAAC;IAClC;IACA,IAAI,CAACC,0BAA0B,GAAG,CAAC,CAAC;IACpC;IACA,IAAI,CAACC,iBAAiB,GAAG,IAAInf,yCAAO,EAAE;IACtC;IACA,IAAI,CAACkZ,iBAAiB,GAAG,IAAI;IAC7B;IACA,IAAI,CAACkG,oBAAoB,GAAG,MAAM;MAC9B,IAAI,CAAC3O,cAAc,EAAE;MACrBrS,8CAAQ,CAAC,CAAC,EAAE8B,yDAAuB,CAAC,CAC/Bmf,IAAI,CAAChf,yDAAS,CAAC,IAAI,CAAC8e,iBAAiB,CAAC,CAAC,CACvCzQ,SAAS,CAAC,MAAM;QACjB,MAAM7I,IAAI,GAAG,IAAI,CAACyZ,WAAW;QAC7B,MAAMC,UAAU,GAAG,IAAI,CAACjB,cAAc;QACtC,IAAI,IAAI,CAACW,wBAAwB,KAAK,CAAC,CAAC,sCAAsC;UAC1EpZ,IAAI,CAAC2Z,QAAQ,CAAC,CAAC,EAAE,CAACD,UAAU,CAAC;QACjC,CAAC,MACI,IAAI,IAAI,CAACN,wBAAwB,KAAK,CAAC,CAAC,wCAAwC;UACjFpZ,IAAI,CAAC2Z,QAAQ,CAAC,CAAC,EAAED,UAAU,CAAC;QAChC;QACA,IAAI,IAAI,CAACL,0BAA0B,KAAK,CAAC,CAAC,0CAA0C;UAChFrZ,IAAI,CAAC2Z,QAAQ,CAAC,CAACD,UAAU,EAAE,CAAC,CAAC;QACjC,CAAC,MACI,IAAI,IAAI,CAACL,0BAA0B,KAAK,CAAC,CAAC,2CAA2C;UACtFrZ,IAAI,CAAC2Z,QAAQ,CAACD,UAAU,EAAE,CAAC,CAAC;QAChC;MACJ,CAAC,CAAC;IACN,CAAC;IACD,IAAI,CAAChe,OAAO,GAAG5B,oEAAa,CAAC4B,OAAO,CAAC;IACrC,IAAI,CAACkD,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACgb,qBAAqB,CAAC,CAAC,IAAI,CAACle,OAAO,CAAC,CAAC;IAC1CgH,iBAAiB,CAACmX,qBAAqB,CAAC,IAAI,CAAC;IAC7C,IAAI,CAAC3S,gBAAgB,GAAG,IAAIvI,qBAAqB,CAACC,SAAS,CAAC;IAC5D,IAAI,CAACkb,aAAa,GAAG,IAAI5E,sBAAsB,CAAC,IAAI,CAACxZ,OAAO,EAAEgH,iBAAiB,CAAC;IAChF,IAAI,CAACoX,aAAa,CAAC1C,iBAAiB,CAAC,CAAC9f,KAAK,EAAEwW,IAAI,KAAK,IAAI,CAAC6K,aAAa,CAACrhB,KAAK,EAAEwW,IAAI,EAAE,IAAI,CAAC,CAAC;EAChG;EACA;EACA7E,OAAO,GAAG;IACN,IAAI,CAAC2B,cAAc,EAAE;IACrB,IAAI,CAAC0O,iBAAiB,CAAC9P,QAAQ,EAAE;IACjC,IAAI,CAAC2P,2BAA2B,CAACxQ,WAAW,EAAE;IAC9C,IAAI,CAAClF,aAAa,CAAC+F,QAAQ,EAAE;IAC7B,IAAI,CAAC3F,OAAO,CAAC2F,QAAQ,EAAE;IACvB,IAAI,CAAC1F,MAAM,CAAC0F,QAAQ,EAAE;IACtB,IAAI,CAACzF,OAAO,CAACyF,QAAQ,EAAE;IACvB,IAAI,CAACoP,MAAM,CAACpP,QAAQ,EAAE;IACtB,IAAI,CAACqP,gBAAgB,CAACrP,QAAQ,EAAE;IAChC,IAAI,CAACsP,gBAAgB,CAACtP,QAAQ,EAAE;IAChC,IAAI,CAAC0P,eAAe,CAACna,KAAK,EAAE;IAC5B,IAAI,CAAC0a,WAAW,GAAG,IAAI;IACvB,IAAI,CAACvS,gBAAgB,CAACnI,KAAK,EAAE;IAC7B,IAAI,CAAC2D,iBAAiB,CAACqX,mBAAmB,CAAC,IAAI,CAAC;EACpD;EACA;EACAvU,UAAU,GAAG;IACT,OAAO,IAAI,CAACuT,WAAW;EAC3B;EACA;EACA9M,KAAK,GAAG;IACJ,IAAI,CAAC+N,gBAAgB,EAAE;IACvB,IAAI,CAACC,wBAAwB,EAAE;EACnC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI5L,KAAK,CAACP,IAAI,EAAEvP,QAAQ,EAAEC,QAAQ,EAAElH,KAAK,EAAE;IACnC,IAAI,CAAC0iB,gBAAgB,EAAE;IACvB;IACA;IACA,IAAI1iB,KAAK,IAAI,IAAI,IAAI,IAAI,CAACgX,eAAe,EAAE;MACvChX,KAAK,GAAG,IAAI,CAAC0hB,WAAW,CAACxc,OAAO,CAACsR,IAAI,CAAC;IAC1C;IACA,IAAI,CAACgM,aAAa,CAACzL,KAAK,CAACP,IAAI,EAAEvP,QAAQ,EAAEC,QAAQ,EAAElH,KAAK,CAAC;IACzD;IACA;IACA,IAAI,CAAC4iB,qBAAqB,EAAE;IAC5B;IACA,IAAI,CAACD,wBAAwB,EAAE;IAC/B,IAAI,CAACpW,OAAO,CAACK,IAAI,CAAC;MAAE4J,IAAI;MAAExI,SAAS,EAAE,IAAI;MAAE3O,YAAY,EAAE,IAAI,CAACyV,YAAY,CAAC0B,IAAI;IAAE,CAAC,CAAC;EACvF;EACA;AACJ;AACA;AACA;EACIM,IAAI,CAACN,IAAI,EAAE;IACP,IAAI,CAACqM,MAAM,EAAE;IACb,IAAI,CAACrW,MAAM,CAACI,IAAI,CAAC;MAAE4J,IAAI;MAAExI,SAAS,EAAE;IAAK,CAAC,CAAC;EAC/C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI/O,IAAI,CAACuX,IAAI,EAAEnX,YAAY,EAAED,aAAa,EAAEqX,iBAAiB,EAAEH,sBAAsB,EAAEnH,QAAQ,EAAEwE,SAAS,EAAEzU,KAAK,GAAG,CAAC,CAAC,EAAE;IAChH,IAAI,CAAC2jB,MAAM,EAAE;IACb,IAAI,CAACpW,OAAO,CAACG,IAAI,CAAC;MACd4J,IAAI;MACJnX,YAAY;MACZD,aAAa;MACb4O,SAAS,EAAE,IAAI;MACfyI,iBAAiB;MACjBH,sBAAsB;MACtBnH,QAAQ;MACRwE,SAAS;MACTzU;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;EACIkf,SAAS,CAACD,KAAK,EAAE;IACb,MAAM2E,aAAa,GAAG,IAAI,CAACpB,WAAW;IACtC,IAAI,CAACA,WAAW,GAAGvD,KAAK;IACxBA,KAAK,CAACpW,OAAO,CAACyO,IAAI,IAAIA,IAAI,CAAC/D,kBAAkB,CAAC,IAAI,CAAC,CAAC;IACpD,IAAI,IAAI,CAACvE,UAAU,EAAE,EAAE;MACnB,MAAM6U,YAAY,GAAGD,aAAa,CAACE,MAAM,CAACxM,IAAI,IAAIA,IAAI,CAACtI,UAAU,EAAE,CAAC;MACpE;MACA;MACA,IAAI6U,YAAY,CAACE,KAAK,CAACzM,IAAI,IAAI2H,KAAK,CAACjZ,OAAO,CAACsR,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;QACxD,IAAI,CAACqM,MAAM,EAAE;MACjB,CAAC,MACI;QACD,IAAI,CAACL,aAAa,CAACpE,SAAS,CAAC,IAAI,CAACsD,WAAW,CAAC;MAClD;IACJ;IACA,OAAO,IAAI;EACf;EACA;EACAnP,aAAa,CAACC,SAAS,EAAE;IACrB,IAAI,CAACgQ,aAAa,CAAChQ,SAAS,GAAGA,SAAS;IACxC,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACI0Q,WAAW,CAACA,WAAW,EAAE;IACrB,IAAI,CAACvB,SAAS,GAAGuB,WAAW,CAAC9D,KAAK,EAAE;IACpC,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACI+D,eAAe,CAACpF,WAAW,EAAE;IACzB;IACA;IACA,IAAI,CAACyE,aAAa,CAACzE,WAAW,GAAGA,WAAW;IAC5C,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIuE,qBAAqB,CAAC3a,QAAQ,EAAE;IAC5B,MAAMvD,OAAO,GAAG5B,oEAAa,CAAC,IAAI,CAAC4B,OAAO,CAAC;IAC3C;IACA;IACA,IAAI,CAACgf,mBAAmB,GACpBzb,QAAQ,CAACzC,OAAO,CAACd,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAACA,OAAO,EAAE,GAAGuD,QAAQ,CAAC,GAAGA,QAAQ,CAACyX,KAAK,EAAE;IAChF,OAAO,IAAI;EACf;EACA;EACArK,oBAAoB,GAAG;IACnB,OAAO,IAAI,CAACqO,mBAAmB;EACnC;EACA;AACJ;AACA;AACA;EACItO,YAAY,CAAC0B,IAAI,EAAE;IACf,OAAO,IAAI,CAACiL,WAAW,GACjB,IAAI,CAACe,aAAa,CAAC1N,YAAY,CAAC0B,IAAI,CAAC,GACrC,IAAI,CAACkL,WAAW,CAACxc,OAAO,CAACsR,IAAI,CAAC;EACxC;EACA;AACJ;AACA;AACA;EACIrI,WAAW,GAAG;IACV,OAAO,IAAI,CAACyT,eAAe,CAACyB,IAAI,GAAG,CAAC;EACxC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACInM,SAAS,CAACV,IAAI,EAAEvP,QAAQ,EAAEC,QAAQ,EAAEoX,YAAY,EAAE;IAC9C;IACA,IAAI,IAAI,CAACtH,eAAe,IACpB,CAAC,IAAI,CAACsM,WAAW,IACjB,CAACxc,uBAAuB,CAAC,IAAI,CAACwc,WAAW,EAAEvC,wBAAwB,EAAE9Z,QAAQ,EAAEC,QAAQ,CAAC,EAAE;MAC1F;IACJ;IACA,MAAMqc,MAAM,GAAG,IAAI,CAACf,aAAa,CAACnE,IAAI,CAAC7H,IAAI,EAAEvP,QAAQ,EAAEC,QAAQ,EAAEoX,YAAY,CAAC;IAC9E,IAAIiF,MAAM,EAAE;MACR,IAAI,CAACjC,MAAM,CAAC1U,IAAI,CAAC;QACbxN,aAAa,EAAEmkB,MAAM,CAACnkB,aAAa;QACnCC,YAAY,EAAEkkB,MAAM,CAAClkB,YAAY;QACjC2O,SAAS,EAAE,IAAI;QACfwI;MACJ,CAAC,CAAC;IACN;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;EACIS,0BAA0B,CAAChQ,QAAQ,EAAEC,QAAQ,EAAE;IAC3C,IAAI,IAAI,CAACga,kBAAkB,EAAE;MACzB;IACJ;IACA,IAAIsC,UAAU;IACd,IAAIC,uBAAuB,GAAG,CAAC,CAAC;IAChC,IAAIC,yBAAyB,GAAG,CAAC,CAAC;IAClC;IACA,IAAI,CAAC9T,gBAAgB,CAACrI,SAAS,CAACQ,OAAO,CAAC,CAACpH,QAAQ,EAAEyD,OAAO,KAAK;MAC3D;MACA;MACA,IAAIA,OAAO,KAAK,IAAI,CAACkD,SAAS,IAAI,CAAC3G,QAAQ,CAACyF,UAAU,IAAIod,UAAU,EAAE;QAClE;MACJ;MACA,IAAI1c,uBAAuB,CAACnG,QAAQ,CAACyF,UAAU,EAAE2a,wBAAwB,EAAE9Z,QAAQ,EAAEC,QAAQ,CAAC,EAAE;QAC5F,CAACuc,uBAAuB,EAAEC,yBAAyB,CAAC,GAAGC,0BAA0B,CAACvf,OAAO,EAAEzD,QAAQ,CAACyF,UAAU,EAAEa,QAAQ,EAAEC,QAAQ,CAAC;QACnI,IAAIuc,uBAAuB,IAAIC,yBAAyB,EAAE;UACtDF,UAAU,GAAGpf,OAAO;QACxB;MACJ;IACJ,CAAC,CAAC;IACF;IACA,IAAI,CAACqf,uBAAuB,IAAI,CAACC,yBAAyB,EAAE;MACxD,MAAM;QAAEld,KAAK;QAAEC;MAAO,CAAC,GAAG,IAAI,CAAC0E,cAAc,CAACyY,eAAe,EAAE;MAC/D,MAAMxd,UAAU,GAAG;QACfI,KAAK;QACLC,MAAM;QACNhC,GAAG,EAAE,CAAC;QACN6B,KAAK,EAAEE,KAAK;QACZD,MAAM,EAAEE,MAAM;QACd9B,IAAI,EAAE;MACV,CAAC;MACD8e,uBAAuB,GAAGI,0BAA0B,CAACzd,UAAU,EAAEc,QAAQ,CAAC;MAC1Ewc,yBAAyB,GAAGI,4BAA4B,CAAC1d,UAAU,EAAEa,QAAQ,CAAC;MAC9Euc,UAAU,GAAG5a,MAAM;IACvB;IACA,IAAI4a,UAAU,KACTC,uBAAuB,KAAK,IAAI,CAAC3B,wBAAwB,IACtD4B,yBAAyB,KAAK,IAAI,CAAC3B,0BAA0B,IAC7DyB,UAAU,KAAK,IAAI,CAACrB,WAAW,CAAC,EAAE;MACtC,IAAI,CAACL,wBAAwB,GAAG2B,uBAAuB;MACvD,IAAI,CAAC1B,0BAA0B,GAAG2B,yBAAyB;MAC3D,IAAI,CAACvB,WAAW,GAAGqB,UAAU;MAC7B,IAAI,CAACC,uBAAuB,IAAIC,yBAAyB,KAAKF,UAAU,EAAE;QACtE,IAAI,CAACtY,OAAO,CAAC0F,iBAAiB,CAAC,IAAI,CAACqR,oBAAoB,CAAC;MAC7D,CAAC,MACI;QACD,IAAI,CAAC3O,cAAc,EAAE;MACzB;IACJ;EACJ;EACA;EACAA,cAAc,GAAG;IACb,IAAI,CAAC0O,iBAAiB,CAACpV,IAAI,EAAE;EACjC;EACA;EACA8V,gBAAgB,GAAG;IACf,MAAMrH,MAAM,GAAG7Y,oEAAa,CAAC,IAAI,CAAC4B,OAAO,CAAC,CAACG,KAAK;IAChD,IAAI,CAAC4H,aAAa,CAACS,IAAI,EAAE;IACzB,IAAI,CAAC6U,WAAW,GAAG,IAAI;IACvB;IACA;IACA;IACA,IAAI,CAACsC,kBAAkB,GAAG1I,MAAM,CAAC2I,gBAAgB,IAAI3I,MAAM,CAAC4I,cAAc,IAAI,EAAE;IAChF5I,MAAM,CAAC4I,cAAc,GAAG5I,MAAM,CAAC2I,gBAAgB,GAAG,MAAM;IACxD,IAAI,CAACxB,aAAa,CAAC7N,KAAK,CAAC,IAAI,CAAC+M,WAAW,CAAC;IAC1C,IAAI,CAACkB,qBAAqB,EAAE;IAC5B,IAAI,CAACf,2BAA2B,CAACxQ,WAAW,EAAE;IAC9C,IAAI,CAAC6S,qBAAqB,EAAE;EAChC;EACA;EACAtB,qBAAqB,GAAG;IACpB,MAAMxe,OAAO,GAAG5B,oEAAa,CAAC,IAAI,CAAC4B,OAAO,CAAC;IAC3C,IAAI,CAACwL,gBAAgB,CAAClI,KAAK,CAAC,IAAI,CAAC0b,mBAAmB,CAAC;IACrD;IACA;IACA,IAAI,CAACE,WAAW,GAAG,IAAI,CAAC1T,gBAAgB,CAACrI,SAAS,CAAC1H,GAAG,CAACuE,OAAO,CAAC,CAACgC,UAAU;EAC9E;EACA;EACAyc,MAAM,GAAG;IACL,IAAI,CAACpB,WAAW,GAAG,KAAK;IACxB,MAAMpG,MAAM,GAAG7Y,oEAAa,CAAC,IAAI,CAAC4B,OAAO,CAAC,CAACG,KAAK;IAChD8W,MAAM,CAAC4I,cAAc,GAAG5I,MAAM,CAAC2I,gBAAgB,GAAG,IAAI,CAACD,kBAAkB;IACzE,IAAI,CAACpC,SAAS,CAAC5Z,OAAO,CAACsX,OAAO,IAAIA,OAAO,CAAC8E,cAAc,CAAC,IAAI,CAAC,CAAC;IAC/D,IAAI,CAAC3B,aAAa,CAACrQ,KAAK,EAAE;IAC1B,IAAI,CAACmB,cAAc,EAAE;IACrB,IAAI,CAACuO,2BAA2B,CAACxQ,WAAW,EAAE;IAC9C,IAAI,CAACzB,gBAAgB,CAACnI,KAAK,EAAE;EACjC;EACA;AACJ;AACA;AACA;AACA;EACI8O,gBAAgB,CAAC7P,CAAC,EAAEC,CAAC,EAAE;IACnB,OAAO,IAAI,CAAC2c,WAAW,IAAI,IAAI,IAAI1c,kBAAkB,CAAC,IAAI,CAAC0c,WAAW,EAAE5c,CAAC,EAAEC,CAAC,CAAC;EACjF;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIkQ,gCAAgC,CAACL,IAAI,EAAE9P,CAAC,EAAEC,CAAC,EAAE;IACzC,OAAO,IAAI,CAACgb,SAAS,CAACjc,IAAI,CAAC2Z,OAAO,IAAIA,OAAO,CAAC+E,WAAW,CAAC5N,IAAI,EAAE9P,CAAC,EAAEC,CAAC,CAAC,CAAC;EAC1E;EACA;AACJ;AACA;AACA;AACA;AACA;EACIyd,WAAW,CAAC5N,IAAI,EAAE9P,CAAC,EAAEC,CAAC,EAAE;IACpB,IAAI,CAAC,IAAI,CAAC2c,WAAW,IACjB,CAAC1c,kBAAkB,CAAC,IAAI,CAAC0c,WAAW,EAAE5c,CAAC,EAAEC,CAAC,CAAC,IAC3C,CAAC,IAAI,CAACya,cAAc,CAAC5K,IAAI,EAAE,IAAI,CAAC,EAAE;MAClC,OAAO,KAAK;IAChB;IACA,MAAM6N,gBAAgB,GAAG,IAAI,CAAC/hB,cAAc,EAAE,CAAC+hB,gBAAgB,CAAC3d,CAAC,EAAEC,CAAC,CAAC;IACrE;IACA;IACA,IAAI,CAAC0d,gBAAgB,EAAE;MACnB,OAAO,KAAK;IAChB;IACA,MAAMC,aAAa,GAAG9hB,oEAAa,CAAC,IAAI,CAAC4B,OAAO,CAAC;IACjD;IACA;IACA;IACA;IACA;IACA;IACA,OAAOigB,gBAAgB,KAAKC,aAAa,IAAIA,aAAa,CAAC3b,QAAQ,CAAC0b,gBAAgB,CAAC;EACzF;EACA;AACJ;AACA;AACA;EACIE,eAAe,CAAClF,OAAO,EAAElB,KAAK,EAAE;IAC5B,MAAMqG,cAAc,GAAG,IAAI,CAAC5C,eAAe;IAC3C,IAAI,CAAC4C,cAAc,CAACvgB,GAAG,CAACob,OAAO,CAAC,IAC5BlB,KAAK,CAAC8E,KAAK,CAACzM,IAAI,IAAI;MAChB;MACA;MACA;MACA;MACA,OAAO,IAAI,CAAC4K,cAAc,CAAC5K,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,CAACkL,WAAW,CAACxc,OAAO,CAACsR,IAAI,CAAC,GAAG,CAAC,CAAC;IACjF,CAAC,CAAC,EAAE;MACJgO,cAAc,CAACnU,GAAG,CAACgP,OAAO,CAAC;MAC3B,IAAI,CAACuD,qBAAqB,EAAE;MAC5B,IAAI,CAACsB,qBAAqB,EAAE;MAC5B,IAAI,CAAC3C,gBAAgB,CAAC3U,IAAI,CAAC;QACvB6X,SAAS,EAAEpF,OAAO;QAClBqF,QAAQ,EAAE,IAAI;QACdvG;MACJ,CAAC,CAAC;IACN;EACJ;EACA;AACJ;AACA;AACA;EACIgG,cAAc,CAAC9E,OAAO,EAAE;IACpB,IAAI,CAACuC,eAAe,CAACtP,MAAM,CAAC+M,OAAO,CAAC;IACpC,IAAI,CAACwC,2BAA2B,CAACxQ,WAAW,EAAE;IAC9C,IAAI,CAACmQ,gBAAgB,CAAC5U,IAAI,CAAC;MAAE6X,SAAS,EAAEpF,OAAO;MAAEqF,QAAQ,EAAE;IAAK,CAAC,CAAC;EACtE;EACA;AACJ;AACA;AACA;EACIR,qBAAqB,GAAG;IACpB,IAAI,CAACrC,2BAA2B,GAAG,IAAI,CAACzW,iBAAiB,CACpDuK,QAAQ,CAAC,IAAI,CAACrT,cAAc,EAAE,CAAC,CAC/BiP,SAAS,CAACrS,KAAK,IAAI;MACpB,IAAI,IAAI,CAACgP,UAAU,EAAE,EAAE;QACnB,MAAM4N,gBAAgB,GAAG,IAAI,CAAClM,gBAAgB,CAAC1H,YAAY,CAAChJ,KAAK,CAAC;QAClE,IAAI4c,gBAAgB,EAAE;UAClB,IAAI,CAAC0G,aAAa,CAACpC,cAAc,CAACtE,gBAAgB,CAACrX,GAAG,EAAEqX,gBAAgB,CAACnX,IAAI,CAAC;QAClF;MACJ,CAAC,MACI,IAAI,IAAI,CAACwJ,WAAW,EAAE,EAAE;QACzB,IAAI,CAACyU,qBAAqB,EAAE;MAChC;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;EACItgB,cAAc,GAAG;IACb,IAAI,CAAC,IAAI,CAACyZ,iBAAiB,EAAE;MACzB,MAAM3H,UAAU,GAAG9R,qEAAc,CAACE,oEAAa,CAAC,IAAI,CAAC4B,OAAO,CAAC,CAAC;MAC9D,IAAI,CAAC2X,iBAAiB,GAAI3H,UAAU,IAAI,IAAI,CAAC9M,SAAU;IAC3D;IACA,OAAO,IAAI,CAACyU,iBAAiB;EACjC;EACA;EACA4G,wBAAwB,GAAG;IACvB,MAAMI,YAAY,GAAG,IAAI,CAACP,aAAa,CAClCtC,sBAAsB,EAAE,CACxB8C,MAAM,CAACxM,IAAI,IAAIA,IAAI,CAACtI,UAAU,EAAE,CAAC;IACtC,IAAI,CAACyT,SAAS,CAAC5Z,OAAO,CAACsX,OAAO,IAAIA,OAAO,CAACkF,eAAe,CAAC,IAAI,EAAExB,YAAY,CAAC,CAAC;EAClF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,SAASc,0BAA0B,CAACzd,UAAU,EAAEc,QAAQ,EAAE;EACtD,MAAM;IAAEzC,GAAG;IAAE8B,MAAM;IAAEE;EAAO,CAAC,GAAGL,UAAU;EAC1C,MAAMgB,UAAU,GAAGX,MAAM,GAAGua,0BAA0B;EACtD,IAAI9Z,QAAQ,IAAIzC,GAAG,GAAG2C,UAAU,IAAIF,QAAQ,IAAIzC,GAAG,GAAG2C,UAAU,EAAE;IAC9D,OAAO,CAAC,CAAC;EACb,CAAC,MACI,IAAIF,QAAQ,IAAIX,MAAM,GAAGa,UAAU,IAAIF,QAAQ,IAAIX,MAAM,GAAGa,UAAU,EAAE;IACzE,OAAO,CAAC,CAAC;EACb;;EACA,OAAO,CAAC,CAAC;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS0c,4BAA4B,CAAC1d,UAAU,EAAEa,QAAQ,EAAE;EACxD,MAAM;IAAEtC,IAAI;IAAE2B,KAAK;IAAEE;EAAM,CAAC,GAAGJ,UAAU;EACzC,MAAMe,UAAU,GAAGX,KAAK,GAAGwa,0BAA0B;EACrD,IAAI/Z,QAAQ,IAAItC,IAAI,GAAGwC,UAAU,IAAIF,QAAQ,IAAItC,IAAI,GAAGwC,UAAU,EAAE;IAChE,OAAO,CAAC,CAAC;EACb,CAAC,MACI,IAAIF,QAAQ,IAAIX,KAAK,GAAGa,UAAU,IAAIF,QAAQ,IAAIX,KAAK,GAAGa,UAAU,EAAE;IACvE,OAAO,CAAC,CAAC;EACb;;EACA,OAAO,CAAC,CAAC;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASwc,0BAA0B,CAACvf,OAAO,EAAEgC,UAAU,EAAEa,QAAQ,EAAEC,QAAQ,EAAE;EACzE,MAAMyd,gBAAgB,GAAGd,0BAA0B,CAACzd,UAAU,EAAEc,QAAQ,CAAC;EACzE,MAAM0d,kBAAkB,GAAGd,4BAA4B,CAAC1d,UAAU,EAAEa,QAAQ,CAAC;EAC7E,IAAIwc,uBAAuB,GAAG,CAAC,CAAC;EAChC,IAAIC,yBAAyB,GAAG,CAAC,CAAC;EAClC;EACA;EACA;EACA;EACA,IAAIiB,gBAAgB,EAAE;IAClB,MAAM3c,SAAS,GAAG5D,OAAO,CAAC4D,SAAS;IACnC,IAAI2c,gBAAgB,KAAK,CAAC,CAAC,sCAAsC;MAC7D,IAAI3c,SAAS,GAAG,CAAC,EAAE;QACfyb,uBAAuB,GAAG,CAAC,CAAC;MAChC;IACJ,CAAC,MACI,IAAIrf,OAAO,CAACygB,YAAY,GAAG7c,SAAS,GAAG5D,OAAO,CAAC0gB,YAAY,EAAE;MAC9DrB,uBAAuB,GAAG,CAAC,CAAC;IAChC;EACJ;;EACA,IAAImB,kBAAkB,EAAE;IACpB,MAAM3c,UAAU,GAAG7D,OAAO,CAAC6D,UAAU;IACrC,IAAI2c,kBAAkB,KAAK,CAAC,CAAC,0CAA0C;MACnE,IAAI3c,UAAU,GAAG,CAAC,EAAE;QAChByb,yBAAyB,GAAG,CAAC,CAAC;MAClC;IACJ,CAAC,MACI,IAAItf,OAAO,CAAC2gB,WAAW,GAAG9c,UAAU,GAAG7D,OAAO,CAAC4gB,WAAW,EAAE;MAC7DtB,yBAAyB,GAAG,CAAC,CAAC;IAClC;EACJ;;EACA,OAAO,CAACD,uBAAuB,EAAEC,yBAAyB,CAAC;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMuB,2BAA2B,GAAG5iB,sFAA+B,CAAC;EAChE+H,OAAO,EAAE,KAAK;EACd8a,OAAO,EAAE;AACb,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,CAAC;EACnB9mB,WAAW,CAAC6M,OAAO,EAAE5D,SAAS,EAAE;IAC5B,IAAI,CAAC4D,OAAO,GAAGA,OAAO;IACtB;IACA,IAAI,CAACka,cAAc,GAAG,IAAI5a,GAAG,EAAE;IAC/B;IACA,IAAI,CAAC6a,cAAc,GAAG,IAAI7a,GAAG,EAAE;IAC/B;IACA,IAAI,CAAC8a,oBAAoB,GAAG,EAAE;IAC9B;IACA,IAAI,CAACC,gBAAgB,GAAG,IAAI/d,GAAG,EAAE;IACjC;AACR;AACA;AACA;IACQ,IAAI,CAACge,kBAAkB,GAAIhP,IAAI,IAAKA,IAAI,CAACtI,UAAU,EAAE;IACrD;AACR;AACA;AACA;IACQ,IAAI,CAACuH,WAAW,GAAG,IAAI5S,yCAAO,EAAE;IAChC;AACR;AACA;AACA;IACQ,IAAI,CAAC6S,SAAS,GAAG,IAAI7S,yCAAO,EAAE;IAC9B;AACR;AACA;AACA;AACA;IACQ,IAAI,CAAC4iB,MAAM,GAAG,IAAI5iB,yCAAO,EAAE;IAC3B;AACR;AACA;AACA;IACQ,IAAI,CAAC6iB,4BAA4B,GAAIxmB,KAAK,IAAK;MAC3C,IAAI,IAAI,CAAComB,oBAAoB,CAACxlB,MAAM,GAAG,CAAC,EAAE;QACtCZ,KAAK,CAACkP,cAAc,EAAE;MAC1B;IACJ,CAAC;IACD;IACA,IAAI,CAACuX,4BAA4B,GAAIzmB,KAAK,IAAK;MAC3C,IAAI,IAAI,CAAComB,oBAAoB,CAACxlB,MAAM,GAAG,CAAC,EAAE;QACtC;QACA;QACA;QACA,IAAI,IAAI,CAACwlB,oBAAoB,CAACM,IAAI,CAAC,IAAI,CAACJ,kBAAkB,CAAC,EAAE;UACzDtmB,KAAK,CAACkP,cAAc,EAAE;QAC1B;QACA,IAAI,CAACqH,WAAW,CAAC7I,IAAI,CAAC1N,KAAK,CAAC;MAChC;IACJ,CAAC;IACD,IAAI,CAACoI,SAAS,GAAGA,SAAS;EAC9B;EACA;EACAib,qBAAqB,CAACtjB,IAAI,EAAE;IACxB,IAAI,CAAC,IAAI,CAACmmB,cAAc,CAACnhB,GAAG,CAAChF,IAAI,CAAC,EAAE;MAChC,IAAI,CAACmmB,cAAc,CAAC/U,GAAG,CAACpR,IAAI,CAAC;IACjC;EACJ;EACA;EACA4Q,gBAAgB,CAACoO,IAAI,EAAE;IACnB,IAAI,CAACoH,cAAc,CAAChV,GAAG,CAAC4N,IAAI,CAAC;IAC7B;IACA;IACA;IACA,IAAI,IAAI,CAACoH,cAAc,CAAChC,IAAI,KAAK,CAAC,EAAE;MAChC,IAAI,CAACnY,OAAO,CAAC0F,iBAAiB,CAAC,MAAM;QACjC;QACA;QACA,IAAI,CAACtJ,SAAS,CAACuJ,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC8U,4BAA4B,EAAEV,2BAA2B,CAAC;MAChH,CAAC,CAAC;IACN;EACJ;EACA;EACAxC,mBAAmB,CAACxjB,IAAI,EAAE;IACtB,IAAI,CAACmmB,cAAc,CAAC9S,MAAM,CAACrT,IAAI,CAAC;EACpC;EACA;EACA+S,cAAc,CAACiM,IAAI,EAAE;IACjB,IAAI,CAACoH,cAAc,CAAC/S,MAAM,CAAC2L,IAAI,CAAC;IAChC,IAAI,CAAC9K,YAAY,CAAC8K,IAAI,CAAC;IACvB,IAAI,IAAI,CAACoH,cAAc,CAAChC,IAAI,KAAK,CAAC,EAAE;MAChC,IAAI,CAAC/b,SAAS,CAACqR,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACgN,4BAA4B,EAAEV,2BAA2B,CAAC;IACnH;EACJ;EACA;AACJ;AACA;AACA;AACA;EACI7O,aAAa,CAAC6H,IAAI,EAAE/e,KAAK,EAAE;IACvB;IACA,IAAI,IAAI,CAAComB,oBAAoB,CAACpgB,OAAO,CAAC+Y,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;MAC9C;IACJ;IACA,IAAI,CAACqH,oBAAoB,CAAC7lB,IAAI,CAACwe,IAAI,CAAC;IACpC,IAAI,IAAI,CAACqH,oBAAoB,CAACxlB,MAAM,KAAK,CAAC,EAAE;MACxC,MAAM8T,YAAY,GAAG1U,KAAK,CAAC6K,IAAI,CAAC8b,UAAU,CAAC,OAAO,CAAC;MACnD;MACA;MACA;MACA,IAAI,CAACN,gBAAgB,CAChB3d,GAAG,CAACgM,YAAY,GAAG,UAAU,GAAG,SAAS,EAAE;QAC5C6E,OAAO,EAAGqN,CAAC,IAAK,IAAI,CAACpQ,SAAS,CAAC9I,IAAI,CAACkZ,CAAC,CAAC;QACtCC,OAAO,EAAE;MACb,CAAC,CAAC,CACGne,GAAG,CAAC,QAAQ,EAAE;QACf6Q,OAAO,EAAGqN,CAAC,IAAK,IAAI,CAACL,MAAM,CAAC7Y,IAAI,CAACkZ,CAAC,CAAC;QACnC;QACA;QACAC,OAAO,EAAE;MACb,CAAC;MACG;MACA;MACA;MACA;MAAA,CACCne,GAAG,CAAC,aAAa,EAAE;QACpB6Q,OAAO,EAAE,IAAI,CAACiN,4BAA4B;QAC1CK,OAAO,EAAEd;MACb,CAAC,CAAC;MACF;MACA;MACA,IAAI,CAACrR,YAAY,EAAE;QACf,IAAI,CAAC2R,gBAAgB,CAAC3d,GAAG,CAAC,WAAW,EAAE;UACnC6Q,OAAO,EAAGqN,CAAC,IAAK,IAAI,CAACrQ,WAAW,CAAC7I,IAAI,CAACkZ,CAAC,CAAC;UACxCC,OAAO,EAAEd;QACb,CAAC,CAAC;MACN;MACA,IAAI,CAAC/Z,OAAO,CAAC0F,iBAAiB,CAAC,MAAM;QACjC,IAAI,CAAC2U,gBAAgB,CAACxd,OAAO,CAAC,CAACie,MAAM,EAAEplB,IAAI,KAAK;UAC5C,IAAI,CAAC0G,SAAS,CAACuJ,gBAAgB,CAACjQ,IAAI,EAAEolB,MAAM,CAACvN,OAAO,EAAEuN,MAAM,CAACD,OAAO,CAAC;QACzE,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EACJ;EACA;EACA5S,YAAY,CAAC8K,IAAI,EAAE;IACf,MAAMje,KAAK,GAAG,IAAI,CAACslB,oBAAoB,CAACpgB,OAAO,CAAC+Y,IAAI,CAAC;IACrD,IAAIje,KAAK,GAAG,CAAC,CAAC,EAAE;MACZ,IAAI,CAACslB,oBAAoB,CAAC5H,MAAM,CAAC1d,KAAK,EAAE,CAAC,CAAC;MAC1C,IAAI,IAAI,CAACslB,oBAAoB,CAACxlB,MAAM,KAAK,CAAC,EAAE;QACxC,IAAI,CAACmmB,qBAAqB,EAAE;MAChC;IACJ;EACJ;EACA;EACA/X,UAAU,CAAC+P,IAAI,EAAE;IACb,OAAO,IAAI,CAACqH,oBAAoB,CAACpgB,OAAO,CAAC+Y,IAAI,CAAC,GAAG,CAAC,CAAC;EACvD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACItI,QAAQ,CAACvB,UAAU,EAAE;IACjB,MAAM8R,OAAO,GAAG,CAAC,IAAI,CAACT,MAAM,CAAC;IAC7B,IAAIrR,UAAU,IAAIA,UAAU,KAAK,IAAI,CAAC9M,SAAS,EAAE;MAC7C;MACA;MACA;MACA4e,OAAO,CAACzmB,IAAI,CAAC,IAAIuD,4CAAU,CAAEmjB,QAAQ,IAAK;QACtC,OAAO,IAAI,CAACjb,OAAO,CAAC0F,iBAAiB,CAAC,MAAM;UACxC,MAAMwV,YAAY,GAAG,IAAI;UACzB,MAAMzc,QAAQ,GAAIzK,KAAK,IAAK;YACxB,IAAI,IAAI,CAAComB,oBAAoB,CAACxlB,MAAM,EAAE;cAClCqmB,QAAQ,CAACvZ,IAAI,CAAC1N,KAAK,CAAC;YACxB;UACJ,CAAC;UACDkV,UAAU,CAACvD,gBAAgB,CAAC,QAAQ,EAAElH,QAAQ,EAAEyc,YAAY,CAAC;UAC7D,OAAO,MAAM;YACThS,UAAU,CAACuE,mBAAmB,CAAC,QAAQ,EAAEhP,QAAQ,EAAEyc,YAAY,CAAC;UACpE,CAAC;QACL,CAAC,CAAC;MACN,CAAC,CAAC,CAAC;IACP;IACA,OAAOnjB,2CAAK,CAAC,GAAGijB,OAAO,CAAC;EAC5B;EACAG,WAAW,GAAG;IACV,IAAI,CAAChB,cAAc,CAACtd,OAAO,CAACue,QAAQ,IAAI,IAAI,CAACtU,cAAc,CAACsU,QAAQ,CAAC,CAAC;IACtE,IAAI,CAAClB,cAAc,CAACrd,OAAO,CAACue,QAAQ,IAAI,IAAI,CAAC7D,mBAAmB,CAAC6D,QAAQ,CAAC,CAAC;IAC3E,IAAI,CAACL,qBAAqB,EAAE;IAC5B,IAAI,CAACxQ,WAAW,CAACvD,QAAQ,EAAE;IAC3B,IAAI,CAACwD,SAAS,CAACxD,QAAQ,EAAE;EAC7B;EACA;EACA+T,qBAAqB,GAAG;IACpB,IAAI,CAACV,gBAAgB,CAACxd,OAAO,CAAC,CAACie,MAAM,EAAEplB,IAAI,KAAK;MAC5C,IAAI,CAAC0G,SAAS,CAACqR,mBAAmB,CAAC/X,IAAI,EAAEolB,MAAM,CAACvN,OAAO,EAAEuN,MAAM,CAACD,OAAO,CAAC;IAC5E,CAAC,CAAC;IACF,IAAI,CAACR,gBAAgB,CAAC9d,KAAK,EAAE;EACjC;AACJ;AACA0d,gBAAgB,CAACoB,IAAI;EAAA,iBAA6FpB,gBAAgB,EAA1B3nB,uDAAE,CAA0CA,kDAAS,GAArDA,uDAAE,CAAgEyE,sDAAQ;AAAA,CAA6C;AAC/NkjB,gBAAgB,CAACsB,KAAK,kBADkFjpB,iEAAE;EAAA,OACY2nB,gBAAgB;EAAA,SAAhBA,gBAAgB;EAAA,YAAc;AAAM,EAAG;AAC7J;EAAA,mDAFwG3nB,gEAAE,CAEV2nB,gBAAgB,EAAc,CAAC;IACnHpb,IAAI,EAAE3I,sDAAU;IAChBslB,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE5c,IAAI,EAAEvM,kDAASgpB;IAAC,CAAC,EAAE;MAAEzc,IAAI,EAAEgH,SAAS;MAAE6V,UAAU,EAAE,CAAC;QACnF7c,IAAI,EAAE1I,kDAAM;QACZqlB,IAAI,EAAE,CAACzkB,sDAAQ;MACnB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM4kB,cAAc,GAAG;EACnBnZ,kBAAkB,EAAE,CAAC;EACrByN,+BAA+B,EAAE;AACrC,CAAC;AACD;AACA;AACA;AACA,MAAM2L,QAAQ,CAAC;EACXzoB,WAAW,CAACiJ,SAAS,EAAE4D,OAAO,EAAEC,cAAc,EAAEC,iBAAiB,EAAE;IAC/D,IAAI,CAAC9D,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAAC4D,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;EAC9C;EACA;AACJ;AACA;AACA;AACA;EACI2b,UAAU,CAAC3iB,OAAO,EAAE4hB,MAAM,GAAGa,cAAc,EAAE;IACzC,OAAO,IAAIpc,OAAO,CAACrG,OAAO,EAAE4hB,MAAM,EAAE,IAAI,CAAC1e,SAAS,EAAE,IAAI,CAAC4D,OAAO,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAACC,iBAAiB,CAAC;EAClH;EACA;AACJ;AACA;AACA;EACI4b,cAAc,CAAC5iB,OAAO,EAAE;IACpB,OAAO,IAAI6c,WAAW,CAAC7c,OAAO,EAAE,IAAI,CAACgH,iBAAiB,EAAE,IAAI,CAAC9D,SAAS,EAAE,IAAI,CAAC4D,OAAO,EAAE,IAAI,CAACC,cAAc,CAAC;EAC9G;AACJ;AACA2b,QAAQ,CAACP,IAAI;EAAA,iBAA6FO,QAAQ,EAhDVtpB,uDAAE,CAgD0ByE,sDAAQ,GAhDpCzE,uDAAE,CAgD+CA,kDAAS,GAhD1DA,uDAAE,CAgDqE0E,kEAAgB,GAhDvF1E,uDAAE,CAgDkG2nB,gBAAgB;AAAA,CAA6C;AACzQ2B,QAAQ,CAACL,KAAK,kBAjD0FjpB,iEAAE;EAAA,OAiDIspB,QAAQ;EAAA,SAARA,QAAQ;EAAA,YAAc;AAAM,EAAG;AAC7I;EAAA,mDAlDwGtpB,gEAAE,CAkDVspB,QAAQ,EAAc,CAAC;IAC3G/c,IAAI,EAAE3I,sDAAU;IAChBslB,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE5c,IAAI,EAAEgH,SAAS;MAAE6V,UAAU,EAAE,CAAC;QAC9D7c,IAAI,EAAE1I,kDAAM;QACZqlB,IAAI,EAAE,CAACzkB,sDAAQ;MACnB,CAAC;IAAE,CAAC,EAAE;MAAE8H,IAAI,EAAEvM,kDAASgpB;IAAC,CAAC,EAAE;MAAEzc,IAAI,EAAE7H,kEAAgB+kB;IAAC,CAAC,EAAE;MAAEld,IAAI,EAAEob;IAAiB,CAAC,CAAC;EAAE,CAAC;AAAA;;AAErG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM+B,eAAe,GAAG,IAAI5lB,0DAAc,CAAC,iBAAiB,CAAC;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM6lB,mBAAmB,GAAG,IAAI7lB,0DAAc,CAAC,kBAAkB,CAAC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,MAAM8lB,gBAAgB,CAAC;EACnB/oB,WAAW,GAAG;IACV;IACA,IAAI,CAACgpB,MAAM,GAAG,IAAI7c,GAAG,EAAE;IACvB,IAAI,CAACG,SAAS,GAAG,KAAK;EAC1B;EACA;EACA,IAAID,QAAQ,GAAG;IACX,OAAO,IAAI,CAACC,SAAS;EACzB;EACA,IAAID,QAAQ,CAAC3G,KAAK,EAAE;IAChB,IAAI,CAAC4G,SAAS,GAAGpI,4EAAqB,CAACwB,KAAK,CAAC;EACjD;EACAsiB,WAAW,GAAG;IACV,IAAI,CAACgB,MAAM,CAAC5f,KAAK,EAAE;EACvB;AACJ;AACA2f,gBAAgB,CAACb,IAAI;EAAA,iBAA6Fa,gBAAgB;AAAA,CAAmD;AACrLA,gBAAgB,CAACE,IAAI,kBAtHmF9pB,gEAAE;EAAA,MAsHJ4pB,gBAAgB;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA,WAtHd5pB,iEAAE,CAsH6I,CAAC;IAAE+pB,OAAO,EAAEJ,mBAAmB;IAAEK,WAAW,EAAEJ;EAAiB,CAAC,CAAC;AAAA,EAAiD;AACzW;EAAA,mDAvHwG5pB,gEAAE,CAuHV4pB,gBAAgB,EAAc,CAAC;IACnHrd,IAAI,EAAExI,qDAAS;IACfmlB,IAAI,EAAE,CAAC;MACChd,QAAQ,EAAE,oBAAoB;MAC9B+d,QAAQ,EAAE,kBAAkB;MAC5BC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,CAAC;QAAEJ,OAAO,EAAEJ,mBAAmB;QAAEK,WAAW,EAAEJ;MAAiB,CAAC;IAC/E,CAAC;EACT,CAAC,CAAC,QAAkB;IAAE1c,QAAQ,EAAE,CAAC;MACzBX,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,0BAA0B;IACrC,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMkB,eAAe,GAAG,IAAItmB,0DAAc,CAAC,iBAAiB,CAAC;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASumB,iBAAiB,CAACnf,IAAI,EAAE9H,IAAI,EAAE;EACnC,IAAI8H,IAAI,CAACiU,QAAQ,KAAK,CAAC,EAAE;IACrB,MAAMmL,KAAK,CAAE,GAAElnB,IAAK,wCAAuC,GAAI,0BAAyB8H,IAAI,CAACU,QAAS,IAAG,CAAC;EAC9G;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI2e,gBAAgB,GAAG,CAAC;AACxB;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG,IAAI1mB,0DAAc,CAAC,aAAa,CAAC;AACvD;AACA,MAAM2mB,WAAW,CAAC;EACd;EACA,IAAIvd,QAAQ,GAAG;IACX,OAAO,IAAI,CAACC,SAAS,IAAK,CAAC,CAAC,IAAI,CAACud,MAAM,IAAI,IAAI,CAACA,MAAM,CAACxd,QAAS;EACpE;EACA,IAAIA,QAAQ,CAAC3G,KAAK,EAAE;IAChB;IACA;IACA;IACA;IACA,IAAI,CAACokB,YAAY,CAACzd,QAAQ,GAAG,IAAI,CAACC,SAAS,GAAGpI,4EAAqB,CAACwB,KAAK,CAAC;EAC9E;EACA1F,WAAW,EACX;EACA+F,OAAO,EAAEgkB,QAAQ,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,IAAI,EAAEL,MAAM,EAAElC,MAAM,EAAE;IAC5E,IAAI,CAAC5hB,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACikB,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACL,MAAM,GAAGA,MAAM;IACpB;IACA,IAAI,CAACM,UAAU,GAAG,IAAI3lB,yCAAO,EAAE;IAC/B;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACqgB,WAAW,GAAG,EAAE;IACrB;AACR;AACA;AACA;IACQ,IAAI,CAACvjB,EAAE,GAAI,iBAAgBooB,gBAAgB,EAAG,EAAC;IAC/C;AACR;AACA;AACA;IACQ,IAAI,CAAC3G,cAAc,GAAG,MAAM,IAAI;IAChC;IACA,IAAI,CAACC,aAAa,GAAG,MAAM,IAAI;IAC/B;IACA,IAAI,CAAC5U,OAAO,GAAG,IAAIhL,wDAAY,EAAE;IACjC;AACR;AACA;IACQ,IAAI,CAAC8K,OAAO,GAAG,IAAI9K,wDAAY,EAAE;IACjC;AACR;AACA;AACA;IACQ,IAAI,CAAC+K,MAAM,GAAG,IAAI/K,wDAAY,EAAE;IAChC;IACA,IAAI,CAAC6f,MAAM,GAAG,IAAI7f,wDAAY,EAAE;IAChC;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACgnB,cAAc,GAAG,IAAIje,GAAG,EAAE;IAC/B,IAAI,OAAOke,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MAC/Cb,iBAAiB,CAACzjB,OAAO,CAACkgB,aAAa,EAAE,aAAa,CAAC;IAC3D;IACA,IAAI,CAAC6D,YAAY,GAAGC,QAAQ,CAACpB,cAAc,CAAC5iB,OAAO,CAAC;IACpD,IAAI,CAAC+jB,YAAY,CAACQ,IAAI,GAAG,IAAI;IAC7B,IAAI3C,MAAM,EAAE;MACR,IAAI,CAAC4C,eAAe,CAAC5C,MAAM,CAAC;IAChC;IACA,IAAI,CAACmC,YAAY,CAAC/G,cAAc,GAAG,CAACnD,IAAI,EAAEhf,IAAI,KAAK;MAC/C,OAAO,IAAI,CAACmiB,cAAc,CAACnD,IAAI,CAAC0K,IAAI,EAAE1pB,IAAI,CAAC0pB,IAAI,CAAC;IACpD,CAAC;IACD,IAAI,CAACR,YAAY,CAAC9G,aAAa,GAAG,CAACrhB,KAAK,EAAEie,IAAI,EAAEhf,IAAI,KAAK;MACrD,OAAO,IAAI,CAACoiB,aAAa,CAACrhB,KAAK,EAAEie,IAAI,CAAC0K,IAAI,EAAE1pB,IAAI,CAAC0pB,IAAI,CAAC;IAC1D,CAAC;IACD,IAAI,CAACE,2BAA2B,CAAC,IAAI,CAACV,YAAY,CAAC;IACnD,IAAI,CAACW,aAAa,CAAC,IAAI,CAACX,YAAY,CAAC;IACrCF,WAAW,CAACc,UAAU,CAACtpB,IAAI,CAAC,IAAI,CAAC;IACjC,IAAIyoB,MAAM,EAAE;MACRA,MAAM,CAACb,MAAM,CAAChX,GAAG,CAAC,IAAI,CAAC;IAC3B;EACJ;EACA;EACA2Y,OAAO,CAACxS,IAAI,EAAE;IACV,IAAI,CAACiS,cAAc,CAACpY,GAAG,CAACmG,IAAI,CAAC;IAC7B,IAAI,IAAI,CAAC2R,YAAY,CAACja,UAAU,EAAE,EAAE;MAChC,IAAI,CAAC+a,iBAAiB,EAAE;IAC5B;EACJ;EACA;EACAC,UAAU,CAAC1S,IAAI,EAAE;IACb,IAAI,CAACiS,cAAc,CAACnW,MAAM,CAACkE,IAAI,CAAC;IAChC,IAAI,IAAI,CAAC2R,YAAY,CAACja,UAAU,EAAE,EAAE;MAChC,IAAI,CAAC+a,iBAAiB,EAAE;IAC5B;EACJ;EACA;EACAE,cAAc,GAAG;IACb,OAAOjR,KAAK,CAACiF,IAAI,CAAC,IAAI,CAACsL,cAAc,CAAC,CAACpK,IAAI,CAAC,CAACiC,CAAC,EAAEC,CAAC,KAAK;MAClD,MAAM6I,gBAAgB,GAAG9I,CAAC,CAAC+I,QAAQ,CAC9BpZ,iBAAiB,EAAE,CACnBqZ,uBAAuB,CAAC/I,CAAC,CAAC8I,QAAQ,CAACpZ,iBAAiB,EAAE,CAAC;MAC5D;MACA;MACA;MACA,OAAOmZ,gBAAgB,GAAGG,IAAI,CAACC,2BAA2B,GAAG,CAAC,CAAC,GAAG,CAAC;IACvE,CAAC,CAAC;EACN;EACAnD,WAAW,GAAG;IACV,MAAMrmB,KAAK,GAAGioB,WAAW,CAACc,UAAU,CAAC7jB,OAAO,CAAC,IAAI,CAAC;IAClD,IAAIlF,KAAK,GAAG,CAAC,CAAC,EAAE;MACZioB,WAAW,CAACc,UAAU,CAACrL,MAAM,CAAC1d,KAAK,EAAE,CAAC,CAAC;IAC3C;IACA,IAAI,IAAI,CAACkoB,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,CAACb,MAAM,CAAC/U,MAAM,CAAC,IAAI,CAAC;IACnC;IACA,IAAI,CAACmW,cAAc,CAAChhB,KAAK,EAAE;IAC3B,IAAI,CAAC0gB,YAAY,CAACxW,OAAO,EAAE;IAC3B,IAAI,CAAC6W,UAAU,CAAC5b,IAAI,EAAE;IACtB,IAAI,CAAC4b,UAAU,CAACtW,QAAQ,EAAE;EAC9B;EACA;EACA2W,2BAA2B,CAACY,GAAG,EAAE;IAC7B,IAAI,IAAI,CAAClB,IAAI,EAAE;MACX,IAAI,CAACA,IAAI,CAACjX,MAAM,CACX4Q,IAAI,CAAC/e,0DAAS,CAAC,IAAI,CAAColB,IAAI,CAACxkB,KAAK,CAAC,EAAEb,yDAAS,CAAC,IAAI,CAACslB,UAAU,CAAC,CAAC,CAC5DjX,SAAS,CAACxN,KAAK,IAAI0lB,GAAG,CAAClX,aAAa,CAACxO,KAAK,CAAC,CAAC;IACrD;IACA0lB,GAAG,CAACtd,aAAa,CAACoF,SAAS,CAAC,MAAM;MAC9B,MAAMgN,QAAQ,GAAG9b,kEAAW,CAAC,IAAI,CAACygB,WAAW,CAAC,CAAC9f,GAAG,CAACnE,IAAI,IAAI;QACvD,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;UAC1B,MAAMyqB,qBAAqB,GAAGzB,WAAW,CAACc,UAAU,CAACrjB,IAAI,CAACikB,IAAI,IAAIA,IAAI,CAAChqB,EAAE,KAAKV,IAAI,CAAC;UACnF,IAAI,CAACyqB,qBAAqB,KAAK,OAAOhB,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;YAC3EkB,OAAO,CAACC,IAAI,CAAE,2DAA0D5qB,IAAK,GAAE,CAAC;UACpF;UACA,OAAOyqB,qBAAqB;QAChC;QACA,OAAOzqB,IAAI;MACf,CAAC,CAAC;MACF,IAAI,IAAI,CAACipB,MAAM,EAAE;QACb,IAAI,CAACA,MAAM,CAACb,MAAM,CAACtf,OAAO,CAAC9I,IAAI,IAAI;UAC/B,IAAIsf,QAAQ,CAACrZ,OAAO,CAACjG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;YAC/Bsf,QAAQ,CAAC9e,IAAI,CAACR,IAAI,CAAC;UACvB;QACJ,CAAC,CAAC;MACN;MACA;MACA;MACA,IAAI,CAAC,IAAI,CAAC6qB,0BAA0B,EAAE;QAClC,MAAMC,iBAAiB,GAAG,IAAI,CAACzB,iBAAiB,CAC3C0B,2BAA2B,CAAC,IAAI,CAAC5lB,OAAO,CAAC,CACzChB,GAAG,CAAC6mB,UAAU,IAAIA,UAAU,CAACC,aAAa,EAAE,CAAC5F,aAAa,CAAC;QAChE,IAAI,CAAC6D,YAAY,CAAC7F,qBAAqB,CAACyH,iBAAiB,CAAC;QAC1D;QACA;QACA,IAAI,CAACD,0BAA0B,GAAG,IAAI;MAC1C;MACAL,GAAG,CAAC/e,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC5B+e,GAAG,CAACtP,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC5BsP,GAAG,CAACzS,eAAe,GAAGzU,4EAAqB,CAAC,IAAI,CAACyU,eAAe,CAAC;MACjEyS,GAAG,CAACvI,kBAAkB,GAAG3e,4EAAqB,CAAC,IAAI,CAAC2e,kBAAkB,CAAC;MACvEuI,GAAG,CAACtI,cAAc,GAAGze,2EAAoB,CAAC,IAAI,CAACye,cAAc,EAAE,CAAC,CAAC;MACjEsI,GAAG,CACEvG,WAAW,CAAC3E,QAAQ,CAACyE,MAAM,CAAC/jB,IAAI,IAAIA,IAAI,IAAIA,IAAI,KAAK,IAAI,CAAC,CAACmE,GAAG,CAACumB,IAAI,IAAIA,IAAI,CAACxB,YAAY,CAAC,CAAC,CAC1FhF,eAAe,CAAC,IAAI,CAACpF,WAAW,CAAC;IAC1C,CAAC,CAAC;EACN;EACA;EACA+K,aAAa,CAACW,GAAG,EAAE;IACfA,GAAG,CAACtd,aAAa,CAACoF,SAAS,CAAC,MAAM;MAC9B,IAAI,CAAC0X,iBAAiB,EAAE;MACxB,IAAI,CAACZ,kBAAkB,CAAC8B,YAAY,EAAE;IAC1C,CAAC,CAAC;IACFV,GAAG,CAACld,OAAO,CAACgF,SAAS,CAACrS,KAAK,IAAI;MAC3B,IAAI,CAACqN,OAAO,CAAC6d,IAAI,CAAC;QACdpc,SAAS,EAAE,IAAI;QACfwI,IAAI,EAAEtX,KAAK,CAACsX,IAAI,CAACmS,IAAI;QACrBtpB,YAAY,EAAEH,KAAK,CAACG;MACxB,CAAC,CAAC;IACN,CAAC,CAAC;IACFoqB,GAAG,CAACjd,MAAM,CAAC+E,SAAS,CAACrS,KAAK,IAAI;MAC1B,IAAI,CAACsN,MAAM,CAAC4d,IAAI,CAAC;QACbpc,SAAS,EAAE,IAAI;QACfwI,IAAI,EAAEtX,KAAK,CAACsX,IAAI,CAACmS;MACrB,CAAC,CAAC;MACF,IAAI,CAACN,kBAAkB,CAAC8B,YAAY,EAAE;IAC1C,CAAC,CAAC;IACFV,GAAG,CAACnI,MAAM,CAAC/P,SAAS,CAACrS,KAAK,IAAI;MAC1B,IAAI,CAACoiB,MAAM,CAAC8I,IAAI,CAAC;QACbhrB,aAAa,EAAEF,KAAK,CAACE,aAAa;QAClCC,YAAY,EAAEH,KAAK,CAACG,YAAY;QAChC2O,SAAS,EAAE,IAAI;QACfwI,IAAI,EAAEtX,KAAK,CAACsX,IAAI,CAACmS;MACrB,CAAC,CAAC;IACN,CAAC,CAAC;IACFc,GAAG,CAAChd,OAAO,CAAC8E,SAAS,CAAC8Y,SAAS,IAAI;MAC/B,IAAI,CAAC5d,OAAO,CAAC2d,IAAI,CAAC;QACdhrB,aAAa,EAAEirB,SAAS,CAACjrB,aAAa;QACtCC,YAAY,EAAEgrB,SAAS,CAAChrB,YAAY;QACpCoX,iBAAiB,EAAE4T,SAAS,CAAC5T,iBAAiB,CAACkS,IAAI;QACnD3a,SAAS,EAAEqc,SAAS,CAACrc,SAAS,CAAC2a,IAAI;QACnCnS,IAAI,EAAE6T,SAAS,CAAC7T,IAAI,CAACmS,IAAI;QACzBrS,sBAAsB,EAAE+T,SAAS,CAAC/T,sBAAsB;QACxDnH,QAAQ,EAAEkb,SAAS,CAAClb,QAAQ;QAC5BwE,SAAS,EAAE0W,SAAS,CAAC1W,SAAS;QAC9BzU,KAAK,EAAEmrB,SAAS,CAACnrB;MACrB,CAAC,CAAC;MACF;MACA;MACA,IAAI,CAACmpB,kBAAkB,CAAC8B,YAAY,EAAE;IAC1C,CAAC,CAAC;IACFlnB,2CAAK,CAACwmB,GAAG,CAAClI,gBAAgB,EAAEkI,GAAG,CAACjI,gBAAgB,CAAC,CAACjQ,SAAS,CAAC,MAAM,IAAI,CAAC8W,kBAAkB,CAAC8B,YAAY,EAAE,CAAC;EAC7G;EACA;EACAvB,eAAe,CAAC5C,MAAM,EAAE;IACpB,MAAM;MAAE7L,QAAQ;MAAEmQ,gBAAgB;MAAEtT,eAAe;MAAEuT,sBAAsB;MAAEC;IAAgB,CAAC,GAAGxE,MAAM;IACvG,IAAI,CAACtb,QAAQ,GAAG4f,gBAAgB,IAAI,IAAI,GAAG,KAAK,GAAGA,gBAAgB;IACnE,IAAI,CAACtT,eAAe,GAAGA,eAAe,IAAI,IAAI,GAAG,KAAK,GAAGA,eAAe;IACxE,IAAI,CAACkK,kBAAkB,GAAGqJ,sBAAsB,IAAI,IAAI,GAAG,KAAK,GAAGA,sBAAsB;IACzF,IAAI,CAACxM,WAAW,GAAGyM,eAAe,IAAI,UAAU;IAChD,IAAIrQ,QAAQ,EAAE;MACV,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC5B;EACJ;EACA;EACA8O,iBAAiB,GAAG;IAChB,IAAI,CAACd,YAAY,CAAC/J,SAAS,CAAC,IAAI,CAAC+K,cAAc,EAAE,CAAC/lB,GAAG,CAACoT,IAAI,IAAIA,IAAI,CAAC6S,QAAQ,CAAC,CAAC;EACjF;AACJ;AACA;AACApB,WAAW,CAACc,UAAU,GAAG,EAAE;AAC3Bd,WAAW,CAAC1B,IAAI;EAAA,iBAA6F0B,WAAW,EA1ZhBzqB,gEAAE,CA0ZgCA,sDAAa,GA1Z/CA,gEAAE,CA0Z0DspB,QAAQ,GA1ZpEtpB,gEAAE,CA0Z+EA,6DAAoB,GA1ZrGA,gEAAE,CA0ZgH0E,qEAAmB,GA1ZrI1E,gEAAE,CA0ZgJgG,8DAAiB,MA1ZnKhG,gEAAE,CA0Z8L2pB,mBAAmB,OA1ZnN3pB,gEAAE,CA0Z8PoqB,eAAe;AAAA,CAA4D;AACnbK,WAAW,CAACX,IAAI,kBA3ZwF9pB,gEAAE;EAAA,MA2ZTyqB,WAAW;EAAA;EAAA;EAAA;EAAA;IAAA;MA3ZJzqB,0DAAE;MAAFA,0DAAE;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;EAAA;EAAA,WAAFA,iEAAE,CA2Z8hC;EAChoC;EACA;IAAE+pB,OAAO,EAAEJ,mBAAmB;IAAE0D,QAAQ,EAAE9Z;EAAU,CAAC,EACrD;IAAEwW,OAAO,EAAES,aAAa;IAAER,WAAW,EAAES;EAAY,CAAC,CACvD;AAAA,EAA4C;AACjD;EAAA,mDAhawGzqB,gEAAE,CAgaVyqB,WAAW,EAAc,CAAC;IAC9Gle,IAAI,EAAExI,qDAAS;IACfmlB,IAAI,EAAE,CAAC;MACChd,QAAQ,EAAE,8BAA8B;MACxC+d,QAAQ,EAAE,aAAa;MACvBC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE;MACP;MACA;QAAEJ,OAAO,EAAEJ,mBAAmB;QAAE0D,QAAQ,EAAE9Z;MAAU,CAAC,EACrD;QAAEwW,OAAO,EAAES,aAAa;QAAER,WAAW,EAAES;MAAY,CAAC,CACvD;MACD6C,IAAI,EAAE;QACF,OAAO,EAAE,eAAe;QACxB,WAAW,EAAE,IAAI;QACjB,gCAAgC,EAAE,UAAU;QAC5C,gCAAgC,EAAE,2BAA2B;QAC7D,iCAAiC,EAAE;MACvC;IACJ,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE/gB,IAAI,EAAEvM,sDAAaitB;IAAC,CAAC,EAAE;MAAE1gB,IAAI,EAAE+c;IAAS,CAAC,EAAE;MAAE/c,IAAI,EAAEvM,6DAAoBktB;IAAC,CAAC,EAAE;MAAE3gB,IAAI,EAAE7H,qEAAmByoB;IAAC,CAAC,EAAE;MAAE5gB,IAAI,EAAEvG,8DAAiB;MAAEojB,UAAU,EAAE,CAAC;QAClL7c,IAAI,EAAErI,oDAAQA;MAClB,CAAC;IAAE,CAAC,EAAE;MAAEqI,IAAI,EAAEqd,gBAAgB;MAAER,UAAU,EAAE,CAAC;QACzC7c,IAAI,EAAErI,oDAAQA;MAClB,CAAC,EAAE;QACCqI,IAAI,EAAE1I,kDAAM;QACZqlB,IAAI,EAAE,CAACS,mBAAmB;MAC9B,CAAC,EAAE;QACCpd,IAAI,EAAEpI,oDAAQA;MAClB,CAAC;IAAE,CAAC,EAAE;MAAEoI,IAAI,EAAEgH,SAAS;MAAE6V,UAAU,EAAE,CAAC;QAClC7c,IAAI,EAAErI,oDAAQA;MAClB,CAAC,EAAE;QACCqI,IAAI,EAAE1I,kDAAM;QACZqlB,IAAI,EAAE,CAACkB,eAAe;MAC1B,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE1E,WAAW,EAAE,CAAC;MAC1CnZ,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,wBAAwB;IACnC,CAAC,CAAC;IAAEiC,IAAI,EAAE,CAAC;MACP5e,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC,CAAC;IAAE3I,WAAW,EAAE,CAAC;MACdhU,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,wBAAwB;IACnC,CAAC,CAAC;IAAE/mB,EAAE,EAAE,CAAC;MACLoK,IAAI,EAAEvI,iDAAKA;IACf,CAAC,CAAC;IAAE2Y,QAAQ,EAAE,CAAC;MACXpQ,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,qBAAqB;IAChC,CAAC,CAAC;IAAEhc,QAAQ,EAAE,CAAC;MACXX,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,qBAAqB;IAChC,CAAC,CAAC;IAAE1P,eAAe,EAAE,CAAC;MAClBjN,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,4BAA4B;IACvC,CAAC,CAAC;IAAEtF,cAAc,EAAE,CAAC;MACjBrX,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,2BAA2B;IACtC,CAAC,CAAC;IAAErF,aAAa,EAAE,CAAC;MAChBtX,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,0BAA0B;IACrC,CAAC,CAAC;IAAExF,kBAAkB,EAAE,CAAC;MACrBnX,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,+BAA+B;IAC1C,CAAC,CAAC;IAAEvF,cAAc,EAAE,CAAC;MACjBpX,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,2BAA2B;IACtC,CAAC,CAAC;IAAEja,OAAO,EAAE,CAAC;MACV1C,IAAI,EAAEnI,kDAAM;MACZ8kB,IAAI,EAAE,CAAC,oBAAoB;IAC/B,CAAC,CAAC;IAAEna,OAAO,EAAE,CAAC;MACVxC,IAAI,EAAEnI,kDAAM;MACZ8kB,IAAI,EAAE,CAAC,oBAAoB;IAC/B,CAAC,CAAC;IAAEla,MAAM,EAAE,CAAC;MACTzC,IAAI,EAAEnI,kDAAM;MACZ8kB,IAAI,EAAE,CAAC,mBAAmB;IAC9B,CAAC,CAAC;IAAEpF,MAAM,EAAE,CAAC;MACTvX,IAAI,EAAEnI,kDAAM;MACZ8kB,IAAI,EAAE,CAAC,mBAAmB;IAC9B,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMqE,eAAe,GAAG,IAAIzpB,0DAAc,CAAC,eAAe,CAAC;AAC3D;AACA,MAAM0pB,aAAa,CAAC;EAChB;EACA,IAAItgB,QAAQ,GAAG;IACX,OAAO,IAAI,CAACC,SAAS;EACzB;EACA,IAAID,QAAQ,CAAC3G,KAAK,EAAE;IAChB,IAAI,CAAC4G,SAAS,GAAGpI,4EAAqB,CAACwB,KAAK,CAAC;IAC7C,IAAI,CAACknB,aAAa,CAACre,IAAI,CAAC,IAAI,CAAC;EACjC;EACAvO,WAAW,CAAC+F,OAAO,EAAE8mB,UAAU,EAAE;IAC7B,IAAI,CAAC9mB,OAAO,GAAGA,OAAO;IACtB;IACA,IAAI,CAAC6mB,aAAa,GAAG,IAAIpoB,yCAAO,EAAE;IAClC,IAAI,CAAC8H,SAAS,GAAG,KAAK;IACtB,IAAI,OAAO+d,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAE;MAC/Cb,iBAAiB,CAACzjB,OAAO,CAACkgB,aAAa,EAAE,eAAe,CAAC;IAC7D;IACA,IAAI,CAAC6G,WAAW,GAAGD,UAAU;EACjC;EACA7E,WAAW,GAAG;IACV,IAAI,CAAC4E,aAAa,CAAC/Y,QAAQ,EAAE;EACjC;AACJ;AACA8Y,aAAa,CAACzE,IAAI;EAAA,iBAA6FyE,aAAa,EAphBpBxtB,gEAAE,CAohBoCA,sDAAa,GAphBnDA,gEAAE,CAohB8D0pB,eAAe;AAAA,CAA4E;AACnQ8D,aAAa,CAAC1D,IAAI,kBArhBsF9pB,gEAAE;EAAA,MAqhBPwtB,aAAa;EAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA,WArhBRxtB,iEAAE,CAqhB8K,CAAC;IAAE+pB,OAAO,EAAEwD,eAAe;IAAEvD,WAAW,EAAEwD;EAAc,CAAC,CAAC;AAAA,EAAiB;AACnW;EAAA,mDAthBwGxtB,gEAAE,CAshBVwtB,aAAa,EAAc,CAAC;IAChHjhB,IAAI,EAAExI,qDAAS;IACfmlB,IAAI,EAAE,CAAC;MACChd,QAAQ,EAAE,iBAAiB;MAC3Bge,UAAU,EAAE,IAAI;MAChBoD,IAAI,EAAE;QACF,OAAO,EAAE;MACb,CAAC;MACDnD,SAAS,EAAE,CAAC;QAAEJ,OAAO,EAAEwD,eAAe;QAAEvD,WAAW,EAAEwD;MAAc,CAAC;IACxE,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEjhB,IAAI,EAAEvM,sDAAaitB;IAAC,CAAC,EAAE;MAAE1gB,IAAI,EAAEgH,SAAS;MAAE6V,UAAU,EAAE,CAAC;QACvF7c,IAAI,EAAE1I,kDAAM;QACZqlB,IAAI,EAAE,CAACQ,eAAe;MAC1B,CAAC,EAAE;QACCnd,IAAI,EAAErI,oDAAQA;MAClB,CAAC,EAAE;QACCqI,IAAI,EAAEpI,oDAAQA;MAClB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE+I,QAAQ,EAAE,CAAC;MACvCX,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,uBAAuB;IAClC,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM0E,oBAAoB,GAAG,IAAI9pB,0DAAc,CAAC,oBAAoB,CAAC;AACrE;AACA;AACA;AACA;AACA,MAAM+pB,kBAAkB,CAAC;EACrBhtB,WAAW,CAACitB,WAAW,EAAE;IACrB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAClC;AACJ;AACAD,kBAAkB,CAAC9E,IAAI;EAAA,iBAA6F8E,kBAAkB,EAlkB9B7tB,gEAAE,CAkkB8CA,uDAAc;AAAA,CAA4C;AAClN6tB,kBAAkB,CAAC/D,IAAI,kBAnkBiF9pB,gEAAE;EAAA,MAmkBF6tB,kBAAkB;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA,WAnkBlB7tB,iEAAE,CAmkBwH,CAAC;IAAE+pB,OAAO,EAAE6D,oBAAoB;IAAE5D,WAAW,EAAE6D;EAAmB,CAAC,CAAC;AAAA,EAAiB;AACvT;EAAA,mDApkBwG7tB,gEAAE,CAokBV6tB,kBAAkB,EAAc,CAAC;IACrHthB,IAAI,EAAExI,qDAAS;IACfmlB,IAAI,EAAE,CAAC;MACChd,QAAQ,EAAE,iCAAiC;MAC3Cge,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,CAAC;QAAEJ,OAAO,EAAE6D,oBAAoB;QAAE5D,WAAW,EAAE6D;MAAmB,CAAC;IAClF,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEthB,IAAI,EAAEvM,uDAAc+tB;IAAC,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE5C,IAAI,EAAE,CAAC;MACzF5e,IAAI,EAAEvI,iDAAKA;IACf,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMgqB,gBAAgB,GAAG,IAAIlqB,0DAAc,CAAC,gBAAgB,CAAC;AAC7D;AACA;AACA;AACA;AACA,MAAMmqB,cAAc,CAAC;EACjB;EACA,IAAIxV,SAAS,GAAG;IACZ,OAAO,IAAI,CAACyV,UAAU;EAC1B;EACA,IAAIzV,SAAS,CAAClS,KAAK,EAAE;IACjB,IAAI,CAAC2nB,UAAU,GAAGnpB,4EAAqB,CAACwB,KAAK,CAAC;EAClD;EACA1F,WAAW,CAACitB,WAAW,EAAE;IACrB,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACI,UAAU,GAAG,KAAK;EAC3B;AACJ;AACAD,cAAc,CAAClF,IAAI;EAAA,iBAA6FkF,cAAc,EA7mBtBjuB,gEAAE,CA6mBsCA,uDAAc;AAAA,CAA4C;AAC1MiuB,cAAc,CAACnE,IAAI,kBA9mBqF9pB,gEAAE;EAAA,MA8mBNiuB,cAAc;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;EAAA,WA9mBVjuB,iEAAE,CA8mBoI,CAAC;IAAE+pB,OAAO,EAAEiE,gBAAgB;IAAEhE,WAAW,EAAEiE;EAAe,CAAC,CAAC;AAAA,EAAiB;AAC3T;EAAA,mDA/mBwGjuB,gEAAE,CA+mBViuB,cAAc,EAAc,CAAC;IACjH1hB,IAAI,EAAExI,qDAAS;IACfmlB,IAAI,EAAE,CAAC;MACChd,QAAQ,EAAE,6BAA6B;MACvCge,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,CAAC;QAAEJ,OAAO,EAAEiE,gBAAgB;QAAEhE,WAAW,EAAEiE;MAAe,CAAC;IAC1E,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE1hB,IAAI,EAAEvM,uDAAc+tB;IAAC,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE5C,IAAI,EAAE,CAAC;MACzF5e,IAAI,EAAEvI,iDAAKA;IACf,CAAC,CAAC;IAAEyU,SAAS,EAAE,CAAC;MACZlM,IAAI,EAAEvI,iDAAKA;IACf,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMmqB,eAAe,GAAG,UAAU;AAClC;AACA,MAAMC,OAAO,CAAC;EACV;EACA,IAAIlhB,QAAQ,GAAG;IACX,OAAO,IAAI,CAACC,SAAS,IAAK,IAAI,CAACmJ,aAAa,IAAI,IAAI,CAACA,aAAa,CAACpJ,QAAS;EAChF;EACA,IAAIA,QAAQ,CAAC3G,KAAK,EAAE;IAChB,IAAI,CAAC4G,SAAS,GAAGpI,4EAAqB,CAACwB,KAAK,CAAC;IAC7C,IAAI,CAACslB,QAAQ,CAAC3e,QAAQ,GAAG,IAAI,CAACC,SAAS;EAC3C;EACAtM,WAAW,EACX;EACA+F,OAAO,EACP;EACA0P,aAAa;EACb;AACJ;AACA;AACA;EACIxM,SAAS,EAAE4D,OAAO,EAAE2gB,iBAAiB,EAAE7F,MAAM,EAAEuC,IAAI,EAAEH,QAAQ,EAAEC,kBAAkB,EAAEyD,WAAW,EAAEX,WAAW,EAAE;IACzG,IAAI,CAAC/mB,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC0P,aAAa,GAAGA,aAAa;IAClC,IAAI,CAAC5I,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC2gB,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACtD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACF,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACyD,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACX,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAAC3C,UAAU,GAAG,IAAI3lB,yCAAO,EAAE;IAC/B;IACA,IAAI,CAACuJ,OAAO,GAAG,IAAI3K,wDAAY,EAAE;IACjC;IACA,IAAI,CAAC4K,QAAQ,GAAG,IAAI5K,wDAAY,EAAE;IAClC;IACA,IAAI,CAAC6K,KAAK,GAAG,IAAI7K,wDAAY,EAAE;IAC/B;IACA,IAAI,CAAC8K,OAAO,GAAG,IAAI9K,wDAAY,EAAE;IACjC;IACA,IAAI,CAAC+K,MAAM,GAAG,IAAI/K,wDAAY,EAAE;IAChC;IACA,IAAI,CAACgL,OAAO,GAAG,IAAIhL,wDAAY,EAAE;IACjC;AACR;AACA;AACA;IACQ,IAAI,CAACiL,KAAK,GAAG,IAAI1J,4CAAU,CAAEmjB,QAAQ,IAAK;MACtC,MAAM4F,YAAY,GAAG,IAAI,CAAC1C,QAAQ,CAAC3c,KAAK,CACnCwV,IAAI,CAAC9e,oDAAG,CAAC4oB,UAAU,KAAK;QACzBroB,MAAM,EAAE,IAAI;QACZuJ,eAAe,EAAE8e,UAAU,CAAC9e,eAAe;QAC3ChO,KAAK,EAAE8sB,UAAU,CAAC9sB,KAAK;QACvBmQ,KAAK,EAAE2c,UAAU,CAAC3c,KAAK;QACvBF,QAAQ,EAAE6c,UAAU,CAAC7c;MACzB,CAAC,CAAC,CAAC,CAAC,CACCoC,SAAS,CAAC4U,QAAQ,CAAC;MACxB,OAAO,MAAM;QACT4F,YAAY,CAAC1a,WAAW,EAAE;MAC9B,CAAC;IACL,CAAC,CAAC;IACF,IAAI,CAACgY,QAAQ,GAAGjB,QAAQ,CAACrB,UAAU,CAAC3iB,OAAO,EAAE;MACzCsJ,kBAAkB,EAAEsY,MAAM,IAAIA,MAAM,CAACtY,kBAAkB,IAAI,IAAI,GAAGsY,MAAM,CAACtY,kBAAkB,GAAG,CAAC;MAC/FyN,+BAA+B,EAAE6K,MAAM,IAAIA,MAAM,CAAC7K,+BAA+B,IAAI,IAAI,GACnF6K,MAAM,CAAC7K,+BAA+B,GACtC,CAAC;MACPpD,MAAM,EAAEiO,MAAM,EAAEjO;IACpB,CAAC,CAAC;IACF,IAAI,CAACsR,QAAQ,CAACV,IAAI,GAAG,IAAI;IACzB;IACA;IACA;IACAiD,OAAO,CAACvG,cAAc,CAAC5lB,IAAI,CAAC,IAAI,CAAC;IACjC,IAAIumB,MAAM,EAAE;MACR,IAAI,CAAC4C,eAAe,CAAC5C,MAAM,CAAC;IAChC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAIlS,aAAa,EAAE;MACf,IAAI,CAACuV,QAAQ,CAAC5W,kBAAkB,CAACqB,aAAa,CAACqU,YAAY,CAAC;MAC5DrU,aAAa,CAACkV,OAAO,CAAC,IAAI,CAAC;IAC/B;IACA,IAAI,CAACiD,WAAW,CAAC,IAAI,CAAC5C,QAAQ,CAAC;IAC/B,IAAI,CAACP,aAAa,CAAC,IAAI,CAACO,QAAQ,CAAC;EACrC;EACA;AACJ;AACA;AACA;EACIvZ,qBAAqB,GAAG;IACpB,OAAO,IAAI,CAACuZ,QAAQ,CAACvZ,qBAAqB,EAAE;EAChD;EACA;EACAE,cAAc,GAAG;IACb,OAAO,IAAI,CAACqZ,QAAQ,CAACrZ,cAAc,EAAE;EACzC;EACA;EACAmC,KAAK,GAAG;IACJ,IAAI,CAACkX,QAAQ,CAAClX,KAAK,EAAE;EACzB;EACA;AACJ;AACA;EACIO,mBAAmB,GAAG;IAClB,OAAO,IAAI,CAAC2W,QAAQ,CAAC3W,mBAAmB,EAAE;EAC9C;EACA;AACJ;AACA;AACA;EACIC,mBAAmB,CAAC5O,KAAK,EAAE;IACvB,IAAI,CAACslB,QAAQ,CAAC1W,mBAAmB,CAAC5O,KAAK,CAAC;EAC5C;EACAmoB,eAAe,GAAG;IACd;IACA;IACA,IAAI,CAAChhB,OAAO,CAAC0F,iBAAiB,CAAC,MAAM;MACjC;MACA;MACA;MACA;MACA,IAAI,CAAC1F,OAAO,CAACihB,QAAQ,CAACjK,IAAI,CAAC7e,qDAAI,CAAC,CAAC,CAAC,EAAEH,yDAAS,CAAC,IAAI,CAACslB,UAAU,CAAC,CAAC,CAACjX,SAAS,CAAC,MAAM;QAC5E,IAAI,CAAC6a,kBAAkB,EAAE;QACzB,IAAI,CAACC,qBAAqB,EAAE;QAC5B,IAAI,IAAI,CAACC,gBAAgB,EAAE;UACvB,IAAI,CAACjD,QAAQ,CAAC1W,mBAAmB,CAAC,IAAI,CAAC2Z,gBAAgB,CAAC;QAC5D;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACAC,WAAW,CAACC,OAAO,EAAE;IACjB,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,qBAAqB,CAAC;IACzD,MAAME,cAAc,GAAGF,OAAO,CAAC,kBAAkB,CAAC;IAClD;IACA;IACA,IAAIC,kBAAkB,IAAI,CAACA,kBAAkB,CAACE,WAAW,EAAE;MACvD,IAAI,CAACP,kBAAkB,EAAE;IAC7B;IACA;IACA,IAAIM,cAAc,IAAI,CAACA,cAAc,CAACC,WAAW,IAAI,IAAI,CAACL,gBAAgB,EAAE;MACxE,IAAI,CAACjD,QAAQ,CAAC1W,mBAAmB,CAAC,IAAI,CAAC2Z,gBAAgB,CAAC;IAC5D;EACJ;EACAjG,WAAW,GAAG;IACV,IAAI,IAAI,CAACvS,aAAa,EAAE;MACpB,IAAI,CAACA,aAAa,CAACoV,UAAU,CAAC,IAAI,CAAC;IACvC;IACA,MAAMlpB,KAAK,GAAG4rB,OAAO,CAACvG,cAAc,CAACngB,OAAO,CAAC,IAAI,CAAC;IAClD,IAAIlF,KAAK,GAAG,CAAC,CAAC,EAAE;MACZ4rB,OAAO,CAACvG,cAAc,CAAC3H,MAAM,CAAC1d,KAAK,EAAE,CAAC,CAAC;IAC3C;IACA;IACA,IAAI,CAACkL,OAAO,CAAC0F,iBAAiB,CAAC,MAAM;MACjC,IAAI,CAAC4X,UAAU,CAAC5b,IAAI,EAAE;MACtB,IAAI,CAAC4b,UAAU,CAACtW,QAAQ,EAAE;MAC1B,IAAI,CAACmX,QAAQ,CAAC1X,OAAO,EAAE;IAC3B,CAAC,CAAC;EACN;EACA;EACAya,kBAAkB,GAAG;IACjB,MAAMhoB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACkgB,aAAa;IAC1C,IAAI5T,WAAW,GAAGtM,OAAO;IACzB,IAAI,IAAI,CAACwoB,mBAAmB,EAAE;MAC1Blc,WAAW,GACPtM,OAAO,CAACyoB,OAAO,KAAK9b,SAAS,GACvB3M,OAAO,CAACyoB,OAAO,CAAC,IAAI,CAACD,mBAAmB,CAAC;MACzC;MACExoB,OAAO,CAACwb,aAAa,EAAEiN,OAAO,CAAC,IAAI,CAACD,mBAAmB,CAAC;IACxE;IACA,IAAIlc,WAAW,KAAK,OAAOgY,SAAS,KAAK,WAAW,IAAIA,SAAS,CAAC,EAAE;MAChEb,iBAAiB,CAACnX,WAAW,EAAE,SAAS,CAAC;IAC7C;IACA,IAAI,CAAC2Y,QAAQ,CAAC5Z,eAAe,CAACiB,WAAW,IAAItM,OAAO,CAAC;EACzD;EACA;EACA0oB,mBAAmB,GAAG;IAClB,MAAMC,QAAQ,GAAG,IAAI,CAAC3b,eAAe;IACrC,IAAI,CAAC2b,QAAQ,EAAE;MACX,OAAO,IAAI;IACf;IACA,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;MAC9B,OAAO,IAAI,CAAC3oB,OAAO,CAACkgB,aAAa,CAACuI,OAAO,CAACE,QAAQ,CAAC;IACvD;IACA,OAAOvqB,oEAAa,CAACuqB,QAAQ,CAAC;EAClC;EACA;EACAd,WAAW,CAACxC,GAAG,EAAE;IACbA,GAAG,CAACtd,aAAa,CAACoF,SAAS,CAAC,MAAM;MAC9B,IAAI,CAACkY,GAAG,CAACvb,UAAU,EAAE,EAAE;QACnB,MAAM8e,GAAG,GAAG,IAAI,CAACzE,IAAI;QACrB,MAAMrc,cAAc,GAAG,IAAI,CAACA,cAAc;QAC1C,MAAM8H,WAAW,GAAG,IAAI,CAACvD,oBAAoB,GACvC;UACElT,QAAQ,EAAE,IAAI,CAACkT,oBAAoB,CAAC6a,WAAW;UAC/CthB,OAAO,EAAE,IAAI,CAACyG,oBAAoB,CAACkY,IAAI;UACvClR,aAAa,EAAE,IAAI,CAACoU;QACxB,CAAC,GACC,IAAI;QACV,MAAMvU,OAAO,GAAG,IAAI,CAAC/G,gBAAgB,GAC/B;UACEhT,QAAQ,EAAE,IAAI,CAACgT,gBAAgB,CAAC+a,WAAW;UAC3CthB,OAAO,EAAE,IAAI,CAACuG,gBAAgB,CAACoY,IAAI;UACnC1S,SAAS,EAAE,IAAI,CAAC1F,gBAAgB,CAAC0F,SAAS;UAC1CwB,aAAa,EAAE,IAAI,CAACoU;QACxB,CAAC,GACC,IAAI;QACVpC,GAAG,CAAC/e,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC5B+e,GAAG,CAACtP,QAAQ,GAAG,IAAI,CAACA,QAAQ;QAC5BsP,GAAG,CAACvd,cAAc,GACd,OAAOA,cAAc,KAAK,QAAQ,IAAIA,cAAc,GAC9CA,cAAc,GACdxJ,2EAAoB,CAACwJ,cAAc,CAAC;QAC9Cud,GAAG,CAAC3a,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;QAC9C2a,GAAG,CAACpS,YAAY,GAAG,IAAI,CAACA,YAAY;QACpCoS,GAAG,CACEtY,mBAAmB,CAAC,IAAI,CAAC2b,mBAAmB,EAAE,CAAC,CAC/Ctc,uBAAuB,CAACwD,WAAW,CAAC,CACpC1D,mBAAmB,CAACgH,OAAO,CAAC,CAC5B1E,oBAAoB,CAAC,IAAI,CAACqJ,gBAAgB,IAAI,QAAQ,CAAC;QAC5D,IAAI+Q,GAAG,EAAE;UACLvD,GAAG,CAAClX,aAAa,CAACya,GAAG,CAACjpB,KAAK,CAAC;QAChC;MACJ;IACJ,CAAC,CAAC;IACF;IACA0lB,GAAG,CAACtd,aAAa,CAAC+V,IAAI,CAAC7e,qDAAI,CAAC,CAAC,CAAC,CAAC,CAACkO,SAAS,CAAC,MAAM;MAC5C;MACA,IAAI,IAAI,CAAC4Z,WAAW,EAAE;QAClB1B,GAAG,CAAC/Z,UAAU,CAAC,IAAI,CAACyb,WAAW,CAAC9B,QAAQ,CAAC;QACzC;MACJ;MACA;MACA;MACA,IAAI5X,MAAM,GAAG,IAAI,CAACrN,OAAO,CAACkgB,aAAa,CAAC1E,aAAa;MACrD,OAAOnO,MAAM,EAAE;QACX,IAAIA,MAAM,CAACuG,SAAS,CAACrP,QAAQ,CAACgjB,eAAe,CAAC,EAAE;UAC5ClC,GAAG,CAAC/Z,UAAU,CAACkc,OAAO,CAACvG,cAAc,CAAC3f,IAAI,CAACuY,IAAI,IAAI;YAC/C,OAAOA,IAAI,CAAC7Z,OAAO,CAACkgB,aAAa,KAAK7S,MAAM;UAChD,CAAC,CAAC,EAAE4X,QAAQ,IAAI,IAAI,CAAC;UACrB;QACJ;QACA5X,MAAM,GAAGA,MAAM,CAACmO,aAAa;MACjC;IACJ,CAAC,CAAC;EACN;EACA;EACAkJ,aAAa,CAACW,GAAG,EAAE;IACfA,GAAG,CAACrd,OAAO,CAACmF,SAAS,CAAC0b,UAAU,IAAI;MAChC,IAAI,CAAC7gB,OAAO,CAACge,IAAI,CAAC;QAAEzmB,MAAM,EAAE,IAAI;QAAEzE,KAAK,EAAE+tB,UAAU,CAAC/tB;MAAM,CAAC,CAAC;MAC5D;MACA;MACA,IAAI,CAACmpB,kBAAkB,CAAC8B,YAAY,EAAE;IAC1C,CAAC,CAAC;IACFV,GAAG,CAACpd,QAAQ,CAACkF,SAAS,CAAC2b,YAAY,IAAI;MACnC,IAAI,CAAC7gB,QAAQ,CAAC+d,IAAI,CAAC;QAAEzmB,MAAM,EAAE,IAAI;QAAEzE,KAAK,EAAEguB,YAAY,CAAChuB;MAAM,CAAC,CAAC;IACnE,CAAC,CAAC;IACFuqB,GAAG,CAACnd,KAAK,CAACiF,SAAS,CAAC4b,QAAQ,IAAI;MAC5B,IAAI,CAAC7gB,KAAK,CAAC8d,IAAI,CAAC;QACZzmB,MAAM,EAAE,IAAI;QACZwL,QAAQ,EAAEge,QAAQ,CAAChe,QAAQ;QAC3BwE,SAAS,EAAEwZ,QAAQ,CAACxZ,SAAS;QAC7BzU,KAAK,EAAEiuB,QAAQ,CAACjuB;MACpB,CAAC,CAAC;MACF;MACA;MACA,IAAI,CAACmpB,kBAAkB,CAAC8B,YAAY,EAAE;IAC1C,CAAC,CAAC;IACFV,GAAG,CAACld,OAAO,CAACgF,SAAS,CAAC6b,UAAU,IAAI;MAChC,IAAI,CAAC7gB,OAAO,CAAC6d,IAAI,CAAC;QACdpc,SAAS,EAAEof,UAAU,CAACpf,SAAS,CAAC2a,IAAI;QACpCnS,IAAI,EAAE,IAAI;QACVnX,YAAY,EAAE+tB,UAAU,CAAC/tB;MAC7B,CAAC,CAAC;IACN,CAAC,CAAC;IACFoqB,GAAG,CAACjd,MAAM,CAAC+E,SAAS,CAAC8b,SAAS,IAAI;MAC9B,IAAI,CAAC7gB,MAAM,CAAC4d,IAAI,CAAC;QACbpc,SAAS,EAAEqf,SAAS,CAACrf,SAAS,CAAC2a,IAAI;QACnCnS,IAAI,EAAE;MACV,CAAC,CAAC;IACN,CAAC,CAAC;IACFiT,GAAG,CAAChd,OAAO,CAAC8E,SAAS,CAAC8Y,SAAS,IAAI;MAC/B,IAAI,CAAC5d,OAAO,CAAC2d,IAAI,CAAC;QACdhrB,aAAa,EAAEirB,SAAS,CAACjrB,aAAa;QACtCC,YAAY,EAAEgrB,SAAS,CAAChrB,YAAY;QACpCoX,iBAAiB,EAAE4T,SAAS,CAAC5T,iBAAiB,CAACkS,IAAI;QACnD3a,SAAS,EAAEqc,SAAS,CAACrc,SAAS,CAAC2a,IAAI;QACnCrS,sBAAsB,EAAE+T,SAAS,CAAC/T,sBAAsB;QACxDE,IAAI,EAAE,IAAI;QACVrH,QAAQ,EAAEkb,SAAS,CAAClb,QAAQ;QAC5BwE,SAAS,EAAE0W,SAAS,CAAC1W,SAAS;QAC9BzU,KAAK,EAAEmrB,SAAS,CAACnrB;MACrB,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EACA;EACA0pB,eAAe,CAAC5C,MAAM,EAAE;IACpB,MAAM;MAAE7L,QAAQ;MAAEjO,cAAc;MAAE4C,iBAAiB;MAAEuI,YAAY;MAAEjG,eAAe;MAAEkZ,gBAAgB;MAAEsC,mBAAmB;MAAE3Q;IAAkB,CAAC,GAAG+J,MAAM;IACvJ,IAAI,CAACtb,QAAQ,GAAG4f,gBAAgB,IAAI,IAAI,GAAG,KAAK,GAAGA,gBAAgB;IACnE,IAAI,CAACpe,cAAc,GAAGA,cAAc,IAAI,CAAC;IACzC,IAAIiO,QAAQ,EAAE;MACV,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC5B;IACA,IAAIrL,iBAAiB,EAAE;MACnB,IAAI,CAACA,iBAAiB,GAAGA,iBAAiB;IAC9C;IACA,IAAIuI,YAAY,EAAE;MACd,IAAI,CAACA,YAAY,GAAGA,YAAY;IACpC;IACA,IAAIjG,eAAe,EAAE;MACjB,IAAI,CAACA,eAAe,GAAGA,eAAe;IAC1C;IACA,IAAIwb,mBAAmB,EAAE;MACrB,IAAI,CAACA,mBAAmB,GAAGA,mBAAmB;IAClD;IACA,IAAI3Q,gBAAgB,EAAE;MAClB,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;IAC5C;EACJ;EACA;EACAoQ,qBAAqB,GAAG;IACpB;IACA,IAAI,CAACthB,QAAQ,CAACyhB,OAAO,CAChBtK,IAAI,CAAC/e,0DAAS,CAAC,IAAI,CAAC4H,QAAQ,CAAC;IAClC;IACAzH,oDAAG,CAAE6M,OAAO,IAAK;MACb,MAAMmd,mBAAmB,GAAGnd,OAAO,CAC9B6S,MAAM,CAAChY,MAAM,IAAIA,MAAM,CAACmgB,WAAW,KAAK,IAAI,CAAC,CAC7C/nB,GAAG,CAAC4H,MAAM,IAAIA,MAAM,CAAC5G,OAAO,CAAC;MAClC;MACA;MACA;MACA,IAAI,IAAI,CAAC0nB,WAAW,IAAI,IAAI,CAACc,mBAAmB,EAAE;QAC9CU,mBAAmB,CAAC7tB,IAAI,CAAC,IAAI,CAAC2E,OAAO,CAAC;MAC1C;MACA,IAAI,CAACilB,QAAQ,CAACnZ,WAAW,CAACod,mBAAmB,CAAC;IAClD,CAAC,CAAC;IACF;IACA/pB,0DAAS,CAAE4M,OAAO,IAAK;MACnB,OAAOlN,2CAAK,CAAC,GAAGkN,OAAO,CAAC/M,GAAG,CAACoT,IAAI,IAAI;QAChC,OAAOA,IAAI,CAACyU,aAAa,CAAC/I,IAAI,CAAC/e,0DAAS,CAACqT,IAAI,CAAC,CAAC;MACnD,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,EAAEtT,yDAAS,CAAC,IAAI,CAACslB,UAAU,CAAC,CAAC,CAC1BjX,SAAS,CAACgc,cAAc,IAAI;MAC7B;MACA,MAAMC,OAAO,GAAG,IAAI,CAACnE,QAAQ;MAC7B,MAAMre,MAAM,GAAGuiB,cAAc,CAACnpB,OAAO,CAACkgB,aAAa;MACnDiJ,cAAc,CAAC7iB,QAAQ,GAAG8iB,OAAO,CAACpb,aAAa,CAACpH,MAAM,CAAC,GAAGwiB,OAAO,CAACnb,YAAY,CAACrH,MAAM,CAAC;IAC1F,CAAC,CAAC;EACN;AACJ;AACA4gB,OAAO,CAACvG,cAAc,GAAG,EAAE;AAC3BuG,OAAO,CAACrF,IAAI;EAAA,iBAA6FqF,OAAO,EAt+BRpuB,gEAAE,CAs+BwBA,sDAAa,GAt+BvCA,gEAAE,CAs+BkDwqB,aAAa,OAt+BjExqB,gEAAE,CAs+B4GyE,sDAAQ,GAt+BtHzE,gEAAE,CAs+BiIA,kDAAS,GAt+B5IA,gEAAE,CAs+BuJA,4DAAmB,GAt+B5KA,gEAAE,CAs+BuLoqB,eAAe,MAt+BxMpqB,gEAAE,CAs+BmOgG,8DAAiB,MAt+BtPhG,gEAAE,CAs+BiRspB,QAAQ,GAt+B3RtpB,gEAAE,CAs+BsSA,6DAAoB,GAt+B5TA,gEAAE,CAs+BuUutB,eAAe,OAt+BxVvtB,gEAAE,CAs+B+X0pB,eAAe;AAAA,CAA4E;AACpkB0E,OAAO,CAACtE,IAAI,kBAv+B4F9pB,gEAAE;EAAA,MAu+BbouB,OAAO;EAAA;EAAA;IAAA;MAv+BIpuB,6DAAE,WAu+B2jCguB,gBAAgB;MAv+B7kChuB,6DAAE,WAu+BkqC4tB,oBAAoB;MAv+BxrC5tB,6DAAE,WAu+BovCutB,eAAe;IAAA;IAAA;MAAA;MAv+BrwCvtB,6DAAE,MAAFA,0DAAE;MAAFA,6DAAE,MAAFA,0DAAE;MAAFA,6DAAE,MAAFA,0DAAE;IAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAAFA,0DAAE;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;EAAA;EAAA,WAAFA,iEAAE,CAu+B+7B,CAAC;IAAE+pB,OAAO,EAAEL,eAAe;IAAEM,WAAW,EAAEoE;EAAQ,CAAC,CAAC,GAv+Br/BpuB,mEAAE;AAAA,EAu+Bs1C;AACh8C;EAAA,mDAx+BwGA,gEAAE,CAw+BVouB,OAAO,EAAc,CAAC;IAC1G7hB,IAAI,EAAExI,qDAAS;IACfmlB,IAAI,EAAE,CAAC;MACChd,QAAQ,EAAE,WAAW;MACrB+d,QAAQ,EAAE,SAAS;MACnBC,UAAU,EAAE,IAAI;MAChBoD,IAAI,EAAE;QACF,OAAO,EAAEa,eAAe;QACxB,2BAA2B,EAAE,UAAU;QACvC,2BAA2B,EAAE;MACjC,CAAC;MACDhE,SAAS,EAAE,CAAC;QAAEJ,OAAO,EAAEL,eAAe;QAAEM,WAAW,EAAEoE;MAAQ,CAAC;IAClE,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE7hB,IAAI,EAAEvM,sDAAaitB;IAAC,CAAC,EAAE;MAAE1gB,IAAI,EAAEgH,SAAS;MAAE6V,UAAU,EAAE,CAAC;QACvF7c,IAAI,EAAE1I,kDAAM;QACZqlB,IAAI,EAAE,CAACsB,aAAa;MACxB,CAAC,EAAE;QACCje,IAAI,EAAErI,oDAAQA;MAClB,CAAC,EAAE;QACCqI,IAAI,EAAEpI,oDAAQA;MAClB,CAAC;IAAE,CAAC,EAAE;MAAEoI,IAAI,EAAEgH,SAAS;MAAE6V,UAAU,EAAE,CAAC;QAClC7c,IAAI,EAAE1I,kDAAM;QACZqlB,IAAI,EAAE,CAACzkB,sDAAQ;MACnB,CAAC;IAAE,CAAC,EAAE;MAAE8H,IAAI,EAAEvM,kDAASgpB;IAAC,CAAC,EAAE;MAAEzc,IAAI,EAAEvM,4DAAmBiwB;IAAC,CAAC,EAAE;MAAE1jB,IAAI,EAAEgH,SAAS;MAAE6V,UAAU,EAAE,CAAC;QACtF7c,IAAI,EAAErI,oDAAQA;MAClB,CAAC,EAAE;QACCqI,IAAI,EAAE1I,kDAAM;QACZqlB,IAAI,EAAE,CAACkB,eAAe;MAC1B,CAAC;IAAE,CAAC,EAAE;MAAE7d,IAAI,EAAEvG,8DAAiB;MAAEojB,UAAU,EAAE,CAAC;QAC1C7c,IAAI,EAAErI,oDAAQA;MAClB,CAAC;IAAE,CAAC,EAAE;MAAEqI,IAAI,EAAE+c;IAAS,CAAC,EAAE;MAAE/c,IAAI,EAAEvM,6DAAoBktB;IAAC,CAAC,EAAE;MAAE3gB,IAAI,EAAEihB,aAAa;MAAEpE,UAAU,EAAE,CAAC;QAC1F7c,IAAI,EAAErI,oDAAQA;MAClB,CAAC,EAAE;QACCqI,IAAI,EAAElI,gDAAIA;MACd,CAAC,EAAE;QACCkI,IAAI,EAAE1I,kDAAM;QACZqlB,IAAI,EAAE,CAACqE,eAAe;MAC1B,CAAC;IAAE,CAAC,EAAE;MAAEhhB,IAAI,EAAE6hB,OAAO;MAAEhF,UAAU,EAAE,CAAC;QAChC7c,IAAI,EAAErI,oDAAQA;MAClB,CAAC,EAAE;QACCqI,IAAI,EAAEpI,oDAAQA;MAClB,CAAC,EAAE;QACCoI,IAAI,EAAE1I,kDAAM;QACZqlB,IAAI,EAAE,CAACQ,eAAe;MAC1B,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEnc,QAAQ,EAAE,CAAC;MACvChB,IAAI,EAAEjI,2DAAe;MACrB4kB,IAAI,EAAE,CAACqE,eAAe,EAAE;QAAE2C,WAAW,EAAE;MAAK,CAAC;IACjD,CAAC,CAAC;IAAEnd,gBAAgB,EAAE,CAAC;MACnBxG,IAAI,EAAEhI,wDAAY;MAClB2kB,IAAI,EAAE,CAAC8E,gBAAgB;IAC3B,CAAC,CAAC;IAAE/a,oBAAoB,EAAE,CAAC;MACvB1G,IAAI,EAAEhI,wDAAY;MAClB2kB,IAAI,EAAE,CAAC0E,oBAAoB;IAC/B,CAAC,CAAC;IAAEzC,IAAI,EAAE,CAAC;MACP5e,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,aAAa;IACxB,CAAC,CAAC;IAAEvM,QAAQ,EAAE,CAAC;MACXpQ,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC,CAAC;IAAEkG,mBAAmB,EAAE,CAAC;MACtB7iB,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,oBAAoB;IAC/B,CAAC,CAAC;IAAEtV,eAAe,EAAE,CAAC;MAClBrH,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC,CAAC;IAAExa,cAAc,EAAE,CAAC;MACjBnC,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,mBAAmB;IAC9B,CAAC,CAAC;IAAE4F,gBAAgB,EAAE,CAAC;MACnBviB,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,yBAAyB;IACpC,CAAC,CAAC;IAAEhc,QAAQ,EAAE,CAAC;MACXX,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC,CAAC;IAAE5X,iBAAiB,EAAE,CAAC;MACpB/E,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,0BAA0B;IACrC,CAAC,CAAC;IAAErP,YAAY,EAAE,CAAC;MACftN,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,qBAAqB;IAChC,CAAC,CAAC;IAAEzK,gBAAgB,EAAE,CAAC;MACnBlS,IAAI,EAAEvI,iDAAK;MACXklB,IAAI,EAAE,CAAC,yBAAyB;IACpC,CAAC,CAAC;IAAEta,OAAO,EAAE,CAAC;MACVrC,IAAI,EAAEnI,kDAAM;MACZ8kB,IAAI,EAAE,CAAC,gBAAgB;IAC3B,CAAC,CAAC;IAAEra,QAAQ,EAAE,CAAC;MACXtC,IAAI,EAAEnI,kDAAM;MACZ8kB,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC,CAAC;IAAEpa,KAAK,EAAE,CAAC;MACRvC,IAAI,EAAEnI,kDAAM;MACZ8kB,IAAI,EAAE,CAAC,cAAc;IACzB,CAAC,CAAC;IAAEna,OAAO,EAAE,CAAC;MACVxC,IAAI,EAAEnI,kDAAM;MACZ8kB,IAAI,EAAE,CAAC,gBAAgB;IAC3B,CAAC,CAAC;IAAEla,MAAM,EAAE,CAAC;MACTzC,IAAI,EAAEnI,kDAAM;MACZ8kB,IAAI,EAAE,CAAC,eAAe;IAC1B,CAAC,CAAC;IAAEja,OAAO,EAAE,CAAC;MACV1C,IAAI,EAAEnI,kDAAM;MACZ8kB,IAAI,EAAE,CAAC,gBAAgB;IAC3B,CAAC,CAAC;IAAEha,KAAK,EAAE,CAAC;MACR3C,IAAI,EAAEnI,kDAAM;MACZ8kB,IAAI,EAAE,CAAC,cAAc;IACzB,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMiH,oBAAoB,GAAG,CACzB1F,WAAW,EACXb,gBAAgB,EAChBwE,OAAO,EACPZ,aAAa,EACbS,cAAc,EACdJ,kBAAkB,CACrB;AACD,MAAMvtB,cAAc,CAAC;AAErBA,cAAc,CAACyoB,IAAI;EAAA,iBAA6FzoB,cAAc;AAAA,CAAkD;AAChLA,cAAc,CAAC8vB,IAAI,kBApmCqFpwB,+DAAE;EAAA,MAomCOM;AAAc,EAUjG;AAC9BA,cAAc,CAAC+vB,IAAI,kBA/mCqFrwB,+DAAE;EAAA,WA+mCkC,CAACspB,QAAQ,CAAC;EAAA,UAAY3kB,wEAAmB;AAAA,EAAI;AACzL;EAAA,mDAhnCwG3E,gEAAE,CAgnCVM,cAAc,EAAc,CAAC;IACjHiM,IAAI,EAAE/H,oDAAQ;IACd0kB,IAAI,EAAE,CAAC;MACCzpB,OAAO,EAAE0wB,oBAAoB;MAC7BzwB,OAAO,EAAE,CAACiF,wEAAmB,EAAE,GAAGwrB,oBAAoB,CAAC;MACvDhG,SAAS,EAAE,CAACb,QAAQ;IACxB,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","sources":["./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.module.ts","./src/app/admin/tutorial-editor/tutorial-editor.component.ts","./src/app/admin/tutorial-editor/tutorial-editor.component.html","./src/app/admin/tutorial-list/tutorial-list.component.html","./src/app/admin/tutorial-list/tutorial-list.component.ts","./src/app/admin/users-list/users-list.component.html","./src/app/admin/users-list/users-list.component.ts","./node_modules/rxjs/dist/esm/internal/observable/interval.js","./node_modules/@angular/cdk/fesm2020/drag-drop.mjs"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminComponent } from './admin.component';\r\nimport { TutorialEditorComponent } from './tutorial-editor/tutorial-editor.component';\r\nimport { TutorialListComponent } from './tutorial-list/tutorial-list.component';\r\nimport { UsersListComponent } from './users-list/users-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'', component:AdminComponent,\r\n    children:[\r\n      {\r\n        path :'',\r\n        component:TutorialListComponent\r\n      },\r\n      {\r\n        path :'users',\r\n        component:UsersListComponent\r\n      },\r\n      {\r\n        path:'editor',\r\n        component:TutorialEditorComponent\r\n      }  \r\n    ]\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent {\n\n}\n","\n   \n    <mat-toolbar class=\"top-bar\" color=\"primary\">\n        <div  class=\"brand\">\n          <a class=\"logo\"  routerLink=\"/dashboard\" routerLinkActive=\"active\"> <i class=\"fa fa-code\"></i> ngLearn</a>\n        </div>\n     \n\n\n   \n       \n      </mat-toolbar>\n      \n      <div class=\"main-content\">\n        <div class=\"left-bar\">\n          <button routerLink=\"/dashboard\" class=\"navBtn\" mat-icon-button >\n            <mat-icon >local_library</mat-icon>\n            <label for=\"\">Tutorials</label>\n          </button>\n          <button routerLink=\"users\" class=\"navBtn\" mat-icon-button >\n            <mat-icon >people</mat-icon>\n            <label for=\"\">Users</label>\n          </button>\n          <button routerLink=\"editor\" class=\"navBtn\" mat-icon-button >\n            <mat-icon >mode_edit</mat-icon>\n            <label for=\"\">Editor</label>\n          </button>\n        </div>\n      \n        <div class=\"page-content\">\n     \n          <router-outlet></router-outlet>\n        </div>\n      </div>\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminComponent } from './admin.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { TutorialListComponent } from './tutorial-list/tutorial-list.component';\nimport { TutorialEditorComponent } from './tutorial-editor/tutorial-editor.component';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuillModule } from 'ngx-quill';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { AdminRoutingModule } from './admin-routing.module';\n\n\n@NgModule({\n  declarations: [\n    AdminComponent,\n    UsersListComponent,\n    TutorialListComponent,\n    TutorialEditorComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MaterialModule,\n    DragDropModule,\n    QuillModule,\n    ReactiveFormsModule,\n    AdminRoutingModule\n  ]\n})\nexport class AdminModule { }\n","import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-tutorial-editor',\n  templateUrl: './tutorial-editor.component.html',\n  styleUrls: ['./tutorial-editor.component.scss']\n})\nexport class TutorialEditorComponent {\n  blogForm: FormGroup;\n  selectedContentIndex: number;\n  isContent: Boolean = true;\n  modules = {\n    scrollingContainer: '.form-group',\n    syntax: true,\n    toolbar: [\n    ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n    ['blockquote', 'code-block'], // Code Block\n    [{ 'header': 1 }, { 'header': 2 }], // custom button values\n    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n    [{ 'script': 'sub' }, { 'script': 'super' }], // superscript/subscript\n    [{ 'indent': '-1' }, { 'indent': '+1' }], // outdent/indent\n    [{ 'direction': 'rtl' }], // text direction\n    [{ 'size': ['small', false, 'large', 'huge'] }], // custom dropdown\n    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n    [{ 'color': [] }, { 'background': [] }], // dropdown with defaults from theme\n    [{ 'font': [] }],\n    [{ 'align': [] }],\n    ['clean'], // remove formatting button\n    ['link', 'image'], // link and image, video\n    ]\n    };\n   constructor(public dialog: MatDialog) {\n    this.blogForm = new FormGroup({\n      title: new FormControl('This is One'),\n      about: new FormControl(''),\n      image: new FormControl(''),\n      contents: new FormArray(\n        this.createMainContents()\n      )\n    });\n    this.selectedContentIndex = 0;\n  }\n  drop(event: any) {\n    moveItemInArray(this.contents.controls, event.previousIndex, event.currentIndex);\n  }\n  ngOnInit(): void {\n  }\n  createMainContents() {\n    let contents=[];\n    let content = new FormGroup({\n      title: new FormControl('Introduction'),\n      content: new FormControl('')\n    })\n    let content2 = new FormGroup({\n      title: new FormControl('Conclusion'),\n      content: new FormControl('')\n    })\n    contents.push(content);\n    contents.push(content2);\n    return contents;\n  }\n  createContentFormGroup(id:number): FormGroup {\n    return new FormGroup({\n      title: new FormControl('Content Part : '+(id-1)),\n      content: new FormControl('')\n    });\n  }\n\n  addContent(): void {\n    const contents = this.blogForm.get('contents') as FormArray;\n    contents.push(this.createContentFormGroup(contents.length));\n    this.selectedContentIndex = contents.length - 1;\n  }\n\n  selectContent(index: number): void {\n    this.selectedContentIndex = index;\n  }\n\n  get selectedContent(): FormGroup {\n    const contents = this.blogForm.get('contents') as FormArray;\n    return contents.at(this.selectedContentIndex) as FormGroup;\n  }\n\n  get title(): FormControl {\n    return this.blogForm.get('title') as FormControl;\n  }\n\n  get subtitle(): FormControl {\n    return this.blogForm.get('subtitle') as FormControl;\n  }\n\n  get image(): FormControl {\n    return this.blogForm.get('image') as FormControl;\n  }\n\n  get contents(): FormArray {\n    return this.blogForm.get('contents') as FormArray;\n  }\n\n  onSubmit(): void {\n    // Handle form submission\n  }\n  goContent() {\n    this.isContent = true;\n    this.addContent()\n  }\n  removeContent(index: number) {\n    this.contents.removeAt(index);\n  }\n  onDrop(event: any) {\n    moveItemInArray(this.contents.controls, event.previousIndex, event.currentIndex);\n  }\n  openPreview(){\n\n  }\n}\n","<form [formGroup]=\"blogForm\" class=\"container\">\n    <mat-card *ngIf=\"!isContent\" class=\"card\">\n        <mat-form-field>\n            <mat-label>Blog Title</mat-label>\n            <input formControlName=\"title\" matInput placeholder=\"Enter Title\">\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Blog Image URL</mat-label>\n            <input formControlName=\"image\" matInput placeholder=\"Enter Image URL\">\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\">\n            <mat-label>Blog About Section</mat-label>\n            <textarea formControlName=\"about\" matInput\n                placeholder=\"Explain About Blog \">1600 Amphitheatre Pkwy</textarea>\n        </mat-form-field>\n\n        <button (click)=\"goContent()\" mat-raised-button>Add Content</button>\n    </mat-card>\n    <div *ngIf=\"isContent\" class=\"content-container\">\n        <div class=\"sidenav\">\n            <div cdkDropList (cdkDropListDropped)=\"onDrop($event)\" class=\"navList\">\n                <mat-card  cdkDrag class=\"navItem\" *ngFor=\"let content of contents.controls; let i = index\"\n                    [class.selected]=\"i === selectedContentIndex\" (click)=\"selectContent(i)\" >\n                    <mat-icon cdkDragHandle>drag_indicator</mat-icon>\n                     <p> {{ content.get('title')?.value }}</p> \n                    <mat-icon color=\"warn\" (click)=\"removeContent(i)\" >delete</mat-icon>\n                </mat-card>\n            </div>\n            <div class=\"actions\">\n                <button (click)=\"openPreview()\"  mat-button> Preview </button>\n                <button  mat-button (click)=\"addContent()\"> <mat-icon>add</mat-icon>Add Content </button>\n            </div>\n        </div>\n        <div *ngIf=\"!contents.controls.length\" class=\"msg\">\n           <p>Add Content First !!</p>\n        </div>\n        <form *ngIf=\"contents.controls.length\" [formGroup]=\"selectedContent\" class=\"content-form\">\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Title</mat-label>\n                <input formControlName=\"title\" matInput placeholder=\"Enter  Content Title\">\n            </mat-form-field>\n            <div class=\"form-group\" >\n                <quill-editor [modules]=\"modules\"   formControlName=\"content\"></quill-editor>\n            </div>\n        </form>\n    </div>\n\n</form>","\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\">  \n        <mat-slide-toggle></mat-slide-toggle>  \n      </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  \n  <div class=\"pagination\">\n    <button color=\"primary\" mat-raised-button>Previous</button>\n    <button color=\"accent\" mat-raised-button>Next</button>\n</div>","import { Component } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n@Component({\n  selector: 'app-tutorial-list',\n  templateUrl: './tutorial-list.component.html',\n  styleUrls: ['./tutorial-list.component.scss']\n})\nexport class TutorialListComponent {\n  color: ThemePalette = 'accent';\n  checked = false;\n  disabled = false;\n  dataSource: PeriodicElement[] = [\n    {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n    {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n    {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n    {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n    {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n    {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n    {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n    {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n    {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n    {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  ];\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n\n\n  \n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"weight\">\n      <th mat-header-cell *matHeaderCellDef> Weight </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"symbol\">\n      <th mat-header-cell *matHeaderCellDef> Symbol </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  \n    \n  <div class=\"pagination\">\n    <button color=\"primary\" mat-raised-button>Previous</button>\n    <button color=\"accent\" mat-raised-button>Next</button>\n</div>","import { Component } from '@angular/core';\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss']\n})\nexport class UsersListComponent {\n  dataSource: PeriodicElement[] = [\n    {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n    {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n    {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n    {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n    {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n    {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n    {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n    {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n ];\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { timer } from './timer';\nexport function interval(period = 0, scheduler = asyncScheduler) {\n    if (period < 0) {\n        period = 0;\n    }\n    return timer(period, period, scheduler);\n}\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, Optional, SkipSelf, Output, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height,\n        x: clientRect.x,\n        y: clientRect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\n        }\n    }\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = false;\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        event.preventDefault();\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                // If there's a position constraint function, we want the element's top/left to be at the\n                // specific position on the page. Use the initial position as a reference if that's the case.\n                const offset = this.constrainPosition ? this._initialClientRect : this._pickupPositionOnPage;\n                const activeTransform = this._activeTransform;\n                activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n                activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            this._rootElement?.remove();\n        }\n        this._anchor?.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        this._preview?.remove();\n        this._previewRef?.destroy();\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        this._placeholder?.remove();\n        this._placeholderRef?.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this, event });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                    event,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor = this._anchor || this._document.createComment(''));\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = this._createPreviewElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\n            this.started.next({ source: this, event }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this, event });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._initialClientRect = this._rootElement.getBoundingClientRect();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(this._initialClientRect, referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._initialClientRect =\n            this._boundaryRect =\n                this._previewRect =\n                    this._initialTransform =\n                        undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition, event });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n                event,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            if (this.constrainPosition) {\n                this._applyPreviewTransform(x, y);\n            }\n            else {\n                this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n            }\n        }\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._initialClientRect : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            preview = deepCloneNode(this._rootElement);\n            matchElementSize(preview, this._initialClientRect);\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': `${this._config.zIndex || 1000}`,\n        }, dragImportantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event ||\n                        (_getEventTarget(event) === this._preview && event.propertyName === 'transform')) {\n                        this._preview?.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(elementRect, referenceElement, event) {\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition\n            ? this.constrainPosition(point, this, this._initialClientRect, this._pickupPositionInElement)\n            : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.style.transform = combineTransforms(transform, initialTransform);\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // ClientRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary ClientRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        return (this._parentPositions.positions.get(this._document)?.scrollPosition ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = this._preview\n                ? this._preview.getBoundingClientRect()\n                : this._initialClientRect;\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n    constructor(_element, _dragDropRegistry) {\n        this._element = _element;\n        this._dragDropRegistry = _dragDropRegistry;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /** Direction in which the list is oriented. */\n        this.orientation = 'vertical';\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = {\n            drag: null,\n            delta: 0,\n            overlaps: false,\n        };\n    }\n    /**\n     * To be called when the drag sequence starts.\n     * @param items Items that are currently in the list.\n     */\n    start(items) {\n        this.withItems(items);\n    }\n    /**\n     * To be called when an item is being sorted.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    sort(item, pointerX, pointerY, pointerDelta) {\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return null;\n        }\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        return { previousIndex: currentIndex, currentIndex: newIndex };\n    }\n    /**\n     * Called when an item is being moved into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        const newIndex = index == null || index < 0\n            ? // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                this._getItemIndexFromPointerPosition(item, pointerX, pointerY)\n            : index;\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this._element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that usually `start` is called together with `enter` when an item goes into a new\n        // container. This will cache item positions, but we need to refresh them since the amount\n        // of items has changed.\n        this._cacheItemPositions();\n    }\n    /** Sets the items that are currently part of the list. */\n    withItems(items) {\n        this._activeDraggables = items.slice();\n        this._cacheItemPositions();\n    }\n    /** Assigns a sort predicate to the strategy. */\n    withSortPredicate(predicate) {\n        this._sortPredicate = predicate;\n    }\n    /** Resets the strategy to its initial state before dragging was started. */\n    reset() {\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._itemPositions = [];\n        this._activeDraggables = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n    }\n    /**\n     * Gets a snapshot of items currently in the list.\n     * Can include items that we dragged in from another list.\n     */\n    getActiveItemsSnapshot() {\n        return this._activeDraggables;\n    }\n    /** Gets the index of a specific item. */\n    getItemIndex(item) {\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this.orientation === 'horizontal' && this.direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /** Used to notify the strategy that the scroll position has changed. */\n    updateOnScroll(topDifference, leftDifference) {\n        // Since we know the amount that the user has scrolled we can shift all of the\n        // client rectangles ourselves. This is cheaper than re-measuring everything and\n        // we can avoid inconsistent behavior where we might be measuring the element before\n        // its position has changed.\n        this._itemPositions.forEach(({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        });\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach(({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        });\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this.orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this.orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Function that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Emits when a dragging sequence is started in a list connected to the current one. */\n        this.receivingStarted = new Subject();\n        /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n        this.receivingStopped = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === 1 /* AutoScrollVerticalDirection.UP */) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === 2 /* AutoScrollVerticalDirection.DOWN */) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === 2 /* AutoScrollHorizontalDirection.RIGHT */) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n        this._sortStrategy = new SingleAxisSortStrategy(this.element, _dragDropRegistry);\n        this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this.receivingStarted.complete();\n        this.receivingStopped.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Attempts to move an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        if (index == null && this.sortingDisabled) {\n            index = this._draggables.indexOf(item);\n        }\n        this._sortStrategy.enter(item, pointerX, pointerY, index);\n        // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n        // can change when the sort strategy moves the item around inside `enter`.\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param event Event that triggered the dropping sequence.\n     *\n     * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n            event,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._sortStrategy.withItems(this._draggables);\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._sortStrategy.direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        // TODO(crisbeto): eventually we should be constructing the new sort strategy here based on\n        // the new orientation. For now we can assume that it'll always be `SingleAxisSortStrategy`.\n        this._sortStrategy.orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        return this._isDragging\n            ? this._sortStrategy.getItemIndex(item)\n            : this._draggables.indexOf(item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n        if (result) {\n            this.sorted.next({\n                previousIndex: result.previousIndex,\n                currentIndex: result.currentIndex,\n                container: this,\n                item,\n            });\n        }\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._sortStrategy.start(this._draggables);\n        this._cacheParentPositions();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._sortStrategy.reset();\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect ||\n            !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n            this.receivingStarted.next({\n                initiator: sibling,\n                receiver: this,\n                items,\n            });\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n        this.receivingStopped.next({ initiator: sibling, receiver: this });\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._sortStrategy\n            .getActiveItemsSnapshot()\n            .filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* AutoScrollVerticalDirection.UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* AutoScrollVerticalDirection.DOWN */;\n    }\n    return 0 /* AutoScrollVerticalDirection.NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* AutoScrollHorizontalDirection.LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* AutoScrollHorizontalDirection.RIGHT */;\n    }\n    return 0 /* AutoScrollHorizontalDirection.NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n    let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* AutoScrollVerticalDirection.UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* AutoScrollVerticalDirection.UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* AutoScrollVerticalDirection.DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* AutoScrollHorizontalDirection.LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* AutoScrollHorizontalDirection.RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances.length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDropRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDrop.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDrop, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropListGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDropListGroup, isStandalone: true, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    standalone: true,\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDropListGroupDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                item: dropEvent.item.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n        merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i3.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropList.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDropList, isStandalone: true, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n        // Prevent child drop lists from picking up the same group as their parent.\n        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n    ], exportAs: [\"cdkDropList\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    standalone: true,\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: CdkDropListGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DROP_LIST_GROUP]\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }]; }, propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDropListDisabled']\n            }], sortingDisabled: [{\n                type: Input,\n                args: ['cdkDropListSortingDisabled']\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollDisabled']\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragHandle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDragHandle, isStandalone: true, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDragHandleDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDragPlaceholder, isStandalone: true, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() {\n        return this._matchSize;\n    }\n    set matchSize(value) {\n        this._matchSize = coerceBooleanProperty(value);\n    }\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n}\nCdkDragPreview.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPreview.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDragPreview, isStandalone: true, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: \"matchSize\" }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config?.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this._ngZone.runOutsideAngular(() => {\n            // We need to wait for the zone to stabilize, in order for the reference\n            // element to be in the proper place in the DOM. This is mostly relevant\n            // for draggable elements inside portals since they get stamped out in\n            // their original DOM position and then they get transferred to the portal.\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                this._updateRootElement();\n                this._setupHandlesListener();\n                if (this.freeDragPosition) {\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        element.parentElement?.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })?._dragRef || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(startEvent => {\n            this.started.emit({ source: this, event: startEvent.event });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(releaseEvent => {\n            this.released.emit({ source: this, event: releaseEvent.event });\n        });\n        ref.ended.subscribe(endEvent => {\n            this.ended.emit({\n                source: this,\n                distance: endEvent.distance,\n                dropPoint: endEvent.dropPoint,\n                event: endEvent.event,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(enterEvent => {\n            this.entered.emit({\n                container: enterEvent.container.data,\n                item: this,\n                currentIndex: enterEvent.currentIndex,\n            });\n        });\n        ref.exited.subscribe(exitEvent => {\n            this.exited.emit({\n                container: exitEvent.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                item: this,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles.changes\n            .pipe(startWith(this._handles), \n        // Sync the new handles with the DragRef.\n        tap((handles) => {\n            const childHandleElements = handles\n                .filter(handle => handle._parentDrag === this)\n                .map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                childHandleElements.push(this.element);\n            }\n            this._dragRef.withHandles(childHandleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => {\n                return item._stateChanges.pipe(startWith(item));\n            }));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n}\nCdkDrag._dragInstances = [];\nCdkDrag.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i3.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDrag.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDrag, isStandalone: true, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], queries: [{ propertyName: \"_previewTemplate\", first: true, predicate: CDK_DRAG_PREVIEW, descendants: true }, { propertyName: \"_placeholderTemplate\", first: true, predicate: CDK_DRAG_PLACEHOLDER, descendants: true }, { propertyName: \"_handles\", predicate: CDK_DRAG_HANDLE, descendants: true }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    standalone: true,\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DROP_LIST]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_HANDLE]\n                }] }, { type: CdkDrag, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }] }]; }, propDecorators: { _handles: [{\n                type: ContentChildren,\n                args: [CDK_DRAG_HANDLE, { descendants: true }]\n            }], _previewTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PREVIEW]\n            }], _placeholderTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PLACEHOLDER]\n            }], data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDragDisabled']\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DRAG_DROP_DIRECTIVES = [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n];\nclass DragDropModule {\n}\nDragDropModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDragDropModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropModule, imports: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder], exports: [CdkScrollableModule, CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder] });\nDragDropModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: DRAG_DROP_DIRECTIVES,\n                    exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n"],"names":["RouterModule","AdminComponent","TutorialEditorComponent","TutorialListComponent","UsersListComponent","routes","path","component","children","AdminRoutingModule","forChild","imports","exports","selectors","decls","vars","consts","template","i0","CommonModule","MaterialModule","FormsModule","ReactiveFormsModule","QuillModule","DragDropModule","AdminModule","declarations","FormArray","FormControl","FormGroup","moveItemInArray","constructor","dialog","scrollingContainer","syntax","toolbar","blogForm","title","about","image","contents","createMainContents","selectedContentIndex","drop","event","controls","previousIndex","currentIndex","ngOnInit","content","content2","push","createContentFormGroup","id","addContent","get","length","selectContent","index","selectedContent","at","subtitle","onSubmit","goContent","isContent","removeContent","removeAt","onDrop","openPreview","position","name","weight","symbol","asyncScheduler","timer","interval","period","scheduler","Injectable","Inject","InjectionToken","Directive","Input","EventEmitter","Optional","SkipSelf","Output","Self","ContentChildren","ContentChild","NgModule","DOCUMENT","i1","CdkScrollableModule","_getEventTarget","normalizePassiveListenerOptions","_getShadowRoot","coerceBooleanProperty","coerceElement","coerceArray","coerceNumberProperty","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","Subject","Subscription","animationFrameScheduler","Observable","merge","takeUntil","startWith","map","take","tap","switchMap","i3","extendStyles","dest","source","importantProperties","key","hasOwnProperty","value","setProperty","has","removeProperty","toggleNativeDragInteractions","element","enable","userSelect","style","toggleVisibility","top","opacity","left","combineTransforms","transform","initialTransform","parseCssTimeUnitsToMs","multiplier","toLowerCase","indexOf","parseFloat","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","find","prop","propertyIndex","rawDurations","rawDelays","getPropertyValue","split","part","trim","getMutableClientRect","clientRect","getBoundingClientRect","right","bottom","width","height","x","y","isInsideClientRect","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","_document","positions","Map","clear","cache","elements","set","scrollPosition","getViewportScrollPosition","forEach","scrollTop","scrollLeft","handleScroll","target","cachedPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","node","contains","window","scrollY","scrollX","deepCloneNode","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","removeAttribute","i","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","type","context","getContext","drawImage","passiveEventListenerOptions","passive","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","Set","DragRef","disabled","_disabled","_dropContainer","newValue","_toggleNativeDragInteractions","_handles","handle","_config","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","_pointerMoveSubscription","EMPTY","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_disabledHandles","_direction","dragStartDelay","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","next","targetHandle","_getTargetHandle","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","distanceX","Math","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_getDragStartDelay","container","_endDragSequence","isDragging","isReceiving","preventDefault","run","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","offset","constrainPosition","_initialClientRect","activeTransform","_applyRootElementTransform","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","disabledHandles","add","withPreviewTemplate","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","runOutsideAngular","addEventListener","_initialTransform","undefined","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","unsubscribe","change","subscribe","_containInsideBoundaryOnResize","parent","_parentDragRef","dispose","remove","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","complete","reset","disableHandle","enableHandle","delete","withDirection","direction","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_preview","_previewRef","destroy","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","dropContainer","parentNode","placeholder","_createPlaceholderElement","anchor","createComment","shadowRoot","insertBefore","_createPreviewElement","body","appendChild","replaceChild","_getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","isPointerOverContainer","_isOverContainer","item","previousContainer","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","previewConfig","previewClass","preview","rootRect","viewRef","viewContainer","createEmbeddedView","detectChanges","getRootNode","matchElementSize","getTransform","zIndex","classList","setAttribute","Array","isArray","className","Promise","resolve","placeholderRect","duration","handler","propertyName","removeEventListener","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","round","min","max","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","sourceRect","array","fromIndex","toIndex","from","clamp","to","transferArrayItem","currentArray","targetArray","targetIndex","splice","copyArrayItem","SingleAxisSortStrategy","_element","_itemPositions","orientation","_previousSwap","drag","overlaps","items","withItems","sort","pointerDelta","siblings","newIndex","_getItemIndexFromPointerPosition","isHorizontal","findIndex","currentItem","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","slice","sibling","isDraggedItem","elementToOffset","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","parentElement","_cacheItemPositions","withSortPredicate","predicate","_sortPredicate","p","getActiveItemsSnapshot","reverse","updateOnScroll","elementToMeasure","a","b","immediateSibling","end","itemPositions","reversed","lastItemRect","firstItemRect","floor","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","receivingStarted","receivingStopped","_isDragging","_draggables","_siblings","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","pipe","_scrollNode","scrollStep","scrollBy","withScrollableParents","registerDropContainer","_sortStrategy","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_cacheParentPositions","_reset","previousItems","draggedItems","filter","every","connectedTo","withOrientation","_scrollableElements","size","_clientRect","result","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","_stopReceiving","_canReceive","elementFromPoint","nativeElement","_startReceiving","activeSiblings","initiator","receiver","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","some","startsWith","e","options","config","_clearGlobalListeners","streams","observer","eventOptions","ngOnDestroy","instance","ɵfac","NgZone","ɵprov","args","providedIn","decorators","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","ViewportRuler","CDK_DRAG_PARENT","CDK_DROP_LIST_GROUP","CdkDropListGroup","_items","ɵdir","provide","useExisting","exportAs","standalone","providers","CDK_DRAG_CONFIG","assertElementNode","Error","_uniqueIdCounter","CDK_DROP_LIST","CdkDropList","_group","_dropListRef","dragDrop","_changeDetectorRef","_scrollDispatcher","_dir","_destroyed","_unsortedItems","ngDevMode","data","_assignDefaults","_setupInputSyncSubscription","_handleEvents","_dropLists","addItem","_syncItemsWithRef","removeItem","getSortedItems","documentPosition","_dragRef","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","ref","correspondingDropList","list","console","warn","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","markForCheck","emit","dropEvent","draggingDisabled","listAutoScrollDisabled","listOrientation","ElementRef","ChangeDetectorRef","ScrollDispatcher","Directionality","useValue","host","CDK_DRAG_HANDLE","CdkDragHandle","_stateChanges","parentDrag","_parentDrag","CDK_DRAG_PLACEHOLDER","CdkDragPlaceholder","templateRef","TemplateRef","CDK_DRAG_PREVIEW","CdkDragPreview","_matchSize","DRAG_HOST_CLASS","CdkDrag","_viewContainerRef","_selfHandle","subscription","movedEvent","_syncInputs","ngAfterViewInit","onStable","_updateRootElement","_setupHandlesListener","freeDragPosition","ngOnChanges","changes","rootSelectorChange","positionChange","firstChange","rootElementSelector","closest","_getBoundaryElement","boundary","dir","startEvent","releaseEvent","endEvent","enterEvent","exitEvent","childHandleElements","handleInstance","dragRef","ViewContainerRef","descendants","DRAG_DROP_DIRECTIVES","ɵmod","ɵinj"],"sourceRoot":"webpack:///","x_google_ignoreList":[10,11]}